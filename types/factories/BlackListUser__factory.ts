/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BlackListUser, BlackListUserInterface } from "../BlackListUser";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "checkUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_status",
        type: "uint256",
      },
    ],
    name: "setUserStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "enum BlackListUser.STATUS",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWarning",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastWarning",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "suspendAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "warningUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61083f8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610127578063ea0d5dcd14610142578063f2fde38b14610155578063f71cc3a51461016857600080fd5b80631959a0021461008d578063410e9385146100e9578063715018a61461010a5780637bf67e0114610114575b600080fd5b6100cf61009b36600461071e565b60016020819052600091825260409091208054918101546002820154600383015460049093015460ff909416939192909185565b6040516100e0959493929190610761565b60405180910390f35b6100fc6100f736600461071e565b61017b565b6040519081526020016100e0565b6101126102b6565b005b61011261012236600461071e565b610321565b6000546040516001600160a01b0390911681526020016100e0565b6100fc61015036600461071e565b6104ac565b61011261016336600461071e565b6104ed565b610112610176366004610738565b6105b8565b6001600160a01b03811660009081526001602052604081206002815460ff1660028111156101b957634e487b7160e01b600052602160045260246000fd5b14806101e857506000815460ff1660028111156101e657634e487b7160e01b600052602160045260246000fd5b145b1561021857805460ff16600281111561021157634e487b7160e01b600052602160045260246000fd5b9392505050565b600061023e6201518061023884600301544261068190919063ffffffff16565b9061068d565b905060008111801561027357506001825460ff16600281111561027157634e487b7160e01b600052602160045260246000fd5b145b1561029257815460ff191682556000600183018190555b949350505050565b815460ff16600281111561028a57634e487b7160e01b600052602160045260246000fd5b6000546001600160a01b031633146103155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61031f6000610699565b565b6000546001600160a01b0316331461037b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030c565b6001600160a01b038116600090815260016020526040812090815460ff1660028111156103b857634e487b7160e01b600052602160045260246000fd5b146104135760405162461bcd60e51b815260206004820152602560248201527f43616e2774207761726e696e67206e6f74206e6f726d616c20737461747573206044820152643ab9b2b91760d91b606482015260840161030c565b60006104336201518061023884600301544261068190919063ffffffff16565b9050806104a257600182810154610449916106f6565b6001830181905560021161049d57815460ff1916600190811783556000818401556002830154610478916106f6565b60028084018290554260038501551161049d57815460ff191660021782554260048301555b505050565b5060019081015550565b6001600160a01b03811660009081526001602052604081205460ff1660028111156104e757634e487b7160e01b600052602160045260246000fd5b92915050565b6000546001600160a01b031633146105475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030c565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161030c565b6105b581610699565b50565b6000546001600160a01b031633146106125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030c565b80600281111561063257634e487b7160e01b600052602160045260246000fd5b6001600160a01b03831660009081526001602081905260409091208054909160ff199091169083600281111561067857634e487b7160e01b600052602160045260246000fd5b02179055505050565b600061021182846107dc565b600061021182846107bc565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061021182846107a4565b80356001600160a01b038116811461071957600080fd5b919050565b60006020828403121561072f578081fd5b61021182610702565b6000806040838503121561074a578081fd5b61075383610702565b946020939093013593505050565b60a081016003871061078357634e487b7160e01b600052602160045260246000fd5b95815260208101949094526040840192909252606083015260809091015290565b600082198211156107b7576107b76107f3565b500190565b6000826107d757634e487b7160e01b81526012600452602481fd5b500490565b6000828210156107ee576107ee6107f3565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202d6f372dd2926f2079d55882afa98d351c406699e0f5835e4e23b7013a9edea864736f6c63430008040033";

export class BlackListUser__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlackListUser> {
    return super.deploy(overrides || {}) as Promise<BlackListUser>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BlackListUser {
    return super.attach(address) as BlackListUser;
  }
  connect(signer: Signer): BlackListUser__factory {
    return super.connect(signer) as BlackListUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlackListUserInterface {
    return new utils.Interface(_abi) as BlackListUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlackListUser {
    return new Contract(address, _abi, signerOrProvider) as BlackListUser;
  }
}
