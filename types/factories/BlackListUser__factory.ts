/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BlackListUser, BlackListUserInterface } from "../BlackListUser";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "checkUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_status",
        type: "uint256",
      },
    ],
    name: "setUserStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "warningUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107b98061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c5578063ea0d5dcd146100e0578063f2fde38b146100f3578063f71cc3a51461010657600080fd5b8063410e938514610082578063715018a6146100a85780637bf67e01146100b2575b600080fd5b6100956100903660046106db565b610119565b6040519081526020015b60405180910390f35b6100b0610239565b005b6100b06100c03660046106db565b6102a4565b6000546040516001600160a01b03909116815260200161009f565b6100956100ee3660046106db565b610447565b6100b06101013660046106db565b610488565b6100b06101143660046106f5565b61056a565b6001600160a01b03811660009081526001602052604081206002815460ff16600281111561015757634e487b7160e01b600052602160045260246000fd5b148061018657506000815460ff16600281111561018457634e487b7160e01b600052602160045260246000fd5b145b156101b657805460ff1660028111156101af57634e487b7160e01b600052602160045260246000fd5b9392505050565b60006101dc620151806101d684600301544261063390919063ffffffff16565b9061063f565b905060008111801561021157506001825460ff16600281111561020f57634e487b7160e01b600052602160045260246000fd5b145b1561022f57815460ff19168255600060018301819055949350505050565b5060009392505050565b6000546001600160a01b031633146102985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102a2600061064b565b565b6000546001600160a01b031633146102fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b038116600090815260016020526040812090815460ff16600281111561033b57634e487b7160e01b600052602160045260246000fd5b146103ae5760405162461bcd60e51b815260206004820152602560248201527f43616e2774207761726e696e67206e6f74206e6f726d616c207374617475732060448201527f757365722e000000000000000000000000000000000000000000000000000000606482015260840161028f565b60006103ce620151806101d684600301544261063390919063ffffffff16565b90508061043d576001828101546103e4916106b3565b6001830181905560021161043857815460ff1916600190811783556000818401556002830154610413916106b3565b60028084018290554260038501551161043857815460ff191660021782554260048301555b505050565b5060019081015550565b6001600160a01b03811660009081526001602052604081205460ff16600281111561048257634e487b7160e01b600052602160045260246000fd5b92915050565b6000546001600160a01b031633146104e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b03811661055e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028f565b6105678161064b565b50565b6000546001600160a01b031633146105c45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b8060028111156105e457634e487b7160e01b600052602160045260246000fd5b6001600160a01b03831660009081526001602081905260409091208054909160ff199091169083600281111561062a57634e487b7160e01b600052602160045260246000fd5b02179055505050565b60006101af8284610756565b60006101af8284610736565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006101af828461071e565b80356001600160a01b03811681146106d657600080fd5b919050565b6000602082840312156106ec578081fd5b6101af826106bf565b60008060408385031215610707578081fd5b610710836106bf565b946020939093013593505050565b600082198211156107315761073161076d565b500190565b60008261075157634e487b7160e01b81526012600452602481fd5b500490565b6000828210156107685761076861076d565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220722bc5af2ece44143cec3e08ee84ac3878397de9102f06603033e64fcd54542864736f6c63430008040033";

export class BlackListUser__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlackListUser> {
    return super.deploy(overrides || {}) as Promise<BlackListUser>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BlackListUser {
    return super.attach(address) as BlackListUser;
  }
  connect(signer: Signer): BlackListUser__factory {
    return super.connect(signer) as BlackListUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlackListUserInterface {
    return new utils.Interface(_abi) as BlackListUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlackListUser {
    return new Contract(address, _abi, signerOrProvider) as BlackListUser;
  }
}
