/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BlackListUser, BlackListUserInterface } from "../BlackListUser";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "addBlackListUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "checkUserInBlackList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6108948061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063365b98b214610067578063715018a6146100975780638da5cb5b146100a1578063c4986060146100bf578063f2fde38b146100ef578063f89079441461010b575b600080fd5b610081600480360381019061007c91906105e4565b610127565b60405161008e9190610671565b60405180910390f35b61009f610166565b005b6100a96101ee565b6040516100b69190610671565b60405180910390f35b6100d960048036038101906100d491906105bb565b610217565b6040516100e6919061068c565b60405180910390f35b610109600480360381019061010491906105bb565b6102eb565b005b610125600480360381019061012091906105bb565b6103e3565b005b6001818154811061013757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61016e6104c5565b73ffffffffffffffffffffffffffffffffffffffff1661018c6101ee565b73ffffffffffffffffffffffffffffffffffffffff16146101e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d9906106c7565b60405180910390fd5b6101ec60006104cd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060005b6001805490508110156102e0578373ffffffffffffffffffffffffffffffffffffffff166001828154811061027b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102cd576001925050506102e6565b80806102d890610740565b91505061021d565b50809150505b919050565b6102f36104c5565b73ffffffffffffffffffffffffffffffffffffffff166103116101ee565b73ffffffffffffffffffffffffffffffffffffffff1614610367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035e906106c7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce906106a7565b60405180910390fd5b6103e0816104cd565b50565b6103eb6104c5565b73ffffffffffffffffffffffffffffffffffffffff166104096101ee565b73ffffffffffffffffffffffffffffffffffffffff161461045f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610456906106c7565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506105a081610830565b92915050565b6000813590506105b581610847565b92915050565b6000602082840312156105cd57600080fd5b60006105db84828501610591565b91505092915050565b6000602082840312156105f657600080fd5b6000610604848285016105a6565b91505092915050565b610616816106f8565b82525050565b6106258161070a565b82525050565b60006106386026836106e7565b9150610643826107b8565b604082019050919050565b600061065b6020836106e7565b915061066682610807565b602082019050919050565b6000602082019050610686600083018461060d565b92915050565b60006020820190506106a1600083018461061c565b92915050565b600060208201905081810360008301526106c08161062b565b9050919050565b600060208201905081810360008301526106e08161064e565b9050919050565b600082825260208201905092915050565b600061070382610716565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061074b82610736565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561077e5761077d610789565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610839816106f8565b811461084457600080fd5b50565b61085081610736565b811461085b57600080fd5b5056fea26469706673582212204d0bbbb0189b5662b6364f00b8453f7d04c334c9d4e15ad7e1fdaae90dc07c4764736f6c63430008040033";

export class BlackListUser__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlackListUser> {
    return super.deploy(overrides || {}) as Promise<BlackListUser>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BlackListUser {
    return super.attach(address) as BlackListUser;
  }
  connect(signer: Signer): BlackListUser__factory {
    return super.connect(signer) as BlackListUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlackListUserInterface {
    return new utils.Interface(_abi) as BlackListUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlackListUser {
    return new Contract(address, _abi, signerOrProvider) as BlackListUser;
  }
}
