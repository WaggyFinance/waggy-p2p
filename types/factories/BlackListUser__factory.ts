/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BlackListUser, BlackListUserInterface } from "../BlackListUser";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "checkUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_status",
        type: "uint256",
      },
    ],
    name: "setUserStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "enum BlackListUser.STATUS",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWarning",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastWarning",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "suspendAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "warningUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610857806100896000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f7578063ea0d5dcd1461010c578063f2fde38b1461011f578063f71cc3a51461013257610088565b80631959a0021461008d578063410e9385146100ba578063715018a6146100da5780637bf67e01146100e4575b600080fd5b6100a061009b366004610659565b610145565b6040516100b19594939291906106b0565b60405180910390f35b6100cd6100c8366004610659565b610179565b6040516100b191906107b3565b6100e26102bf565b005b6100e26100f2366004610659565b610313565b6100ff610447565b6040516100b1919061069c565b6100cd61011a366004610659565b610456565b6100e261012d366004610659565b610497565b6100e2610140366004610673565b610508565b60016020819052600091825260409091208054918101546002820154600383015460049093015460ff909416939192909185565b6001600160a01b03811660009081526001602052604081206002815460ff1660028111156101b757634e487b7160e01b600052602160045260246000fd5b14806101e657506000815460ff1660028111156101e457634e487b7160e01b600052602160045260246000fd5b145b1561021757805460ff16600281111561020f57634e487b7160e01b600052602160045260246000fd5b9150506102ba565b600061023d620151806102378460030154426105b690919063ffffffff16565b906105c9565b905060008111801561027257506001825460ff16600281111561027057634e487b7160e01b600052602160045260246000fd5b145b1561029157815460ff19168255600060018301819055925050506102ba565b815460ff1660028111156102b557634e487b7160e01b600052602160045260246000fd5b925050505b919050565b6102c76105d5565b6001600160a01b03166102d8610447565b6001600160a01b0316146103075760405162461bcd60e51b81526004016102fe9061077e565b60405180910390fd5b61031160006105d9565b565b61031b6105d5565b6001600160a01b031661032c610447565b6001600160a01b0316146103525760405162461bcd60e51b81526004016102fe9061077e565b6001600160a01b038116600090815260016020526040812090815460ff16600281111561038f57634e487b7160e01b600052602160045260246000fd5b146103ac5760405162461bcd60e51b81526004016102fe906106f3565b60006103cc620151806102378460030154426105b690919063ffffffff16565b90508061043b576001828101546103e291610636565b6001830181905560021161043657815460ff191660019081178355600081840155600283015461041191610636565b60028084018290554260038501551161043657815460ff191660021782554260048301555b610442565b6001828101555b505050565b6000546001600160a01b031690565b6001600160a01b03811660009081526001602052604081205460ff16600281111561049157634e487b7160e01b600052602160045260246000fd5b92915050565b61049f6105d5565b6001600160a01b03166104b0610447565b6001600160a01b0316146104d65760405162461bcd60e51b81526004016102fe9061077e565b6001600160a01b0381166104fc5760405162461bcd60e51b81526004016102fe90610738565b610505816105d9565b50565b6105106105d5565b6001600160a01b0316610521610447565b6001600160a01b0316146105475760405162461bcd60e51b81526004016102fe9061077e565b80600281111561056757634e487b7160e01b600052602160045260246000fd5b6001600160a01b03831660009081526001602081905260409091208054909160ff19909116908360028111156105ad57634e487b7160e01b600052602160045260246000fd5b02179055505050565b60006105c282846107f4565b9392505050565b60006105c282846107d4565b3390565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006105c282846107bc565b80356001600160a01b03811681146102ba57600080fd5b60006020828403121561066a578081fd5b6105c282610642565b60008060408385031215610685578081fd5b61068e83610642565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60a08101600387106106d257634e487b7160e01b600052602160045260246000fd5b95815260208101949094526040840192909252606083015260809091015290565b60208082526025908201527f43616e2774207761726e696e67206e6f74206e6f726d616c20737461747573206040820152643ab9b2b91760d91b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b600082198211156107cf576107cf61080b565b500190565b6000826107ef57634e487b7160e01b81526012600452602481fd5b500490565b6000828210156108065761080661080b565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122009e246afd4cc1edaeeba2a64a049a9a10c96eb5fab63eb13891afcaf8e78ce5e64736f6c63430008000033";

export class BlackListUser__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlackListUser> {
    return super.deploy(overrides || {}) as Promise<BlackListUser>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BlackListUser {
    return super.attach(address) as BlackListUser;
  }
  connect(signer: Signer): BlackListUser__factory {
    return super.connect(signer) as BlackListUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlackListUserInterface {
    return new utils.Interface(_abi) as BlackListUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlackListUser {
    return new Contract(address, _abi, signerOrProvider) as BlackListUser;
  }
}
