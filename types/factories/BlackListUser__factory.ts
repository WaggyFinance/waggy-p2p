/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BlackListUser, BlackListUserInterface } from "../BlackListUser";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "checkUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_status",
        type: "uint256",
      },
    ],
    name: "setUserStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "warningUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61077f8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c5578063ea0d5dcd146100e0578063f2fde38b146100f3578063f71cc3a51461010657600080fd5b8063410e938514610082578063715018a6146100a85780637bf67e01146100b2575b600080fd5b6100956100903660046106a1565b610119565b6040519081526020015b60405180910390f35b6100b0610239565b005b6100b06100c03660046106a1565b6102a4565b6000546040516001600160a01b03909116815260200161009f565b6100956100ee3660046106a1565b61042f565b6100b06101013660046106a1565b610470565b6100b06101143660046106bb565b61053b565b6001600160a01b03811660009081526001602052604081206002815460ff16600281111561015757634e487b7160e01b600052602160045260246000fd5b148061018657506000815460ff16600281111561018457634e487b7160e01b600052602160045260246000fd5b145b156101b657805460ff1660028111156101af57634e487b7160e01b600052602160045260246000fd5b9392505050565b60006101dc620151806101d684600301544261060490919063ffffffff16565b90610610565b905060008111801561021157506001825460ff16600281111561020f57634e487b7160e01b600052602160045260246000fd5b145b1561022f57815460ff19168255600060018301819055949350505050565b5060009392505050565b6000546001600160a01b031633146102985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6102a2600061061c565b565b6000546001600160a01b031633146102fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b038116600090815260016020526040812090815460ff16600281111561033b57634e487b7160e01b600052602160045260246000fd5b146103965760405162461bcd60e51b815260206004820152602560248201527f43616e2774207761726e696e67206e6f74206e6f726d616c20737461747573206044820152643ab9b2b91760d91b606482015260840161028f565b60006103b6620151806101d684600301544261060490919063ffffffff16565b905080610425576001828101546103cc91610679565b6001830181905560021161042057815460ff19166001908117835560008184015560028301546103fb91610679565b60028084018290554260038501551161042057815460ff191660021782554260048301555b505050565b5060019081015550565b6001600160a01b03811660009081526001602052604081205460ff16600281111561046a57634e487b7160e01b600052602160045260246000fd5b92915050565b6000546001600160a01b031633146104ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b6001600160a01b03811661052f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028f565b6105388161061c565b50565b6000546001600160a01b031633146105955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028f565b8060028111156105b557634e487b7160e01b600052602160045260246000fd5b6001600160a01b03831660009081526001602081905260409091208054909160ff19909116908360028111156105fb57634e487b7160e01b600052602160045260246000fd5b02179055505050565b60006101af828461071c565b60006101af82846106fc565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006101af82846106e4565b80356001600160a01b038116811461069c57600080fd5b919050565b6000602082840312156106b2578081fd5b6101af82610685565b600080604083850312156106cd578081fd5b6106d683610685565b946020939093013593505050565b600082198211156106f7576106f7610733565b500190565b60008261071757634e487b7160e01b81526012600452602481fd5b500490565b60008282101561072e5761072e610733565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204d46e5deca8522260ba5afa84cd3f28a8dcdfbad9389f1d3f0e7646e8a53d19b64736f6c63430008040033";

export class BlackListUser__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BlackListUser> {
    return super.deploy(overrides || {}) as Promise<BlackListUser>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BlackListUser {
    return super.attach(address) as BlackListUser;
  }
  connect(signer: Signer): BlackListUser__factory {
    return super.connect(signer) as BlackListUser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlackListUserInterface {
    return new utils.Interface(_abi) as BlackListUserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlackListUser {
    return new Contract(address, _abi, signerOrProvider) as BlackListUser;
  }
}
