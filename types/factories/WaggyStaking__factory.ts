/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WaggyStaking, WaggyStakingInterface } from "../WaggyStaking";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adminAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_lp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adminAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_waggyToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accWagPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "refillPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adminAddress",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "inBlackList",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "waggyToken",
    outputs: [
      {
        internalType: "contract WaggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060685534801561001557600080fd5b506111d1806100256000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806393f1a40b11610097578063d95e114311610066578063d95e114314610274578063e2bbb15814610287578063f2fde38b1461029a578063fc6f9468146102ad57600080fd5b806393f1a40b146101e15780639702d0621461023b57806398969e821461024e578063c0c53b8b1461026157600080fd5b80635312ea8e116100d35780635312ea8e1461018e578063704b6c02146101a1578063715018a6146101b45780638da5cb5b146101bc57600080fd5b80631526fe271461010557806317caf6f11461014f5780632b8bbbe814610166578063441a3e701461017b575b600080fd5b61011861011336600461109a565b6102c0565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b61015860685481565b604051908152602001610146565b6101796101743660046110b2565b61030b565b005b6101796101893660046110e1565b610495565b61017961019c36600461109a565b610716565b6101796101af366004611014565b6107fe565b61017961087a565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610146565b61021e6101ef3660046110b2565b606760209081526000928352604080842090915290825290208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610146565b6069546101c9906001600160a01b031681565b61015861025c3660046110b2565b6108e0565b61017961026f366004611050565b610965565b6101796102823660046110e1565b610b68565b6101796102953660046110e1565b610c5d565b6101796102a8366004611014565b610ec0565b6065546101c9906001600160a01b031681565b606681815481106102d057600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909185565b6033546001600160a01b0316331461036a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6068546103779083610f8b565b6068556040805160a0810182526001600160a01b03928316815260006020820181815292820194855243606083019081526080830182815260668054600181018255935292517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354600590930292830180546001600160a01b031916919096161790945591517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435583015592517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435682015590517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435782015590517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435890910155565b6000606683815481106104b857634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260678252604080852033865290925292208054600590920290920192508311156105315760405162461bcd60e51b815260206004820152601260248201527f77697468647261773a206e6f7420676f6f6400000000000000000000000000006044820152606401610361565b600061056b826001015461056564e8d4a5100061055f87600401548760000154610f9e90919063ffffffff16565b90610faa565b90610fb6565b90506000811180156105825750600282015460ff16155b1561060c57825460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190611030565b505b83156106ba5760018301546106219085610fb6565b600184015581546106329085610fb6565b825560695460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561068057600080fd5b505af1158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b89190611030565b505b600483015482546106d59164e8d4a510009161055f91610f9e565b600183015560405184815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050505050565b6000818152606760209081526040808320338085529252918290206069548154935163a9059cbb60e01b815260048101939093526024830193909352916001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561078057600080fd5b505af1158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190611030565b50805460405190815233907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959060200160405180910390a2600080825560019091015550565b6033546001600160a01b031633146108585760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610361565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b031633146108d45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610361565b6108de6000610fc2565b565b6000806066848154811061090457634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526067825260408085206001600160a01b0389168652909252922060018101546005929092029092016004810154835491945061095c92916105659164e8d4a510009161055f91610f9e565b95945050505050565b600054610100900460ff168061097e575060005460ff16155b6109f05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610361565b600054610100900460ff16158015610a12576000805461ffff19166101011790555b606580546001600160a01b038086166001600160a01b031992831617909255606980548584169083161790556040805160a08101825287841681526000602082018181526103e8938301848152436060850190815260808501848152606680546001810182559552945160059094027f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435481018054959099169490971693909317909655517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435585015593517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435684015592517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e9435783015591517f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94358909101556068558015610b62576000805461ff00191690555b50505050565b600060668381548110610b8b57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060059091020180546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610bed57600080fd5b505af1158015610c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c259190611030565b506001810154610c4d90610c429061055f8564e8d4a51000610f9e565b600483015490610f8b565b6004820155436003909101555050565b600060668381548110610c8057634e487b7160e01b600052603260045260246000fd5b60009182526020808320868452606782526040808520338652909252922060028101546005909202909201925060ff1615610ced5760405162461bcd60e51b815260206004820152600d60248201526c1a5b88189b1858dac81b1a5cdd609a1b6044820152606401610361565b805415610db1576000610d22826001015461056564e8d4a5100061055f87600401548760000154610f9e90919063ffffffff16565b90508015610daf57825460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610d7557600080fd5b505af1158015610d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dad9190611030565b505b505b8215610e65576001820154610dc69084610f8b565b60018301556069546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610e1d57600080fd5b505af1158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e559190611030565b508054610e629084610f8b565b81555b60048201548154610e809164e8d4a510009161055f91610f9e565b600182015560405183815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a250505050565b6033546001600160a01b03163314610f1a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610361565b6001600160a01b038116610f7f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610361565b610f8881610fc2565b50565b6000610f978284611102565b9392505050565b6000610f97828461113a565b6000610f97828461111a565b6000610f978284611159565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215611025578081fd5b8135610f9781611186565b600060208284031215611041578081fd5b81518015158114610f97578182fd5b600080600060608486031215611064578182fd5b833561106f81611186565b9250602084013561107f81611186565b9150604084013561108f81611186565b809150509250925092565b6000602082840312156110ab578081fd5b5035919050565b600080604083850312156110c4578182fd5b8235915060208301356110d681611186565b809150509250929050565b600080604083850312156110f3578182fd5b50508035926020909101359150565b6000821982111561111557611115611170565b500190565b60008261113557634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561115457611154611170565b500290565b60008282101561116b5761116b611170565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610f8857600080fdfea2646970667358221220d93cad00e0d43fa2b2ec2326d0886e9beec66a89f9e27cccce2b336e0299fe0664736f6c63430008040033";

export class WaggyStaking__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WaggyStaking> {
    return super.deploy(overrides || {}) as Promise<WaggyStaking>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WaggyStaking {
    return super.attach(address) as WaggyStaking;
  }
  connect(signer: Signer): WaggyStaking__factory {
    return super.connect(signer) as WaggyStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WaggyStakingInterface {
    return new utils.Interface(_abi) as WaggyStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WaggyStaking {
    return new Contract(address, _abi, signerOrProvider) as WaggyStaking;
  }
}
