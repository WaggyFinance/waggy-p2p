/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WaggyStaking, WaggyStakingInterface } from "../WaggyStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_lp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adminAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_waggyToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adminAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accWagPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "refillPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adminAddress",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "inBlackList",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "waggyToken",
    outputs: [
      {
        internalType: "contract WaggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060045534801561001557600080fd5b506040516111bb3803806111bb833981016040819052610034916101d2565b61003d33610182565b600180546001600160a01b039384166001600160a01b0319918216178255600580549385169382169390931783556040805160a08101825295851686526000602087018181526103e89288018381524360608a0190815260808a018481526002805498890181559094529851959096027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8101805496909816959094169490941790955591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf82015591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad083015592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad182015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad290910155600455610236565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156101e6578283fd5b83516101f18161021e565b60208501519093506102028161021e565b60408501519092506102138161021e565b809150509250925092565b6001600160a01b038116811461023357600080fd5b50565b610f76806102456000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063d95e114311610066578063d95e114314610256578063e2bbb15814610269578063f2fde38b1461027c578063fc6f94681461028f57600080fd5b80638da5cb5b146101b157806393f1a40b146101d65780639702d0621461023057806398969e821461024357600080fd5b8063441a3e70116100d3578063441a3e70146101705780635312ea8e14610183578063704b6c0214610196578063715018a6146101a957600080fd5b80631526fe27146100fa57806317caf6f1146101445780632b8bbbe81461015b575b600080fd5b61010d610108366004610e2d565b6102a2565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b61014d60045481565b60405190815260200161013b565b61016e610169366004610e74565b6102ed565b005b61016e61017e366004610e86565b610477565b61016e610191366004610e2d565b6106f8565b61016e6101a4366004610df1565b6107e0565b61016e61085c565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161013b565b6102136101e4366004610e45565b600360209081526000928352604080842090915290825290208054600182015460029092015490919060ff1683565b60408051938452602084019290925215159082015260600161013b565b6005546101be906001600160a01b031681565b61014d610251366004610e45565b6108c2565b61016e610264366004610e86565b610947565b61016e610277366004610e86565b610a3c565b61016e61028a366004610df1565b610c9f565b6001546101be906001600160a01b031681565b600281815481106102b257600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909185565b6000546001600160a01b0316331461034c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6004546103599083610d6a565b6004556040805160a0810182526001600160a01b03928316815260006020820181815292820194855243606083019081526080830182815260028054600181018255935292517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600590930292830180546001600160a01b031916919096161790945591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf83015592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad082015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad182015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad290910155565b60006002838154811061049a57634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260038252604080852033865290925292208054600590920290920192508311156105135760405162461bcd60e51b815260206004820152601260248201527f77697468647261773a206e6f7420676f6f6400000000000000000000000000006044820152606401610343565b600061054d826001015461054764e8d4a5100061054187600401548760000154610d7d90919063ffffffff16565b90610d89565b90610d95565b90506000811180156105645750600282015460ff16155b156105ee57825460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156105b457600080fd5b505af11580156105c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ec9190610e0d565b505b831561069c5760018301546106039085610d95565b600184015581546106149085610d95565b825560055460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561066257600080fd5b505af1158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a9190610e0d565b505b600483015482546106b79164e8d4a510009161054191610d7d565b600183015560405184815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050505050565b6000818152600360209081526040808320338085529252918290206005548154935163a9059cbb60e01b815260048101939093526024830193909352916001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561076257600080fd5b505af1158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a9190610e0d565b50805460405190815233907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959060200160405180910390a2600080825560019091015550565b6000546001600160a01b0316331461083a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610343565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146108b65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610343565b6108c06000610da1565b565b600080600284815481106108e657634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526003825260408085206001600160a01b0389168652909252922060018101546005929092029092016004810154835491945061093e92916105479164e8d4a510009161054191610d7d565b95945050505050565b60006002838154811061096a57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060059091020180546040516323b872dd60e01b8152336004820152306024820152604481018590529192506001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156109cc57600080fd5b505af11580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a049190610e0d565b506001810154610a2c90610a21906105418564e8d4a51000610d7d565b600483015490610d6a565b6004820155436003909101555050565b600060028381548110610a5f57634e487b7160e01b600052603260045260246000fd5b60009182526020808320868452600382526040808520338652909252922060028101546005909202909201925060ff1615610acc5760405162461bcd60e51b815260206004820152600d60248201526c1a5b88189b1858dac81b1a5cdd609a1b6044820152606401610343565b805415610b90576000610b01826001015461054764e8d4a5100061054187600401548760000154610d7d90919063ffffffff16565b90508015610b8e57825460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610b5457600080fd5b505af1158015610b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8c9190610e0d565b505b505b8215610c44576001820154610ba59084610d6a565b60018301556005546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610bfc57600080fd5b505af1158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c349190610e0d565b508054610c419084610d6a565b81555b60048201548154610c5f9164e8d4a510009161054191610d7d565b600182015560405183815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a250505050565b6000546001600160a01b03163314610cf95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610343565b6001600160a01b038116610d5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610343565b610d6781610da1565b50565b6000610d768284610ea7565b9392505050565b6000610d768284610edf565b6000610d768284610ebf565b6000610d768284610efe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610e02578081fd5b8135610d7681610f2b565b600060208284031215610e1e578081fd5b81518015158114610d76578182fd5b600060208284031215610e3e578081fd5b5035919050565b60008060408385031215610e57578081fd5b823591506020830135610e6981610f2b565b809150509250929050565b60008060408385031215610e57578182fd5b60008060408385031215610e98578182fd5b50508035926020909101359150565b60008219821115610eba57610eba610f15565b500190565b600082610eda57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ef957610ef9610f15565b500290565b600082821015610f1057610f10610f15565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610d6757600080fdfea264697066735822122041390d5839c952b8a66cb4b233876d4bbb518c3f8bb1d92336535932385e94ce64736f6c63430008040033";

export class WaggyStaking__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _lp: string,
    _adminAddress: string,
    _waggyToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WaggyStaking> {
    return super.deploy(
      _lp,
      _adminAddress,
      _waggyToken,
      overrides || {}
    ) as Promise<WaggyStaking>;
  }
  getDeployTransaction(
    _lp: string,
    _adminAddress: string,
    _waggyToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lp,
      _adminAddress,
      _waggyToken,
      overrides || {}
    );
  }
  attach(address: string): WaggyStaking {
    return super.attach(address) as WaggyStaking;
  }
  connect(signer: Signer): WaggyStaking__factory {
    return super.connect(signer) as WaggyStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WaggyStakingInterface {
    return new utils.Interface(_abi) as WaggyStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WaggyStaking {
    return new Contract(address, _abi, signerOrProvider) as WaggyStaking;
  }
}
