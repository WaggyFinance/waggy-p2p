/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WERC20, WERC20Interface } from "../WERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "name2",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011803803806200118083398101604081905262000034916200033d565b8151829082906200004d906003906020850190620001ec565b50805162000063906004906020840190620001ec565b505050620000806200007a620000aa60201b60201c565b620000ae565b6200008a62000100565b50620000a2336a52b7d2dcc80cd2e400000062000105565b50506200045c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b601290565b6001600160a01b038216620001375760405162461bcd60e51b81526004016200012e90620003a4565b60405180910390fd5b6200014560008383620001e7565b8060026000828254620001599190620003e4565b90915550506001600160a01b0382166000908152602081905260408120805483929062000188908490620003e4565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001cd908590620003db565b60405180910390a3620001e360008383620001e7565b5050565b505050565b828054620001fa9062000409565b90600052602060002090601f0160209004810192826200021e576000855562000269565b82601f106200023957805160ff191683800117855562000269565b8280016001018555821562000269579182015b82811115620002695782518255916020019190600101906200024c565b50620002779291506200027b565b5090565b5b808211156200027757600081556001016200027c565b600082601f830112620002a3578081fd5b81516001600160401b0380821115620002c057620002c062000446565b6040516020601f8401601f1916820181018381118382101715620002e857620002e862000446565b6040528382528584018101871015620002ff578485fd5b8492505b8383101562000322578583018101518284018201529182019162000303565b838311156200033357848185840101525b5095945050505050565b6000806040838503121562000350578182fd5b82516001600160401b038082111562000367578384fd5b620003758683870162000292565b935060208501519150808211156200038b578283fd5b506200039a8582860162000292565b9150509250929050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200040457634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200041e57607f821691505b602082108114156200044057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610d14806200046c6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101d5578063a9059cbb146101e8578063dd62ed3e146101fb578063f2fde38b1461020e576100f5565b806370a082311461019d578063715018a6146101b05780638da5cb5b146101b857806395d89b41146101cd576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806340c10f1914610188576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b610102610221565b60405161010f9190610982565b60405180910390f35b61012b61012636600461093a565b6102b3565b60405161010f9190610977565b6101406102d0565b60405161010f9190610c68565b61012b61015b3660046108ff565b6102d6565b61016861036f565b60405161010f9190610c71565b61012b61018336600461093a565b610374565b61019b61019636600461093a565b6103c8565b005b6101406101ab3660046108ac565b6103d6565b61019b6103f5565b6101c0610440565b60405161010f9190610963565b61010261044f565b61012b6101e336600461093a565b61045e565b61012b6101f636600461093a565b6104d7565b6101406102093660046108cd565b6104eb565b61019b61021c3660046108ac565b610516565b60606003805461023090610ca3565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610ca3565b80156102a95780601f1061027e576101008083540402835291602001916102a9565b820191906000526020600020905b81548152906001019060200180831161028c57829003601f168201915b5050505050905090565b60006102c76102c0610587565b848461058b565b50600192915050565b60025490565b60006102e384848461063f565b6001600160a01b038416600090815260016020526040812081610304610587565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103505760405162461bcd60e51b815260040161034790610ae6565b60405180910390fd5b6103648561035c610587565b85840361058b565b506001949350505050565b601290565b60006102c7610381610587565b84846001600061038f610587565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103c39190610c7f565b61058b565b6103d28282610769565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b6103fd610587565b6001600160a01b031661040e610440565b6001600160a01b0316146104345760405162461bcd60e51b815260040161034790610b2e565b61043e6000610831565b565b6005546001600160a01b031690565b60606004805461023090610ca3565b6000806001600061046d610587565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104b95760405162461bcd60e51b815260040161034790610bec565b6104cd6104c4610587565b8585840361058b565b5060019392505050565b60006102c76104e4610587565b848461063f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61051e610587565b6001600160a01b031661052f610440565b6001600160a01b0316146105555760405162461bcd60e51b815260040161034790610b2e565b6001600160a01b03811661057b5760405162461bcd60e51b815260040161034790610a18565b61058481610831565b50565b3390565b6001600160a01b0383166105b15760405162461bcd60e51b815260040161034790610ba8565b6001600160a01b0382166105d75760405162461bcd60e51b815260040161034790610a5e565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610632908590610c68565b60405180910390a3505050565b6001600160a01b0383166106655760405162461bcd60e51b815260040161034790610b63565b6001600160a01b03821661068b5760405162461bcd60e51b8152600401610347906109d5565b610696838383610890565b6001600160a01b038316600090815260208190526040902054818110156106cf5760405162461bcd60e51b815260040161034790610aa0565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610706908490610c7f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107509190610c68565b60405180910390a3610763848484610890565b50505050565b6001600160a01b03821661078f5760405162461bcd60e51b815260040161034790610c31565b61079b60008383610890565b80600260008282546107ad9190610c7f565b90915550506001600160a01b038216600090815260208190526040812080548392906107da908490610c7f565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061081d908590610c68565b60405180910390a36103d260008383610890565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b505050565b80356001600160a01b03811681146103f057600080fd5b6000602082840312156108bd578081fd5b6108c682610895565b9392505050565b600080604083850312156108df578081fd5b6108e883610895565b91506108f660208401610895565b90509250929050565b600080600060608486031215610913578081fd5b61091c84610895565b925061092a60208501610895565b9150604084013590509250925092565b6000806040838503121561094c578182fd5b61095583610895565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b818110156109ae57858101830151858201604001528201610992565b818111156109bf5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610c9e57634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610cb757607f821691505b60208210811415610cd857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203709e75f6fbf2f9e536e62ae3dd874f4d1baf685ac003700283ada36422d502664736f6c63430008000033";

export class WERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name: string,
    name2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WERC20> {
    return super.deploy(name, name2, overrides || {}) as Promise<WERC20>;
  }
  getDeployTransaction(
    name: string,
    name2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, name2, overrides || {});
  }
  attach(address: string): WERC20 {
    return super.attach(address) as WERC20;
  }
  connect(signer: Signer): WERC20__factory {
    return super.connect(signer) as WERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WERC20Interface {
    return new utils.Interface(_abi) as WERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WERC20 {
    return new Contract(address, _abi, signerOrProvider) as WERC20;
  }
}
