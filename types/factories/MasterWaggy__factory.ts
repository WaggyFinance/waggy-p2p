/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterWaggy, MasterWaggyInterface } from "../MasterWaggy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_waggyToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "ADD_POOL",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DEPOSIT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DIVIDEND",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "WITHDRAW",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "addPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "distributeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "dividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
    ],
    name: "getPendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fund",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalValueLock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
    ],
    name: "getUserStakeInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalStaking",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bonusDebt",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "fundedBy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161178738038061178783398101604081905261002f916100ad565b6100383361005d565b600380546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b61169b806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806390f7416d11610097578063d914cd4b11610066578063d914cd4b14610298578063d9caed12146102ab578063f2fde38b146102be578063fe0f3a13146102d157600080fd5b806390f7416d14610206578063918ed85a14610219578063d1058e591461022f578063d785b5951461023757600080fd5b806347e7ef24116100d357806347e7ef24146101bd57806366cc1857146101d0578063715018a6146101e35780638da5cb5b146101eb57600080fd5b806306bfa938146100fa5780630f208beb146101265780631ec8bb8c146101a8575b600080fd5b61010d6101083660046113c4565b61030d565b60405161011d94939291906113df565b60405180910390f35b610177610134366004611440565b600260208181526000938452604080852090915291835291208054600182015492820154600383015460049093015491939290916001600160a01b039091169085565b604080519586526020860194909452928401919091526001600160a01b03166060830152608082015260a00161011d565b6101bb6101b6366004611473565b6103a3565b005b6101bb6101cb366004611473565b6105d3565b6101bb6101de366004611440565b6108ce565b6101bb61098a565b6000546040516001600160a01b03909116815260200161011d565b6101bb610214366004611473565b6109f0565b610221610c66565b60405190815260200161011d565b6101bb610cd9565b61027d610245366004611440565b6001600160a01b0391821660009081526002602090815260408083209390941682529190915220805460018201546004909201549092565b6040805193845260208401929092529082015260600161011d565b6101bb6102a63660046113c4565b610d2c565b6101bb6102b936600461149d565b610f56565b6101bb6102cc3660046113c4565b611130565b6102216102df366004611440565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152206001015490565b6001600160a01b03811660009081526001602081815260408084206002810154938101805483518186028101860190945280845294956060959094859492919083018282801561038657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610368575b505050505093508060030154925080600401549150509193509193565b600060016000846001600160a01b03166001600160a01b0316815260200190815260200160002090506103f460405180604001604052806006815260200165105b5bdd5b9d60d21b815250836111f8565b60028101546000906104069042611241565b905060005b60018301548110156105cc57600060026000856001018481548110610432576104326114d9565b60009182526020808320909101546001600160a01b03908116845283820194909452604092830182208a85168352815290829020825180840190935260078352664164647265737360c81b9183019190915260038101549093506104969216611254565b600384015481546000916104b5916104af906064611299565b906112a5565b90506104f66040518060400160405280600e81526020017f6465706f73697450657263656e74000000000000000000000000000000000000815250826111f8565b600061050760646104af8985611299565b90506105316040518060400160405280600681526020016514995dd85c9960d21b815250826111f8565b60048301546000906105439042611241565b905085811061056557600184015461055b90836112b1565b60018501556105ad565b6000610580826104af606461057a8b84611241565b90611299565b9050600061059360646104af8487611299565b60018701549091506105a590826112b1565b600187015550505b50504260049092019190915550806105c481611505565b91505061040b565b5050505050565b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190611520565b10156106885760405162461bcd60e51b8152602060048201526013602482015272084c2d8c2dcc6ca40dcdee840cadcdeeacee8d606b1b60448201526064015b60405180910390fd5b6001600160a01b03828116600090815260016020526040902054166106e35760405162461bcd60e51b8152602060048201526011602482015270141bdbdb081a5cc81b9bdd08195e1a5cdd607a1b604482015260640161067f565b6001600160a01b0382166000818152600160209081526040808320338452600283528184209484529390915290208054156107225761072233856108ce565b6003546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d9190611539565b5042600482015580546107b090846112b1565b815560038101546001600160a01b03166107fd57600381018054336001600160a01b0319918216811790925560018481018054918201815560009081526020902001805490911690911790555b6108406040518060400160405280601481526020017f75736572206465706f73697420616d6f756e742000000000000000000000000081525082600001546111f8565b600382015461084f90846112b1565b6003830181905560408051808201909152600981526803837b7b6103a3b36160bd1b602082015261087f916111f8565b604080516001600160a01b03861681523360208201529081018490527fcb1a44561b224d34fd4423e79a3365a6f798ce94dec790e1c6cfd7610a58817e9060600160405180910390a150505050565b6001600160a01b03818116600081815260016020818152604080842095881684526002825280842094845293905291812091820154835460405163a9059cbb60e01b81526001600160a01b0388811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611539565b50506000600190910155505050565b6000546001600160a01b031633146109e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067f565b6109ee60006112bd565b565b6000546001600160a01b03163314610a4a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067f565b6001600160a01b0382811660009081526001602052604090819020805491516370a0823160e01b81523360048201529092849216906370a0823190602401602060405180830381865afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190611520565b1015610b0d5760405162461bcd60e51b8152602060048201526013602482015272084c2d8c2dcc6ca40dcdee840cadcdeeacee8d606b1b604482015260640161067f565b8054604051636eb1769f60e11b815233600482015230602482015283916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611520565b1015610b8957600080fd5b80546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610bdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c039190611539565b506004810154610c1390836112b1565b6004820155604080516001600160a01b03851681523360208201529081018390527f04fd893ad592f7d8380640f8dfe411562a9b0b7ed79a46c302f15be9d1fa4ff09060600160405180910390a1505050565b60008060005b600454811015610cd357610cbf6001600060048481548110610c9057610c906114d9565b60009182526020808320909101546001600160a01b0316835282019290925260400190206003015483906112b1565b915080610ccb81611505565b915050610c6c565b50919050565b60005b600454811015610d2957610d173360048381548110610cfd57610cfd6114d9565b6000918252602090912001546001600160a01b03166108ce565b80610d2181611505565b915050610cdc565b50565b6000546001600160a01b03163314610d865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067f565b6001600160a01b038116610ddc5760405162461bcd60e51b815260206004820152601460248201527f4e6f7420616c6c6f772061646472657373283029000000000000000000000000604482015260640161067f565b6001600160a01b038181166000908152600160205260409020541615610e445760405162461bcd60e51b815260206004820152601260248201527f506f6f6c20616c72656164792065786973740000000000000000000000000000604482015260640161067f565b6040805160a0810182526001600160a01b03838116808352606060208085018281524386880152600083870181905260808701819052938452600180835296909320855181546001600160a01b0319169516949094178455915180519195610eb2939085019291019061132e565b5060408281015160028301556060830151600383015560809092015160049182015580546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03851690811790915590519081527f3fecd974dff155a770ad874716a5cb3f4a82cb0b8f0cdc78bb0b3c0cdd292a409060200160405180910390a15050565b6001600160a01b0382811660009081526001602052604090205416610fb15760405162461bcd60e51b8152602060048201526011602482015270141bdbdb081a5cc81b9bdd08195e1a5cdd607a1b604482015260640161067f565b6001600160a01b0380831660008181526001602090815260408083209488168352600282528083209383529290522080548311156110275760405162461bcd60e51b8152602060048201526013602482015272084c2d8c2dcc6ca40dcdee840cadcdeeacee8d606b1b604482015260640161067f565b8054156110385761103885856108ce565b426004820155805461104a9084611241565b8155600382015461105b9084611241565b600383810191909155546040516323b872dd60e01b81523060048201526001600160a01b03878116602483015260448201869052909116906323b872dd906064016020604051808303816000875af11580156110bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110df9190611539565b50604080516001600160a01b03861681523360208201529081018490527f6208b1d2bba4a8e5fe1da0cd39addf1936ed00fe966ad21208d0429d80125d3d9060600160405180910390a15050505050565b6000546001600160a01b0316331461118a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067f565b6001600160a01b0381166111ef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067f565b610d29816112bd565b61123d828260405160240161120e9291906115a8565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261130d565b5050565b600061124d82846115ca565b9392505050565b61123d828260405160240161126a9291906115e1565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261130d565b600061124d828461160c565b600061124d828461162b565b600061124d828461164d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054828255906000526020600020908101928215611383579160200282015b8281111561138357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061134e565b5061138f929150611393565b5090565b5b8082111561138f5760008155600101611394565b80356001600160a01b03811681146113bf57600080fd5b919050565b6000602082840312156113d657600080fd5b61124d826113a8565b600060808201868352602060808185015281875180845260a086019150828901935060005b818110156114295784516001600160a01b031683529383019391830191600101611404565b505060408501969096525050506060015292915050565b6000806040838503121561145357600080fd5b61145c836113a8565b915061146a602084016113a8565b90509250929050565b6000806040838503121561148657600080fd5b61148f836113a8565b946020939093013593505050565b6000806000606084860312156114b257600080fd5b6114bb846113a8565b92506114c9602085016113a8565b9150604084013590509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611519576115196114ef565b5060010190565b60006020828403121561153257600080fd5b5051919050565b60006020828403121561154b57600080fd5b8151801515811461124d57600080fd5b6000815180845260005b8181101561158157602081850181015186830182015201611565565b81811115611593576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006115bb604083018561155b565b90508260208301529392505050565b6000828210156115dc576115dc6114ef565b500390565b6040815260006115f4604083018561155b565b90506001600160a01b03831660208301529392505050565b6000816000190483118215151615611626576116266114ef565b500290565b60008261164857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611660576116606114ef565b50019056fea26469706673582212200f7863f4afa8fd917b9249526da4f66a3e36392b8b46f671438e74ad983eb30464736f6c634300080b0033";

export class MasterWaggy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _waggyToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterWaggy> {
    return super.deploy(_waggyToken, overrides || {}) as Promise<MasterWaggy>;
  }
  getDeployTransaction(
    _waggyToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_waggyToken, overrides || {});
  }
  attach(address: string): MasterWaggy {
    return super.attach(address) as MasterWaggy;
  }
  connect(signer: Signer): MasterWaggy__factory {
    return super.connect(signer) as MasterWaggy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterWaggyInterface {
    return new utils.Interface(_abi) as MasterWaggyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterWaggy {
    return new Contract(address, _abi, signerOrProvider) as MasterWaggy;
  }
}
