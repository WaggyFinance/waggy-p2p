/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Validator, ValidatorInterface } from "../Validator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxPercentValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minPercentValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "CASE_GEN_RESULT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "CASE_VOTE_DONE",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "USER_DECISION",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_totalValue",
        type: "uint256",
      },
    ],
    name: "addCase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_randomness",
        type: "bytes32",
      },
    ],
    name: "evaluate",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "getCaseTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "getCaseValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getUserDecision",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserResultInCase",
    outputs: [
      {
        internalType: "bool",
        name: "_isWin",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPercentValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPercentValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161177438038061177483398101604081905261002f9161009c565b6100383361004c565b6006919091556005919091556007556100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100b0578283fd5b8351925060208401519150604084015190509250925092565b61169c806100d86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063de2d17b911610066578063de2d17b9146101b4578063e5a86335146101de578063f2fde38b14610201578063f71e36e61461021457600080fd5b80638da5cb5b1461017f578063bedf0e4a1461019a578063d0f2f3e0146101a3578063d6eb5910146101ac57600080fd5b806340d14167116100d357806340d14167146101485780634ac8eb5f1461015b5780636bfbb12a14610164578063715018a61461017757600080fd5b806311682722146100fa578063174e31c414610120578063277be57e14610135575b600080fd5b61010d61010836600461136d565b610227565b6040519081526020015b60405180910390f35b61013361012e36600461136d565b610297565b005b61010d61014336600461136d565b610432565b61010d61015636600461136d565b610489565b61010d60045481565b61010d6101723660046113d1565b6104e0565b610133610a3b565b6000546040516001600160a01b039091168152602001610117565b61010d60065481565b61010d60055481565b60045461010d565b6101c76101c2366004611396565b610aa1565b604080519215158352602083019190915201610117565b6101f16101ec366004611396565b610c28565b6040519015158152602001610117565b61013361020f366004611353565b610c97565b610133610222366004611403565b610d79565b60018054600091826102388361161f565b90915550506001600160a01b03831660009081526003602052604081206001548154811061027657634e487b7160e01b600052603260045260246000fd5b60009182526020909120600460099092020101839055505060015492915050565b6001600160a01b03821660009081526003602052604081208054839081106102cf57634e487b7160e01b600052603260045260246000fd5b600091825260208083203384526009909202909101908190526040822060040154909250819060ff1615156001141561030757600080fd5b610312858533610aa1565b9092509050811561042b5760006103516103466064610340600754886005015461120a90919063ffffffff16565b9061121d565b600586015490611229565b600285015490915060009061036790839061121d565b905060006103758483611235565b33600081815260208990526040908190206004908101805460ff1916600117905560025491516323b872dd60e01b815230918101919091526024810192909252604482018390529192506001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156103ee57600080fd5b505af1158015610402573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042691906114dd565b505050505b5050505050565b6001600160a01b038216600090815260036020526040812080548291908490811061046d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060046009909202010154949350505050565b6001600160a01b03821660009081526003602052604081208054829190849081106104c457634e487b7160e01b600052603260045260246000fd5b6000918252602090912060036009909202010154949350505050565b600080546001600160a01b031633146105405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038416600090815260036020526040812080548590811061057857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060090201905080600601546000602081106105ad57634e487b7160e01b600052603260045260246000fd5b1a60f81b7fff0000000000000000000000000000000000000000000000000000000000000016156106205760405162461bcd60e51b815260206004820152601d60248201527f54686973206361736520616c72656164792068616420726573756c742e0000006044820152606401610537565b60008060005b60018401548110156107c857600084600101828154811061065757634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168083528782526040808420815160a081018352815481526001820154948101949094526002810180549396509092918401916106a9906115e4565b80601f01602080910402602001604051908101604052809291908181526020018280546106d5906115e4565b80156107225780601f106106f757610100808354040283529160200191610722565b820191906000526020600020905b81548152906001019060200180831161070557829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604091820152825181519283015281018a905290915060009060600160405160208183030381529060405280519060200120905065212aacaca2a960d11b81141561079f576020820151610798908790611235565b95506107b2565b60208201516107af908690611235565b94505b50505080806107c09061161f565b915050610626565b50808211156107e55765212aacaca2a960d11b600684015561083f565b80821015610818577f53454c4c45520000000000000000000000000000000000000000000000000000600684015561083f565b7f4551554956414c454e540000000000000000000000000000000000000000000060068401555b6000805b6001850154811015610a0a57600085600101828154811061087457634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168083528882526040808420815160a081018352815481526001820154948101949094526002810180549396509092918401916108c6906115e4565b80601f01602080910402602001604051908101604052809291908181526020018280546108f2906115e4565b801561093f5780601f106109145761010080835404028352916020019161093f565b820191906000526020600020905b81548152906001019060200180831161092257829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604091820152825181519283015281018b9052909150600090606001604051602081830303815290604052805190602001209050876006015481146109b65760208201516109af908690611235565b94506109f4565b6002880180546001810182556000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385161790555b5050508080610a029061161f565b915050610843565b50600584018190554260078501556003840154600454610a2991611229565b60045550505060060154949350505050565b6000546001600160a01b03163314610a955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610537565b610a9f6000611241565b565b6001600160a01b038316600090815260036020526040812080548291829186908110610add57634e487b7160e01b600052603260045260246000fd5b906000526020600020906009020190506000816000016000866001600160a01b03166001600160a01b031681526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282018054610b45906115e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b71906115e4565b8015610bbe5780601f10610b9357610100808354040283529160200191610bbe565b820191906000526020600020905b815481529060010190602001808311610ba157829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040918201528251600886015482518085019290925281830152815180820383018152606090910190915280519082012060069094015491015192149791965090945050505050565b6001600160a01b0383166000908152600360205260408120805482919085908110610c6357634e487b7160e01b600052603260045260246000fd5b600091825260208083206001600160a01b038716845260099092029091019052604090206003015415159150509392505050565b6000546001600160a01b03163314610cf15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610537565b6001600160a01b038116610d6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610537565b610d7681611241565b50565b6001600160a01b0385166000908152600360205260408120805486908110610db157634e487b7160e01b600052603260045260246000fd5b906000526020600020906009020190508060030154816004015411610e185760405162461bcd60e51b815260206004820152601260248201527f546865206361736520697320636c6f73656400000000000000000000000000006044820152606401610537565b33600090815260208281526040808320815160a081018352815481526001820154938101939093526002810180549192840191610e54906115e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610e80906115e4565b8015610ecd5780601f10610ea257610100808354040283529160200191610ecd565b820191906000526020600020905b815481529060010190602001808311610eb057829003601f168201915b50505091835250506003820154602082015260049091015460ff161515604090910152606081015190915015610f455760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420616c6c6f772075736572207265706c7920616761696e0000000000006044820152606401610537565b6004820154600554600090610f629060649061034090859061120a565b90506000610f8060646103406006548661120a90919063ffffffff16565b9050818811158015610f925750808810155b610fde5760405162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206973206e6f7420696e2072616e6765206c696d69742e0000006044820152606401610537565b6002546040516323b872dd60e01b8152336004820152306024820152604481018a90526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561103057600080fd5b505af1158015611044573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106891906114dd565b6110b45760405162461bcd60e51b815260206004820152600e60248201527f43616e2774207472616e736665720000000000000000000000000000000000006044820152606401610537565b6004546110c19089611235565b60045560208085018981528886526040808701898152426060890152336000908152898552919091208751815591516001830155518051879361110b92600285019291019061129e565b5060608201516003808301919091556080909201516004909101805491151560ff1990921691909117905560018681018054918201815560009081526020902001805473ffffffffffffffffffffffffffffffffffffffff1916331790558501546111769089611235565b60038601556040517fbb45067d90eddb11ceffb606ce8d7f6d26b078295b1180a987973423631dd755906111b39033908c908c908c908c906114fd565b60405180910390a184600401548560030154106111fe576040518981527fbcbc308a5dd8d1168941e2bf5d378ddbab688ef0bb66a66622ca88104bd244579060200160405180910390a15b50505050505050505050565b600061121682846115ae565b9392505050565b6000611216828461158e565b600061121682846115cd565b60006112168284611576565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546112aa906115e4565b90600052602060002090601f0160209004810192826112cc5760008555611312565b82601f106112e557805160ff1916838001178555611312565b82800160010185558215611312579182015b828111156113125782518255916020019190600101906112f7565b5061131e929150611322565b5090565b5b8082111561131e5760008155600101611323565b80356001600160a01b038116811461134e57600080fd5b919050565b600060208284031215611364578081fd5b61121682611337565b6000806040838503121561137f578081fd5b61138883611337565b946020939093013593505050565b6000806000606084860312156113aa578081fd5b6113b384611337565b9250602084013591506113c860408501611337565b90509250925092565b6000806000606084860312156113e5578283fd5b6113ee84611337565b95602085013595506040909401359392505050565b600080600080600060a0868803121561141a578081fd5b61142386611337565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff80821115611454578283fd5b818801915088601f830112611467578283fd5b81358181111561147957611479611650565b604051601f8201601f19908116603f011681019083821181831017156114a1576114a1611650565b816040528281528b60208487010111156114b9578586fd5b82602086016020830137856020848301015280955050505050509295509295909350565b6000602082840312156114ee578081fd5b81518015158114611216578182fd5b6001600160a01b038616815260006020868184015285604084015284606084015260a0608084015283518060a0850152825b8181101561154b5785810183015185820160c00152820161152f565b8181111561155c578360c083870101525b50601f01601f19169290920160c001979650505050505050565b600082198211156115895761158961163a565b500190565b6000826115a957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156115c8576115c861163a565b500290565b6000828210156115df576115df61163a565b500390565b600181811c908216806115f857607f821691505b6020821081141561161957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156116335761163361163a565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212204e29527eb4711661a32dcf4993776c10eb144e16bc0befd6d3d2f118fe2c0ecc64736f6c63430008040033";

export class Validator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _maxPercentValue: BigNumberish,
    _minPercentValue: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Validator> {
    return super.deploy(
      _maxPercentValue,
      _minPercentValue,
      _fee,
      overrides || {}
    ) as Promise<Validator>;
  }
  getDeployTransaction(
    _maxPercentValue: BigNumberish,
    _minPercentValue: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxPercentValue,
      _minPercentValue,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): Validator {
    return super.attach(address) as Validator;
  }
  connect(signer: Signer): Validator__factory {
    return super.connect(signer) as Validator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorInterface {
    return new utils.Interface(_abi) as ValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Validator {
    return new Contract(address, _abi, signerOrProvider) as Validator;
  }
}
