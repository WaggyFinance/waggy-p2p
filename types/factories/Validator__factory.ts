/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Validator, ValidatorInterface } from "../Validator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxPercentValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minPercentValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "CASE_GEN_RESULT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "CASE_VOTE_DONE",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "USER_DECISION",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_remark",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addCase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Interface",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_randomness",
        type: "bytes32",
      },
    ],
    name: "evaluate",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "getCaseInfo",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fund",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "result",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "resultAt",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "randomness",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "remark",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_userReply",
        type: "address",
      },
    ],
    name: "getUserDecision",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserReply",
    outputs: [
      {
        internalType: "bytes32",
        name: "answer",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "remark",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserResultInCase",
    outputs: [
      {
        internalType: "bool",
        name: "_isWin",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPercentValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPercentValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161196138038061196183398101604081905261002f9161009c565b6100383361004c565b6005919091556004919091556006556100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100b0578283fd5b8351925060208401519150604084015190509250925092565b611889806100d86000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b1abdd54116100a2578063d0f2f3e011610071578063d0f2f3e014610311578063d6eb59101461031a578063ddca3f4314610322578063e1b5ad981461032b578063f2fde38b1461034f57600080fd5b8063b1abdd5414610254578063b241695414610267578063bedf0e4a14610291578063c30cd28f1461029a57600080fd5b80635fd295d7116100de5780635fd295d7146101fd578063715018a6146102285780638da5cb5b14610230578063ae169a501461024157600080fd5b806310a063fa146101105780631d3b6012146101835780631d7b8fd7146101a95780634ac8eb5f146101f4575b600080fd5b61018161011e36600461152a565b6000958652600260205260409095206003810180546001600160a01b03199081166001600160a01b039687161790915560048201805482169486169490941790935560058101805490931694909316939093179055600c81019190915560070155565b005b610196610191366004611588565b610362565b6040519081526020015b60405180910390f35b6101e46101b73660046114ff565b60009182526002602090815260408084206001600160a01b03939093168452919052902060030154151590565b60405190151581526020016101a0565b61019660035481565b600154610210906001600160a01b031681565b6040516001600160a01b0390911681526020016101a0565b61018161082d565b6000546001600160a01b0316610210565b61018161024f3660046114e7565b610893565b6101816102623660046115a9565b610979565b61027a6102753660046114ff565b610d02565b6040805192151583526020830191909152016101a0565b61019660055481565b6102ad6102a83660046114e7565b610e3a565b604080516001600160a01b039c8d1681529a8c1660208c015298909a16978901979097526060880195909552608087019390935260a086019190915260c085015260e0840152610100830152610120820152610140810191909152610160016101a0565b61019660045481565b600354610196565b61019660065481565b61033e6103393660046114ff565b610eda565b6040516101a09594939291906116ec565b61018161035d3660046114ad565b610fff565b600080546001600160a01b031633146103c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6000838152600260205260408120600981015490911a60f81b7fff00000000000000000000000000000000000000000000000000000000000000161561044a5760405162461bcd60e51b815260206004820152601d60248201527f54686973206361736520616c72656164792068616420726573756c742e00000060448201526064016103b9565b60008060005b60018401548110156105f257600084600101828154811061048157634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168083528782526040808420815160a081018352815481526001820154948101949094526002810180549396509092918401916104d3906117d1565b80601f01602080910402602001604051908101604052809291908181526020018280546104ff906117d1565b801561054c5780601f106105215761010080835404028352916020019161054c565b820191906000526020600020905b81548152906001019060200180831161052f57829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604091820152825181519283015281018a905290915060009060600160405160208183030381529060405280519060200120905065212aacaca2a960d11b8114156105c95760208201516105c29087906110ca565b95506105dc565b60208201516105d99086906110ca565b94505b50505080806105ea9061180c565b915050610450565b508082111561060f5765212aacaca2a960d11b600984015561063f565b8082101561062b576529a2a62622a960d11b600984015561063f565b691154555255905311539560b21b60098401555b6000805b60018501548110156107fd57600085600101828154811061067457634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168083528882526040808420815160a081018352815481526001820154948101949094526002810180549396509092918401916106c6906117d1565b80601f01602080910402602001604051908101604052809291908181526020018280546106f2906117d1565b801561073f5780601f106107145761010080835404028352916020019161073f565b820191906000526020600020905b81548152906001019060200180831161072257829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604091820152825181519283015281018b9052909150600090606001604051602081830303815290604052805190602001209050876009015481146107b65760208201516107af9086906110ca565b94506107e7565b600288018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0385161790555b50505080806107f59061180c565b915050610643565b506008840181905542600a850155600684015460035461081c916110dd565b600355505050600901549392505050565b6000546001600160a01b031633146108875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b9565b61089160006110e9565b565b600081815260026020908152604080832033845291829052822060040154909190819060ff161515600114156108c857600080fd5b6108d28433610d02565b909250905081156109735760006109116109066064610900600654886008015461113990919063ffffffff16565b90611145565b6008860154906110dd565b6002850154909150600090610927908390611145565b9050600061093584836110ca565b336000818152602089905260409020600401805460ff191660019081179091555491925061096f916001600160a01b031690309084611151565b5050505b50505050565b600084815260026020526040902060068101546007820154116109de5760405162461bcd60e51b815260206004820152601260248201527f546865206361736520697320636c6f736564000000000000000000000000000060448201526064016103b9565b33600090815260208281526040808320815160a081018352815481526001820154938101939093526002810180549192840191610a1a906117d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a46906117d1565b8015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b50505091835250506003820154602082015260049091015460ff161515604090910152606081015190915015610b0b5760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420616c6c6f772075736572207265706c7920616761696e00000000000060448201526064016103b9565b6007820154600454600090610b2890606490610900908590611139565b90506000610b4660646109006005548661113990919063ffffffff16565b9050818811158015610b585750808810155b610ba45760405162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206973206e6f7420696e2072616e6765206c696d69742e00000060448201526064016103b9565b600154610bbc906001600160a01b031633308b611151565b600354610bc990896110ca565b600355602080850189815288865260408087018981524260608901523360009081528985529190912087518155915160018301555180518793610c139260028501929101906113f8565b50606082015160038201556080909101516004909101805491151560ff199092169190911790556001858101805491820181556000908152602090200180546001600160a01b031916331790556006850154610c6f90896110ca565b60068601556040517fbb45067d90eddb11ceffb606ce8d7f6d26b078295b1180a987973423631dd75590610cac9033908c908c908c908c906116b8565b60405180910390a18460070154856006015410610cf7576040518981527fbcbc308a5dd8d1168941e2bf5d378ddbab688ef0bb66a66622ca88104bd244579060200160405180910390a15b505050505050505050565b60008281526002602081815260408084206001600160a01b0386168552808352818520825160a08101845281548152600182015494810194909452938401805486959294869490939290840191610d58906117d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610d84906117d1565b8015610dd15780601f10610da657610100808354040283529160200191610dd1565b820191906000526020600020905b815481529060010190602001808311610db457829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040918201528251600b860154825180850192909252818301528151808203830181526060909101909152805190820120600990940154910151921496919550909350505050565b6000818152600260205260408120600380820154600483015460058401546006850154600786015460088701546009880154600a890154600b8a0154600c8b0154600d8c01546001600160a01b039a8b169d998b169c98909a169a96999598949793969295919490939092909160ff1690811115610ec857634e487b7160e01b600052602160045260246000fd5b91505091939597999b90929496989a50565b60008281526002602081815260408084206001600160a01b0386168552808352818520825160a08101845281548152600182015494810194909452938401805486956060958795869594869492939291840191610f36906117d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610f62906117d1565b8015610faf5780601f10610f8457610100808354040283529160200191610faf565b820191906000526020600020905b815481529060010190602001808311610f9257829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604091820152825191830151908301516060840151608090940151929d919c509a509198509650945050505050565b6000546001600160a01b031633146110595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b9565b6001600160a01b0381166110be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b9565b6110c7816110e9565b50565b60006110d68284611737565b9392505050565b60006110d6828461178e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006110d6828461176f565b60006110d6828461174f565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610973928792916000916111fe918516908490611280565b80519091501561127b578080602001905181019061121c91906114c7565b61127b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103b9565b505050565b606061128f8484600085611297565b949350505050565b6060824710156112f85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103b9565b843b6113465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b9565b600080866001600160a01b03168587604051611362919061169c565b60006040518083038185875af1925050503d806000811461139f576040519150601f19603f3d011682016040523d82523d6000602084013e6113a4565b606091505b50915091506113b48282866113bf565b979650505050505050565b606083156113ce5750816110d6565b8251156113de5782518084602001fd5b8160405162461bcd60e51b81526004016103b99190611724565b828054611404906117d1565b90600052602060002090601f016020900481019282611426576000855561146c565b82601f1061143f57805160ff191683800117855561146c565b8280016001018555821561146c579182015b8281111561146c578251825591602001919060010190611451565b5061147892915061147c565b5090565b5b80821115611478576000815560010161147d565b80356001600160a01b03811681146114a857600080fd5b919050565b6000602082840312156114be578081fd5b6110d682611491565b6000602082840312156114d8578081fd5b815180151581146110d6578182fd5b6000602082840312156114f8578081fd5b5035919050565b60008060408385031215611511578081fd5b8235915061152160208401611491565b90509250929050565b60008060008060008060c08789031215611542578182fd5b8635955061155260208801611491565b945061156060408801611491565b935061156e60608801611491565b92506080870135915060a087013590509295509295509295565b6000806040838503121561159a578182fd5b50508035926020909101359150565b600080600080608085870312156115be578384fd5b843593506020850135925060408501359150606085013567ffffffffffffffff808211156115ea578283fd5b818701915087601f8301126115fd578283fd5b81358181111561160f5761160f61183d565b604051601f8201601f19908116603f011681019083821181831017156116375761163761183d565b816040528281528a602084870101111561164f578586fd5b82602086016020830137918201602001949094529598949750929550505050565b600081518084526116888160208601602086016117a5565b601f01601f19169290920160200192915050565b600082516116ae8184602087016117a5565b9190910192915050565b6001600160a01b038616815284602082015283604082015282606082015260a0608082015260006113b460a0830184611670565b85815284602082015260a06040820152600061170b60a0830186611670565b6060830194909452509015156080909101529392505050565b6020815260006110d66020830184611670565b6000821982111561174a5761174a611827565b500190565b60008261176a57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561178957611789611827565b500290565b6000828210156117a0576117a0611827565b500390565b60005b838110156117c05781810151838201526020016117a8565b838111156109735750506000910152565b600181811c908216806117e557607f821691505b6020821081141561180657634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561182057611820611827565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212204d277129829c80d139e28fd4328eb84242103cd5da8b56e48f43c0ea896c4a6464736f6c63430008040033";

export class Validator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _maxPercentValue: BigNumberish,
    _minPercentValue: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Validator> {
    return super.deploy(
      _maxPercentValue,
      _minPercentValue,
      _fee,
      overrides || {}
    ) as Promise<Validator>;
  }
  getDeployTransaction(
    _maxPercentValue: BigNumberish,
    _minPercentValue: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxPercentValue,
      _minPercentValue,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): Validator {
    return super.attach(address) as Validator;
  }
  connect(signer: Signer): Validator__factory {
    return super.connect(signer) as Validator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorInterface {
    return new utils.Interface(_abi) as ValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Validator {
    return new Contract(address, _abi, signerOrProvider) as Validator;
  }
}
