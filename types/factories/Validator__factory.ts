/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Validator, ValidatorInterface } from "../Validator";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxPercentValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minPercentValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "CASE_GEN_RESULT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "CASE_VOTE_DONE",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "USER_DECISION",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_totalValue",
        type: "uint256",
      },
    ],
    name: "addCase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_randomness",
        type: "bytes32",
      },
    ],
    name: "evaluate",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "getCaseTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
    ],
    name: "getCaseValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getUserDecision",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getUserResultInCase",
    outputs: [
      {
        internalType: "bool",
        name: "_isWin",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPercentValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPercentValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_caseId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_answer",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_remark",
        type: "string",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161170c38038061170c83398101604081905261002f9161009c565b6100383361004c565b6006919091556005919091556007556100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100b0578283fd5b8351925060208401519150604084015190509250925092565b611634806100d86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063de2d17b911610066578063de2d17b9146101b4578063e5a86335146101de578063f2fde38b14610201578063f71e36e61461021457600080fd5b80638da5cb5b1461017f578063bedf0e4a1461019a578063d0f2f3e0146101a3578063d6eb5910146101ac57600080fd5b806340d14167116100d357806340d14167146101485780634ac8eb5f1461015b5780636bfbb12a14610164578063715018a61461017757600080fd5b806311682722146100fa578063174e31c414610120578063277be57e14610135575b600080fd5b61010d610108366004611305565b610227565b6040519081526020015b60405180910390f35b61013361012e366004611305565b610297565b005b61010d610143366004611305565b610432565b61010d610156366004611305565b610489565b61010d60045481565b61010d610172366004611369565b6104e0565b610133610a04565b6000546040516001600160a01b039091168152602001610117565b61010d60065481565b61010d60055481565b60045461010d565b6101c76101c236600461132e565b610a6a565b604080519215158352602083019190915201610117565b6101f16101ec36600461132e565b610bf1565b6040519015158152602001610117565b61013361020f3660046112eb565b610c60565b61013361022236600461139b565b610d2b565b6001805460009182610238836115b7565b90915550506001600160a01b03831660009081526003602052604081206001548154811061027657634e487b7160e01b600052603260045260246000fd5b60009182526020909120600460099092020101839055505060015492915050565b6001600160a01b03821660009081526003602052604081208054839081106102cf57634e487b7160e01b600052603260045260246000fd5b600091825260208083203384526009909202909101908190526040822060040154909250819060ff1615156001141561030757600080fd5b610312858533610a6a565b9092509050811561042b576000610351610346606461034060075488600501546111af90919063ffffffff16565b906111c2565b6005860154906111ce565b60028501549091506000906103679083906111c2565b9050600061037584836111da565b33600081815260208990526040908190206004908101805460ff1916600117905560025491516323b872dd60e01b815230918101919091526024810192909252604482018390529192506001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156103ee57600080fd5b505af1158015610402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104269190611475565b505050505b5050505050565b6001600160a01b038216600090815260036020526040812080548291908490811061046d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060046009909202010154949350505050565b6001600160a01b03821660009081526003602052604081208054829190849081106104c457634e487b7160e01b600052603260045260246000fd5b6000918252602090912060036009909202010154949350505050565b600080546001600160a01b031633146105405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038416600090815260036020526040812080548590811061057857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060090201905080600601546000602081106105ad57634e487b7160e01b600052603260045260246000fd5b1a60f81b7fff0000000000000000000000000000000000000000000000000000000000000016156106205760405162461bcd60e51b815260206004820152601d60248201527f54686973206361736520616c72656164792068616420726573756c742e0000006044820152606401610537565b60008060005b60018401548110156107c857600084600101828154811061065757634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168083528782526040808420815160a081018352815481526001820154948101949094526002810180549396509092918401916106a99061157c565b80601f01602080910402602001604051908101604052809291908181526020018280546106d59061157c565b80156107225780601f106106f757610100808354040283529160200191610722565b820191906000526020600020905b81548152906001019060200180831161070557829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604091820152825181519283015281018a905290915060009060600160405160208183030381529060405280519060200120905065212aacaca2a960d11b81141561079f5760208201516107989087906111da565b95506107b2565b60208201516107af9086906111da565b94505b50505080806107c0906115b7565b915050610626565b50808211156107e55765212aacaca2a960d11b6006840155610815565b80821015610801576529a2a62622a960d11b6006840155610815565b691154555255905311539560b21b60068401555b6000805b60018501548110156109d357600085600101828154811061084a57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b03168083528882526040808420815160a0810183528154815260018201549481019490945260028101805493965090929184019161089c9061157c565b80601f01602080910402602001604051908101604052809291908181526020018280546108c89061157c565b80156109155780601f106108ea57610100808354040283529160200191610915565b820191906000526020600020905b8154815290600101906020018083116108f857829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff161515604091820152825181519283015281018b90529091506000906060016040516020818303038152906040528051906020012090508760060154811461098c5760208201516109859086906111da565b94506109bd565b600288018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0385161790555b50505080806109cb906115b7565b915050610819565b506005840181905542600785015560038401546004546109f2916111ce565b60045550505060060154949350505050565b6000546001600160a01b03163314610a5e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610537565b610a6860006111e6565b565b6001600160a01b038316600090815260036020526040812080548291829186908110610aa657634e487b7160e01b600052603260045260246000fd5b906000526020600020906009020190506000816000016000866001600160a01b03166001600160a01b031681526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282018054610b0e9061157c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3a9061157c565b8015610b875780601f10610b5c57610100808354040283529160200191610b87565b820191906000526020600020905b815481529060010190602001808311610b6a57829003601f168201915b5050509183525050600382015460208083019190915260049092015460ff1615156040918201528251600886015482518085019290925281830152815180820383018152606090910190915280519082012060069094015491015192149791965090945050505050565b6001600160a01b0383166000908152600360205260408120805482919085908110610c2c57634e487b7160e01b600052603260045260246000fd5b600091825260208083206001600160a01b038716845260099092029091019052604090206003015415159150509392505050565b6000546001600160a01b03163314610cba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610537565b6001600160a01b038116610d1f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610537565b610d28816111e6565b50565b6001600160a01b0385166000908152600360205260408120805486908110610d6357634e487b7160e01b600052603260045260246000fd5b906000526020600020906009020190508060030154816004015411610dca5760405162461bcd60e51b815260206004820152601260248201527f546865206361736520697320636c6f73656400000000000000000000000000006044820152606401610537565b33600090815260208281526040808320815160a081018352815481526001820154938101939093526002810180549192840191610e069061157c565b80601f0160208091040260200160405190810160405280929190818152602001828054610e329061157c565b8015610e7f5780601f10610e5457610100808354040283529160200191610e7f565b820191906000526020600020905b815481529060010190602001808311610e6257829003601f168201915b50505091835250506003820154602082015260049091015460ff161515604090910152606081015190915015610ef75760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420616c6c6f772075736572207265706c7920616761696e0000000000006044820152606401610537565b6004820154600554600090610f14906064906103409085906111af565b90506000610f326064610340600654866111af90919063ffffffff16565b9050818811158015610f445750808810155b610f905760405162461bcd60e51b815260206004820152601d60248201527f616d6f756e74206973206e6f7420696e2072616e6765206c696d69742e0000006044820152606401610537565b6002546040516323b872dd60e01b8152336004820152306024820152604481018a90526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610fe257600080fd5b505af1158015610ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101a9190611475565b6110665760405162461bcd60e51b815260206004820152600e60248201527f43616e2774207472616e736665720000000000000000000000000000000000006044820152606401610537565b60045461107390896111da565b6004556020808501898152888652604080870189815242606089015233600090815289855291909120875181559151600183015551805187936110bd926002850192910190611236565b5060608201516003808301919091556080909201516004909101805491151560ff199092169190911790556001868101805491820181556000908152602090200180546001600160a01b0319163317905585015461111b90896111da565b60038601556040517fbb45067d90eddb11ceffb606ce8d7f6d26b078295b1180a987973423631dd755906111589033908c908c908c908c90611495565b60405180910390a184600401548560030154106111a3576040518981527fbcbc308a5dd8d1168941e2bf5d378ddbab688ef0bb66a66622ca88104bd244579060200160405180910390a15b50505050505050505050565b60006111bb8284611546565b9392505050565b60006111bb8284611526565b60006111bb8284611565565b60006111bb828461150e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546112429061157c565b90600052602060002090601f01602090048101928261126457600085556112aa565b82601f1061127d57805160ff19168380011785556112aa565b828001600101855582156112aa579182015b828111156112aa57825182559160200191906001019061128f565b506112b69291506112ba565b5090565b5b808211156112b657600081556001016112bb565b80356001600160a01b03811681146112e657600080fd5b919050565b6000602082840312156112fc578081fd5b6111bb826112cf565b60008060408385031215611317578081fd5b611320836112cf565b946020939093013593505050565b600080600060608486031215611342578081fd5b61134b846112cf565b925060208401359150611360604085016112cf565b90509250925092565b60008060006060848603121561137d578283fd5b611386846112cf565b95602085013595506040909401359392505050565b600080600080600060a086880312156113b2578081fd5b6113bb866112cf565b9450602086013593506040860135925060608601359150608086013567ffffffffffffffff808211156113ec578283fd5b818801915088601f8301126113ff578283fd5b813581811115611411576114116115e8565b604051601f8201601f19908116603f01168101908382118183101715611439576114396115e8565b816040528281528b6020848701011115611451578586fd5b82602086016020830137856020848301015280955050505050509295509295909350565b600060208284031215611486578081fd5b815180151581146111bb578182fd5b6001600160a01b038616815260006020868184015285604084015284606084015260a0608084015283518060a0850152825b818110156114e35785810183015185820160c0015282016114c7565b818111156114f4578360c083870101525b50601f01601f19169290920160c001979650505050505050565b60008219821115611521576115216115d2565b500190565b60008261154157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611560576115606115d2565b500290565b600082821015611577576115776115d2565b500390565b600181811c9082168061159057607f821691505b602082108114156115b157634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156115cb576115cb6115d2565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212202f190cfc3713bc2eda17a08c6c0a17239f0e597b014ce3fe4961d8882fcdda2f64736f6c63430008040033";

export class Validator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _maxPercentValue: BigNumberish,
    _minPercentValue: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Validator> {
    return super.deploy(
      _maxPercentValue,
      _minPercentValue,
      _fee,
      overrides || {}
    ) as Promise<Validator>;
  }
  getDeployTransaction(
    _maxPercentValue: BigNumberish,
    _minPercentValue: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxPercentValue,
      _minPercentValue,
      _fee,
      overrides || {}
    );
  }
  attach(address: string): Validator {
    return super.attach(address) as Validator;
  }
  connect(signer: Signer): Validator__factory {
    return super.connect(signer) as Validator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorInterface {
    return new utils.Interface(_abi) as ValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Validator {
    return new Contract(address, _abi, signerOrProvider) as Validator;
  }
}
