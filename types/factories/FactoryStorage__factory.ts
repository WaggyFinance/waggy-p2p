/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FactoryStorage,
  FactoryStorageInterface,
} from "../FactoryStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_merchantAddress",
        type: "address",
      },
    ],
    name: "addMerchantAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMerchantAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerchantCount",
    outputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getMerchantToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerchantsAddress",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "merchant",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merchants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_merchantAddress",
        type: "address",
      },
    ],
    name: "setMerchantToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610bfa8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461016657806392c8823b14610184578063bde03c87146101b4578063c875d829146101d0578063cc14b320146101ec578063f2fde38b1461020a576100a9565b8063215c9417146100ae57806344d4aeb0146100de5780635b578cc9146100fc578063715018a61461012c5780638cec48e114610136575b600080fd5b6100c860048036038101906100c39190610889565b610226565b6040516100d59190610a00565b60405180910390f35b6100e6610259565b6040516100f39190610a7d565b60405180910390f35b61011660048036038101906101119190610889565b610266565b6040516101239190610a00565b60405180910390f35b6101346102cf565b005b610150600480360381019061014b91906108ee565b610357565b60405161015d9190610a00565b60405180910390f35b61016e6103c5565b60405161017b9190610a00565b60405180910390f35b61019e600480360381019061019991906108ee565b6103ee565b6040516101ab9190610a00565b60405180910390f35b6101ce60048036038101906101c99190610889565b61042d565b005b6101ea60048036038101906101e591906108b2565b61050f565b005b6101f461060d565b6040516102019190610a1b565b60405180910390f35b610224600480360381019061021f9190610889565b61069b565b005b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600280549050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6102d7610793565b73ffffffffffffffffffffffffffffffffffffffff166102f56103c5565b73ffffffffffffffffffffffffffffffffffffffff161461034b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034290610a5d565b60405180910390fd5b610355600061079b565b565b600060028281548110610393577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600281815481106103fe57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610435610793565b73ffffffffffffffffffffffffffffffffffffffff166104536103c5565b73ffffffffffffffffffffffffffffffffffffffff16146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a090610a5d565b60405180910390fd5b6002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610517610793565b73ffffffffffffffffffffffffffffffffffffffff166105356103c5565b73ffffffffffffffffffffffffffffffffffffffff161461058b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058290610a5d565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561069157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610647575b5050505050905090565b6106a3610793565b73ffffffffffffffffffffffffffffffffffffffff166106c16103c5565b73ffffffffffffffffffffffffffffffffffffffff1614610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90610a5d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610787576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077e90610a3d565b60405180910390fd5b6107908161079b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061086e81610b96565b92915050565b60008135905061088381610bad565b92915050565b60006020828403121561089b57600080fd5b60006108a98482850161085f565b91505092915050565b600080604083850312156108c557600080fd5b60006108d38582860161085f565b92505060206108e48582860161085f565b9150509250929050565b60006020828403121561090057600080fd5b600061090e84828501610874565b91505092915050565b6000610923838361092f565b60208301905092915050565b61093881610ae2565b82525050565b61094781610ae2565b82525050565b600061095882610aa8565b6109628185610ac0565b935061096d83610a98565b8060005b8381101561099e5781516109858882610917565b975061099083610ab3565b925050600181019050610971565b5085935050505092915050565b60006109b8602683610ad1565b91506109c382610b1e565b604082019050919050565b60006109db602083610ad1565b91506109e682610b6d565b602082019050919050565b6109fa81610b14565b82525050565b6000602082019050610a15600083018461093e565b92915050565b60006020820190508181036000830152610a35818461094d565b905092915050565b60006020820190508181036000830152610a56816109ab565b9050919050565b60006020820190508181036000830152610a76816109ce565b9050919050565b6000602082019050610a9260008301846109f1565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610aed82610af4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610b9f81610ae2565b8114610baa57600080fd5b50565b610bb681610b14565b8114610bc157600080fd5b5056fea2646970667358221220505da8252d47edd1355f9d08e5f0eb8016976746049b48b5eac4845ea8f3812a64736f6c63430008040033";

export class FactoryStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FactoryStorage> {
    return super.deploy(overrides || {}) as Promise<FactoryStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FactoryStorage {
    return super.attach(address) as FactoryStorage;
  }
  connect(signer: Signer): FactoryStorage__factory {
    return super.connect(signer) as FactoryStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryStorageInterface {
    return new utils.Interface(_abi) as FactoryStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FactoryStorage {
    return new Contract(address, _abi, signerOrProvider) as FactoryStorage;
  }
}
