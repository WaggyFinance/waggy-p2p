/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FactoryStorage,
  FactoryStorageInterface,
} from "../FactoryStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_merchantAddress",
        type: "address",
      },
    ],
    name: "addMerchantAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMerchantAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerchantCount",
    outputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getMerchantToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerchantsAddress",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "merchant",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merchants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_merchantAddress",
        type: "address",
      },
    ],
    name: "setMerchantToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106c58061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063c875d8291161005b578063c875d829146101a5578063cc14b320146101b8578063f2fde38b146101cd57600080fd5b80638da5cb5b1461016e57806392c8823b1461017f578063bde03c871461019257600080fd5b80635b578cc9116100b25780635b578cc914610125578063715018a6146101515780638cec48e11461015b57600080fd5b8063215c9417146100ce57806344d4aeb014610114575b600080fd5b6100f76100dc3660046105d7565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60025460405190815260200161010b565b6100f76101333660046105d7565b6001600160a01b039081166000908152600160205260409020541690565b6101596101e0565b005b6100f761016936600461062a565b61024b565b6000546001600160a01b03166100f7565b6100f761018d36600461062a565b6102a2565b6101596101a03660046105d7565b6102cc565b6101596101b33660046105f8565b610385565b6101c061041a565b60405161010b9190610642565b6101596101db3660046105d7565b61047c565b6000546001600160a01b0316331461023f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b610249600061055e565b565b600060028281548110610287577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b600281815481106102b257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146103265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610236565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610236565b6001600160a01b039182166000908152600160205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b6060600280548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610454575b5050505050905090565b6000546001600160a01b031633146104d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610236565b6001600160a01b0381166105525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610236565b61055b8161055e565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105d257600080fd5b919050565b6000602082840312156105e8578081fd5b6105f1826105bb565b9392505050565b6000806040838503121561060a578081fd5b610613836105bb565b9150610621602084016105bb565b90509250929050565b60006020828403121561063b578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156106835783516001600160a01b03168352928401929184019160010161065e565b5090969550505050505056fea2646970667358221220cd8ce2545983585acf15acaca3ccb0272de297d4cc4453fe799a6ad971abece664736f6c63430008040033";

export class FactoryStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FactoryStorage> {
    return super.deploy(overrides || {}) as Promise<FactoryStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FactoryStorage {
    return super.attach(address) as FactoryStorage;
  }
  connect(signer: Signer): FactoryStorage__factory {
    return super.connect(signer) as FactoryStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryStorageInterface {
    return new utils.Interface(_abi) as FactoryStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FactoryStorage {
    return new Contract(address, _abi, signerOrProvider) as FactoryStorage;
  }
}
