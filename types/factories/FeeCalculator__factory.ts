/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FeeCalculator, FeeCalculatorInterface } from "../FeeCalculator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "updateFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052601960015534801561001557600080fd5b5061002661002161002b565b61002f565b61007f565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104898061008e6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806399a5d7471161005057806399a5d747146100b2578063f2fde38b146100d2578063f97e17d9146100e557610072565b8063715018a6146100775780637b84fda5146100815780638da5cb5b14610094575b600080fd5b61007f6100ed565b005b61007f61008f366004610358565b610141565b61009c610185565b6040516100a99190610370565b60405180910390f35b6100c56100c0366004610358565b610194565b6040516100a991906103ff565b61007f6100e0366004610331565b61023a565b6100c56102ab565b6100f56102b1565b6001600160a01b0316610106610185565b6001600160a01b0316146101355760405162461bcd60e51b815260040161012c906103ca565b60405180910390fd5b61013f60006102b5565b565b6101496102b1565b6001600160a01b031661015a610185565b6001600160a01b0316146101805760405162461bcd60e51b815260040161012c906103ca565b600155565b6000546001600160a01b031690565b6000680579a814e10a7400008210156101af57506000610235565b683643aa6479860400008210156101de576101d76127106101d1846019610312565b90610325565b9050610235565b69021e27c1806e59a40000821015610201576101d76127106101d1846032610312565b690a968f44a75922a40000821015610224576101d76127106101d1846064610312565b6101d76127106101d1846096610312565b919050565b6102426102b1565b6001600160a01b0316610253610185565b6001600160a01b0316146102795760405162461bcd60e51b815260040161012c906103ca565b6001600160a01b03811661029f5760405162461bcd60e51b815260040161012c90610384565b6102a8816102b5565b50565b60015481565b3390565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061031e8284610428565b9392505050565b600061031e8284610408565b600060208284031215610342578081fd5b81356001600160a01b038116811461031e578182fd5b600060208284031215610369578081fd5b5035919050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60008261042357634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561044e57634e487b7160e01b81526011600452602481fd5b50029056fea26469706673582212205acd376081d48c9933e852627b62fdc9e834838174100b148279be808d357cb964736f6c63430008000033";

export class FeeCalculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeCalculator> {
    return super.deploy(overrides || {}) as Promise<FeeCalculator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeCalculator {
    return super.attach(address) as FeeCalculator;
  }
  connect(signer: Signer): FeeCalculator__factory {
    return super.connect(signer) as FeeCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeCalculatorInterface {
    return new utils.Interface(_abi) as FeeCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeCalculator {
    return new Contract(address, _abi, signerOrProvider) as FeeCalculator;
  }
}
