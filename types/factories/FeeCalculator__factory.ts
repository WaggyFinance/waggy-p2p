/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FeeCalculator, FeeCalculatorInterface } from "../FeeCalculator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "calculateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "updateFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052601960015534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103eb806100836000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806399a5d7471161005057806399a5d747146100b4578063f2fde38b146100d5578063f97e17d9146100e857600080fd5b8063715018a6146100775780637b84fda5146100815780638da5cb5b14610094575b600080fd5b61007f6100f1565b005b61007f61008f366004610352565b61015c565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100c76100c2366004610352565b6101bb565b6040519081526020016100ab565b61007f6100e336600461032b565b6101e4565b6100c760015481565b6000546001600160a01b031633146101505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61015a60006102af565b565b6000546001600160a01b031633146101b65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610147565b600155565b60006101de6127106101d86001548561030c90919063ffffffff16565b9061031f565b92915050565b6000546001600160a01b0316331461023e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610147565b6001600160a01b0381166102a35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610147565b6102ac816102af565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610318828461038a565b9392505050565b6000610318828461036a565b60006020828403121561033c578081fd5b81356001600160a01b0381168114610318578182fd5b600060208284031215610363578081fd5b5035919050565b60008261038557634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156103b057634e487b7160e01b81526011600452602481fd5b50029056fea26469706673582212204336f29dec988ee950d1aef6c06605993a6377d61c04848318f905c42e9d998c64736f6c63430008040033";

export class FeeCalculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeCalculator> {
    return super.deploy(overrides || {}) as Promise<FeeCalculator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeCalculator {
    return super.attach(address) as FeeCalculator;
  }
  connect(signer: Signer): FeeCalculator__factory {
    return super.connect(signer) as FeeCalculator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeCalculatorInterface {
    return new utils.Interface(_abi) as FeeCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeCalculator {
    return new Contract(address, _abi, signerOrProvider) as FeeCalculator;
  }
}
