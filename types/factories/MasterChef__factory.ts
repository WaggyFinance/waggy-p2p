/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wag",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wagPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockRewardPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingWag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accWagPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setLockRewardPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wag",
    outputs: [
      {
        internalType: "contract WaggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wagPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016004556000600855610384600a553480156200002157600080fd5b50604051620020a7380380620020a78339810160408190526200004491620001dd565b6200004f3362000170565b600180546001600160a01b03199081166001600160a01b039687169081178355600280548316968816969096179095556003939093556009829055604080516080810182529485526103e86020860181815291860193845260006060870181815260068054958601815590915295517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6004909402938401805490961697169690961790935591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4182015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d429091015560085562000224565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001d857600080fd5b919050565b60008060008060808587031215620001f3578384fd5b620001fe85620001c0565b93506200020e60208601620001c0565b6040860151606090960151949790965092505050565b611e7380620002346000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806364482f791161010457806393f1a40b116100a2578063f2fde38b11610071578063f2fde38b14610409578063f5dbced21461041c578063f6a159d31461042f578063f94c20861461043857600080fd5b806393f1a40b14610389578063ab728ef7146103d0578063d49e77cd146103e3578063e2bbb158146103f657600080fd5b80638aa28550116100de5780638aa28550146103495780638d88a90e146103525780638da5cb5b146103655780638dbb1e3a1461037657600080fd5b806364482f7914610303578063715018a6146103165780637cd07e471461031e57600080fd5b8063441a3e701161017c5780635312ea8e1161014b5780635312ea8e146102cc57806354305f1d146102df5780635ffe6146146102e8578063630b5ba1146102fb57600080fd5b8063441a3e701461028a578063454b06081461029d57806348cd4cb1146102b057806351eb05a6146102b957600080fd5b806317caf6f1116101b857806317caf6f1146102485780631eaaa0451461025157806323cf31181461026457806341441d3b1461027757600080fd5b8063081e3eda146101df5780631058d281146101f65780631526fe271461020b575b600080fd5b6006545b6040519081526020015b60405180910390f35b610209610204366004611c6d565b61044b565b005b61021e610219366004611c6d565b610648565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101ed565b6101e360085481565b61020961025f366004611ccc565b61068c565b610209610272366004611c19565b610802565b610209610285366004611c6d565b61086c565b610209610298366004611d0d565b610a1c565b6102096102ab366004611c6d565b610c3a565b6101e360095481565b6102096102c7366004611c6d565b610f25565b6102096102da366004611c6d565b611171565b6101e360035481565b6102096102f6366004611c6d565b61128c565b6102096112d9565b610209610311366004611d2e565b611304565b6102096113f9565b600554610331906001600160a01b031681565b6040516001600160a01b0390911681526020016101ed565b6101e360045481565b610209610360366004611c19565b61144d565b6000546001600160a01b0316610331565b6101e3610384366004611d0d565b6114b5565b6103bb610397366004611c9d565b60076020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101ed565b6102096103de366004611c6d565b6114d0565b600254610331906001600160a01b031681565b610209610404366004611d0d565b61156f565b610209610417366004611c19565b61174c565b600154610331906001600160a01b031681565b6101e3600a5481565b6101e3610446366004611c9d565b611805565b6000600660008154811061046f57634e487b7160e01b600052603260045260246000fd5b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df90915260409092208054600490920290920192508311156104fa5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064015b60405180910390fd5b6105046000610f25565b600061053e826001015461053864e8d4a510006105328760030154876000015461197f90919063ffffffff16565b9061198b565b90611997565b905080156105505761055033826119a3565b83156105e95781546105629085611997565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e79190611c35565b505b600383015482546106049164e8d4a51000916105329161197f565b600183015560405184815260009033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b6006818154811061065857600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6000546001600160a01b031633146106d45760405162461bcd60e51b81526020600482018190526024820152600080516020611e1e83398151915260448201526064016104f1565b80156106e2576106e26112d9565b600060095443116106f5576009546106f7565b435b6008549091506107079085611ab4565b600855604080516080810182526001600160a01b0385811682526020820187815292820184815260006060840181815260068054600181018255925293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600490920291820180546001600160a01b031916919094161790925592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4082015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909101556107fc611ac0565b50505050565b6000546001600160a01b0316331461084a5760405162461bcd60e51b81526020600482018190526024820152600080516020611e1e83398151915260448201526064016104f1565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000600660008154811061089057634e487b7160e01b600052603260045260246000fd5b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df909152604083206004909202019250906108d790610f25565b80541561092057600061090c826001015461053864e8d4a510006105328760030154876000015461197f90919063ffffffff16565b9050801561091e5761091e33826119a3565b505b82156109bf5781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561097757600080fd5b505af115801561098b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af9190611c35565b5080546109bc9084611ab4565b81555b600382015481546109da9164e8d4a51000916105329161197f565b600182015560405183815260009033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505050565b81610a695760405162461bcd60e51b815260206004820152601960248201527f77697468647261772057616720627920756e7374616b696e670000000000000060448201526064016104f1565b600060068381548110610a8c57634e487b7160e01b600052603260045260246000fd5b600091825260208083208684526007825260408085203386529092529220805460049092029092019250831115610afa5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064016104f1565b610b0384610f25565b6000610b31826001015461053864e8d4a510006105328760030154876000015461197f90919063ffffffff16565b90508015610b4357610b4333826119a3565b8315610bdc578154610b559085611997565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610ba257600080fd5b505af1158015610bb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bda9190611c35565b505b60038301548254610bf79164e8d4a51000916105329161197f565b6001830155604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b6005546001600160a01b0316610c925760405162461bcd60e51b815260206004820152601460248201527f6d6967726174653a206e6f206d69677261746f7200000000000000000000000060448201526064016104f1565b600060068281548110610cb557634e487b7160e01b600052603260045260246000fd5b60009182526020822060049182020180546040516370a0823160e01b815230938101939093529093506001600160a01b0316919082906370a082319060240160206040518083038186803b158015610d0c57600080fd5b505afa158015610d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d449190611c85565b60055460405163095ea7b360e01b81526001600160a01b0391821660048201526024810183905291925083169063095ea7b390604401602060405180830381600087803b158015610d9457600080fd5b505af1158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc9190611c35565b5060055460405163ce5494bb60e01b81526001600160a01b038481166004830152600092169063ce5494bb90602401602060405180830381600087803b158015610e1557600080fd5b505af1158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4d9190611c51565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a082319060240160206040518083038186803b158015610e8f57600080fd5b505afa158015610ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec79190611c85565b8214610f045760405162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b60448201526064016104f1565b83546001600160a01b0319166001600160a01b039190911617909255505050565b600060068281548110610f4857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201905080600201544311610f67575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610faa57600080fd5b505afa158015610fbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe29190611c85565b905080610ff457504360029091015550565b60006110048360020154436114b5565b90506000611031600854610532866001015461102b6003548761197f90919063ffffffff16565b9061197f565b6001546002549192506001600160a01b03908116916340c10f19911661105884600a61198b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156110b657600080fd5b505af11580156110ca573d6000803e3d6000fd5b50506001546040516340c10f1960e01b8152306004820152602481018590526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561111a57600080fd5b505af115801561112e573d6000803e3d6000fd5b5050505061115c6111518461053264e8d4a510008561197f90919063ffffffff16565b600386015490611ab4565b60038501555050436002909201919091555050565b60006006828154811061119457634e487b7160e01b600052603260045260246000fd5b6000918252602080832085845260078252604080852033808752935293849020600493840290910180548254955163a9059cbb60e01b81529485019390935260248401949094529293506001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561120b57600080fd5b505af115801561121f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112439190611c35565b508054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b6000546001600160a01b031633146112d45760405162461bcd60e51b81526020600482018190526024820152600080516020611e1e83398151915260448201526064016104f1565b600455565b60065460005b81811015611300576112f081610f25565b6112f981611dc9565b90506112df565b5050565b6000546001600160a01b0316331461134c5760405162461bcd60e51b81526020600482018190526024820152600080516020611e1e83398151915260448201526064016104f1565b801561135a5761135a6112d9565b60006006848154811061137d57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160010154905082600685815481106113b357634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101819055508281146107fc576113ee836113e88360085461199790919063ffffffff16565b90611ab4565b6008556107fc611ac0565b6000546001600160a01b031633146114415760405162461bcd60e51b81526020600482018190526024820152600080516020611e1e83398151915260448201526064016104f1565b61144b6000611bc9565b565b6002546001600160a01b031633146114935760405162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b60448201526064016104f1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6004546000906114c99061102b8486611997565b9392505050565b6000546001600160a01b031633146115185760405162461bcd60e51b81526020600482018190526024820152600080516020611e1e83398151915260448201526064016104f1565b6103e881111561156a5760405162461bcd60e51b815260206004820152601360248201527f6e6f7420616c6c6f77206f76657220313030250000000000000000000000000060448201526064016104f1565b600a55565b816115bc5760405162461bcd60e51b815260206004820152601660248201527f6465706f73697420576167206279207374616b696e670000000000000000000060448201526064016104f1565b6000600683815481106115df57634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260078252604080852033865290925292206004909102909101915061161084610f25565b805415611659576000611645826001015461053864e8d4a510006105328760030154876000015461197f90919063ffffffff16565b905080156116575761165733826119a3565b505b82156116f85781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156116b057600080fd5b505af11580156116c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e89190611c35565b5080546116f59084611ab4565b81555b600382015481546117139164e8d4a51000916105329161197f565b6001820155604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200161063a565b6000546001600160a01b031633146117945760405162461bcd60e51b81526020600482018190526024820152600080516020611e1e83398151915260448201526064016104f1565b6001600160a01b0381166117f95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f1565b61180281611bc9565b50565b6000806006848154811061182957634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526007825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a082319060240160206040518083038186803b1580156118a057600080fd5b505afa1580156118b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d89190611c85565b90508360020154431180156118ec57508015155b1561194c5760006119018560020154436114b5565b90506000611928600854610532886001015461102b6003548761197f90919063ffffffff16565b9050611947611940846105328464e8d4a5100061197f565b8590611ab4565b935050505b611974836001015461053864e8d4a5100061053286886000015461197f90919063ffffffff16565b979650505050505050565b60006114c98284611d93565b60006114c98284611d73565b60006114c98284611db2565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156119f157600080fd5b505af1158015611a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a299190611c35565b506000611a476103e8610532600a548561197f90919063ffffffff16565b60015460405163282d3fdf60e01b81526001600160a01b0386811660048301526024820184905292935091169063282d3fdf90604401600060405180830381600087803b158015611a9757600080fd5b505af1158015611aab573d6000803e3d6000fd5b50505050505050565b60006114c98284611d5b565b600654600060015b82811015611b2757611b1560068281548110611af457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016001015483611ab490919063ffffffff16565b9150611b2081611dc9565b9050611ac8565b50801561130057611b3981600361198b565b9050611b87816113e86006600081548110611b6457634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016001015460085461199790919063ffffffff16565b600881905550806006600081548110611bb057634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101819055505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215611c2a578081fd5b81356114c981611dfa565b600060208284031215611c46578081fd5b81516114c981611e0f565b600060208284031215611c62578081fd5b81516114c981611dfa565b600060208284031215611c7e578081fd5b5035919050565b600060208284031215611c96578081fd5b5051919050565b60008060408385031215611caf578081fd5b823591506020830135611cc181611dfa565b809150509250929050565b600080600060608486031215611ce0578081fd5b833592506020840135611cf281611dfa565b91506040840135611d0281611e0f565b809150509250925092565b60008060408385031215611d1f578182fd5b50508035926020909101359150565b600080600060608486031215611d42578283fd5b83359250602084013591506040840135611d0281611e0f565b60008219821115611d6e57611d6e611de4565b500190565b600082611d8e57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611dad57611dad611de4565b500290565b600082821015611dc457611dc4611de4565b500390565b6000600019821415611ddd57611ddd611de4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461180257600080fd5b801515811461180257600080fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122064a11f91fe7ecba59c84bc573d8ddff2dc91fedbbfca2ba8cfc10b8b53a482cc64736f6c63430008040033";

export class MasterChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
