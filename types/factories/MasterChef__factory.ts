/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wag",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wagPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "existLp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockRewardPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingWag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accWagPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "removePoolFromLpToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setLockRewardPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wag",
    outputs: [
      {
        internalType: "contract WaggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wagPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f1f38038062001f1f8339810160408190526200003491620001d8565b6200003f336200016b565b60016004818155610384600b5581546001600160a01b039687166001600160a01b0319918216811784556002805497891697831697909717909655600394909455600a839055604080516080810182529586526103e8602087018181529187019485526000606088018181526005805496870181559091529651939092027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db081018054949098169390951692909217909555517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1830155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db39091015560095562000220565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001d357600080fd5b919050565b60008060008060808587031215620001ef57600080fd5b620001fa85620001bb565b93506200020a60208601620001bb565b6040860151606090960151949790965092505050565b611cef80620002306000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063715018a61161010f578063b42754a5116100a2578063f2fde38b11610071578063f2fde38b14610463578063f5dbced214610476578063f6a159d314610489578063f94c20861461049257600080fd5b8063b42754a514610415578063d1058e5914610435578063d49e77cd1461043d578063e2bbb1581461045057600080fd5b80638dbb1e3a116100de5780638dbb1e3a1461037557806393f1a40b14610388578063a0f4c76a146103cf578063ab728ef71461040257600080fd5b8063715018a61461032c5780638aa28550146103345780638d88a90e1461033d5780638da5cb5b1461035057600080fd5b806341441d3b116101875780635312ea8e116101565780635312ea8e146102f557806354305f1d146103085780635ffe614614610311578063630b5ba11461032457600080fd5b806341441d3b146102b3578063441a3e70146102c657806348cd4cb1146102d957806351eb05a6146102e257600080fd5b80631ab06ee5116101c35780631ab06ee5146102675780632b8bbbe81461027a578063378d7af21461028d578063379607f5146102a057600080fd5b8063081e3eda146101f55780631058d2811461020c5780631526fe271461022157806317caf6f11461025e575b600080fd5b6005545b6040519081526020015b60405180910390f35b61021f61021a366004611af4565b6104a5565b005b61023461022f366004611af4565b610685565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610203565b6101f960095481565b61021f610275366004611b0d565b6106c9565b61021f610288366004611b44565b6107a9565b61021f61029b366004611b74565b61096b565b61021f6102ae366004611af4565b610b35565b61021f6102c1366004611af4565b610bd6565b61021f6102d4366004611b0d565b610d69565b6101f9600a5481565b61021f6102f0366004611af4565b610f6a565b61021f610303366004611af4565b611199565b6101f960035481565b61021f61031f366004611af4565b611297565b61021f6112f4565b61021f61131f565b6101f960045481565b61021f61034b366004611b74565b611373565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610203565b6101f9610383366004611b0d565b6113db565b6103ba610396366004611b44565b60066020908152600092835260408084209091529082529020805460019091015482565b60408051928352602083019190915201610203565b6103f26103dd366004611b74565b60076020526000908152604090205460ff1681565b6040519015158152602001610203565b61021f610410366004611af4565b6113f6565b6101f9610423366004611b74565b60086020526000908152604090205481565b61021f611495565b60025461035d906001600160a01b031681565b61021f61045e366004611b0d565b6114c0565b61021f610471366004611b74565b611680565b60015461035d906001600160a01b031681565b6101f9600b5481565b6101f96104a0366004611b44565b611736565b600060056000815481106104bb576104bb611b91565b600091825260208083203384527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f890915260409092208054600490920290920192508311156105465760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064015b60405180910390fd5b6105506000610f6a565b600061058a826001015461058464e8d4a5100061057e8760030154876000015461189390919063ffffffff16565b9061189f565b906118ab565b9050801561059c5761059c33826118b7565b83156106265781546105ae90856118ab565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106249190611ba7565b505b600383015482546106419164e8d4a510009161057e91611893565b600183015560405184815260009033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b6005818154811061069557600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6000546001600160a01b031633146107115760405162461bcd60e51b81526020600482018190526024820152600080516020611c9a833981519152604482015260640161053d565b6107196112f4565b6107216119b9565b60006005838154811061073657610736611b91565b9060005260206000209060040201600101549050816005848154811061075e5761075e611b91565b9060005260206000209060040201600101819055508181146107a45761079982610793836009546118ab90919063ffffffff16565b90611a98565b6009556107a46119b9565b505050565b6000546001600160a01b031633146107f15760405162461bcd60e51b81526020600482018190526024820152600080516020611c9a833981519152604482015260640161053d565b6001600160a01b03811660009081526007602052604090205460ff161561081757600080fd5b61081f6112f4565b6108276119b9565b6000600a54431161083a57600a5461083c565b435b60095490915061084c9084611a98565b600955600580546001600160a01b03848116600081815260086020908152604080832086905580516080810182528481528083018b81528183018a8152606083018681526001808b018c559a875292517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db06004909a02998a0180546001600160a01b0319169190991617909755517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db188015594517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db287015593517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db39095019490945590815260079092529020805460ff191690911790556107a46119b9565b6000546001600160a01b031633146109b35760405162461bcd60e51b81526020600482018190526024820152600080516020611c9a833981519152604482015260640161053d565b6001600160a01b03811660009081526007602052604090205460ff166109d857600080fd5b6109e06112f4565b6109e86119b9565b600580546109f79060016118ab565b81548110610a0757610a07611b91565b9060005260206000209060040201600560086000846001600160a01b03166001600160a01b031681526020019081526020016000205481548110610a4d57610a4d611b91565b60009182526020808320845460049093020180546001600160a01b0319166001600160a01b039384161781556001808601549082015560028086015490820155600394850154940193909355831681526008918290526040812054600580549193929184908110610ac057610ac0611b91565b600091825260208083206004909202909101546001600160a01b031683528201929092526040019020556005805480610afb57610afb611bc9565b60008281526020812060046000199093019283020180546001600160a01b0319168155600181018290556002810182905560030155905550565b600060058281548110610b4a57610b4a611b91565b60009182526020808320858452600682526040808520338652909252908320600181015460036004909402909201928301548154939550909392610b9e92916105849164e8d4a510009161057e9190611893565b90508015610bd05760038301548254610bc19164e8d4a510009161057e91611893565b6001830155610bd033826118b7565b50505050565b60006005600081548110610bec57610bec611b91565b600091825260208083203384527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f890915260408320600490920201925090610c3390610f6a565b805415610c7c576000610c68826001015461058464e8d4a5100061057e8760030154876000015461189390919063ffffffff16565b90508015610c7a57610c7a33826118b7565b505b8215610d0c5781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610cd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfc9190611ba7565b508054610d099084611a98565b81555b60038201548154610d279164e8d4a510009161057e91611893565b600182015560405183815260009033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505050565b81610db65760405162461bcd60e51b815260206004820152601960248201527f77697468647261772057616720627920756e7374616b696e6700000000000000604482015260640161053d565b600060058381548110610dcb57610dcb611b91565b600091825260208083208684526006825260408085203386529092529220805460049092029092019250831115610e395760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015260640161053d565b610e4284610f6a565b6000610e70826001015461058464e8d4a5100061057e8760030154876000015461189390919063ffffffff16565b90508015610e8257610e8233826118b7565b8315610f0c578154610e9490856118ab565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0a9190611ba7565b505b60038301548254610f279164e8d4a510009161057e91611893565b6001830155604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b600060058281548110610f7f57610f7f611b91565b9060005260206000209060040201905080600201544311610f9e575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610fe6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100a9190611bdf565b90508061101c57504360029091015550565b600061102c8360020154436113db565b9050600061105960095461057e86600101546110536003548761189390919063ffffffff16565b90611893565b6001546002549192506001600160a01b03908116916340c10f19911661108084600a61189f565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156110de57600080fd5b505af11580156110f2573d6000803e3d6000fd5b50506001546040516340c10f1960e01b8152306004820152602481018590526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561114257600080fd5b505af1158015611156573d6000803e3d6000fd5b505050506111846111798461057e64e8d4a510008561189390919063ffffffff16565b600386015490611a98565b60038501555050436002909201919091555050565b6000600582815481106111ae576111ae611b91565b6000918252602080832085845260068252604080852033808752935293849020600493840290910180548254955163a9059cbb60e01b81529485019390935260248401949094529293506001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561122a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124e9190611ba7565b508054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b6000546001600160a01b031633146112df5760405162461bcd60e51b81526020600482018190526024820152600080516020611c9a833981519152604482015260640161053d565b6112e76112f4565b6112ef6119b9565b600455565b60055460005b8181101561131b5761130b81610f6a565b61131481611c0e565b90506112fa565b5050565b6000546001600160a01b031633146113675760405162461bcd60e51b81526020600482018190526024820152600080516020611c9a833981519152604482015260640161053d565b6113716000611aa4565b565b6002546001600160a01b031633146113b95760405162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015260640161053d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6004546000906113ef9061105384866118ab565b9392505050565b6000546001600160a01b0316331461143e5760405162461bcd60e51b81526020600482018190526024820152600080516020611c9a833981519152604482015260640161053d565b6103e88111156114905760405162461bcd60e51b815260206004820152601360248201527f6e6f7420616c6c6f77206f766572203130302500000000000000000000000000604482015260640161053d565b600b55565b60005b6005548110156114bd576114ab81610b35565b806114b581611c0e565b915050611498565b50565b8161150d5760405162461bcd60e51b815260206004820152601660248201527f6465706f73697420576167206279207374616b696e6700000000000000000000604482015260640161053d565b60006005838154811061152257611522611b91565b6000918252602080832086845260068252604080852033865290925292206004909102909101915061155384610f6a565b80541561159c576000611588826001015461058464e8d4a5100061057e8760030154876000015461189390919063ffffffff16565b9050801561159a5761159a33826118b7565b505b821561162c5781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156115f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161c9190611ba7565b5080546116299084611a98565b81555b600382015481546116479164e8d4a510009161057e91611893565b6001820155604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590602001610677565b6000546001600160a01b031633146116c85760405162461bcd60e51b81526020600482018190526024820152600080516020611c9a833981519152604482015260640161053d565b6001600160a01b03811661172d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161053d565b6114bd81611aa4565b6000806005848154811061174c5761174c611b91565b600091825260208083208784526006825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a0823190602401602060405180830381865afa1580156117c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ec9190611bdf565b905083600201544311801561180057508015155b156118605760006118158560020154436113db565b9050600061183c60095461057e88600101546110536003548761189390919063ffffffff16565b905061185b6118548461057e8464e8d4a51000611893565b8590611a98565b935050505b611888836001015461058464e8d4a5100061057e86886000015461189390919063ffffffff16565b979650505050505050565b60006113ef8284611c29565b60006113ef8284611c48565b60006113ef8284611c6a565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561190a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192e9190611ba7565b50600061194c6103e861057e600b548561189390919063ffffffff16565b60015460405163282d3fdf60e01b81526001600160a01b0386811660048301526024820184905292935091169063282d3fdf90604401600060405180830381600087803b15801561199c57600080fd5b505af11580156119b0573d6000803e3d6000fd5b50505050505050565b600554600060015b82811015611a1257611a00600582815481106119df576119df611b91565b90600052602060002090600402016001015483611a9890919063ffffffff16565b9150611a0b81611c0e565b90506119c1565b50801561131b57611a2481600361189f565b9050611a64816107936005600081548110611a4157611a41611b91565b9060005260206000209060040201600101546009546118ab90919063ffffffff16565b600981905550806005600081548110611a7f57611a7f611b91565b9060005260206000209060040201600101819055505050565b60006113ef8284611c81565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215611b0657600080fd5b5035919050565b60008060408385031215611b2057600080fd5b50508035926020909101359150565b6001600160a01b03811681146114bd57600080fd5b60008060408385031215611b5757600080fd5b823591506020830135611b6981611b2f565b809150509250929050565b600060208284031215611b8657600080fd5b81356113ef81611b2f565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611bb957600080fd5b815180151581146113ef57600080fd5b634e487b7160e01b600052603160045260246000fd5b600060208284031215611bf157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611c2257611c22611bf8565b5060010190565b6000816000190483118215151615611c4357611c43611bf8565b500290565b600082611c6557634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611c7c57611c7c611bf8565b500390565b60008219821115611c9457611c94611bf8565b50019056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212203484d2aa3c08fc4ec43748190726ba348dafb7626b372f4770e85a224c52da8364736f6c634300080b0033";

export class MasterChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
