/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wag",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wagPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wagPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "AddPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newDevAddress",
        type: "address",
      },
    ],
    name: "ChangeDevAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "percent",
        type: "uint256",
      },
    ],
    name: "SetLockRewardPercent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
    ],
    name: "UpdateAllocPoint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplier",
        type: "uint256",
      },
    ],
    name: "UpdateMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "existLp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockRewardPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingWag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accWagPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "removePoolFromLpToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setLockRewardPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wag",
    outputs: [
      {
        internalType: "contract WaggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wagPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wagPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200209d3803806200209d8339810160408190526200003491620001e7565b6200003f336200017a565b60016005819055610384600c5580546001600160a01b03199081166001600160a01b03978816908117835560038054831696891696909617909555600280548216968816969096179095556004928355600b829055604080516080810182529485526103e86020860181815291860193845260006060870181815260068054958601815590915295517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f939095029283018054909716949097169390931790945590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40840155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4290910155600a5562000244565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001e257600080fd5b919050565b600080600080600060a086880312156200020057600080fd5b6200020b86620001ca565b94506200021b60208701620001ca565b93506200022b60408701620001ca565b6060870151608090970151959894975095949392505050565b611e4980620002546000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063715018a61161011a578063b42754a5116100ad578063e2bbb1581161007c578063e2bbb1581461046e578063f2fde38b14610481578063f5dbced214610494578063f6a159d3146104a7578063f94c2086146104b057600080fd5b8063b42754a514610420578063c0abc98f14610440578063d1058e5914610453578063d49e77cd1461045b57600080fd5b80638dbb1e3a116100e95780638dbb1e3a1461038057806393f1a40b14610393578063a0f4c76a146103da578063ab728ef71461040d57600080fd5b8063715018a6146103375780638aa285501461033f5780638d88a90e146103485780638da5cb5b1461035b57600080fd5b806341441d3b116101925780635312ea8e116101615780635312ea8e1461030057806354305f1d146103135780635ffe61461461031c578063630b5ba11461032f57600080fd5b806341441d3b146102be578063441a3e70146102d157806348cd4cb1146102e457806351eb05a6146102ed57600080fd5b80631ab06ee5116101ce5780631ab06ee5146102725780632b8bbbe814610285578063378d7af214610298578063379607f5146102ab57600080fd5b8063081e3eda146102005780631058d281146102175780631526fe271461022c57806317caf6f114610269575b600080fd5b6006545b6040519081526020015b60405180910390f35b61022a610225366004611c4e565b6104c3565b005b61023f61023a366004611c4e565b6106a3565b604080516001600160a01b039095168552602085019390935291830152606082015260800161020e565b610204600a5481565b61022a610280366004611c67565b6106e7565b61022a610293366004611c9e565b610809565b61022a6102a6366004611cce565b610a11565b61022a6102b9366004611c4e565b610bdb565b61022a6102cc366004611c4e565b610c7c565b61022a6102df366004611c67565b610e0f565b610204600b5481565b61022a6102fb366004611c4e565b611010565b61022a61030e366004611c4e565b611243565b61020460045481565b61022a61032a366004611c4e565b611341565b61022a6113db565b61022a611406565b61020460055481565b61022a610356366004611cce565b61145a565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161020e565b61020461038e366004611c67565b6114f5565b6103c56103a1366004611c9e565b60076020908152600092835260408084209091529082529020805460019091015482565b6040805192835260208301919091520161020e565b6103fd6103e8366004611cce565b60086020526000908152604090205460ff1681565b604051901515815260200161020e565b61022a61041b366004611c4e565b611510565b61020461042e366004611cce565b60096020526000908152604090205481565b600354610368906001600160a01b031681565b61022a6115e5565b600254610368906001600160a01b031681565b61022a61047c366004611c67565b611610565b61022a61048f366004611cce565b6117d0565b600154610368906001600160a01b031681565b610204600c5481565b6102046104be366004611c9e565b611886565b600060066000815481106104d9576104d9611ceb565b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df90915260409092208054600490920290920192508311156105645760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064015b60405180910390fd5b61056e6000611010565b60006105a882600101546105a264e8d4a5100061059c876003015487600001546119e390919063ffffffff16565b906119ef565b906119fb565b905080156105ba576105ba3382611a07565b83156106445781546105cc90856119fb565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190611d01565b505b6003830154825461065f9164e8d4a510009161059c916119e3565b600183015560405184815260009033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b600681815481106106b357600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6000546001600160a01b0316331461072f5760405162461bcd60e51b81526020600482018190526024820152600080516020611df4833981519152604482015260640161055b565b6107376113db565b61073f611b13565b60006006838154811061075457610754611ceb565b9060005260206000209060040201600101549050816006848154811061077c5761077c611ceb565b9060005260206000209060040201600101819055508181146107c2576107b7826107b183600a546119fb90919063ffffffff16565b90611bf2565b600a556107c2611b13565b60408051338152602081018590529081018390527f68382180476b9c00e49b4ff1c16a8d71b68e1eccdb7bddbef18f9230ede1924d906060015b60405180910390a1505050565b6000546001600160a01b031633146108515760405162461bcd60e51b81526020600482018190526024820152600080516020611df4833981519152604482015260640161055b565b6001600160a01b03811660009081526008602052604090205460ff161561087757600080fd5b61087f6113db565b610887611b13565b6000600b54431161089a57600b5461089c565b435b600a549091506108ac9084611bf2565b600a55600680546001600160a01b03848116600081815260096020908152604080832086905580516080810182528481528083018b81528183018a8152606083018681526001808b018c559a875292517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6004909a02998a0180546001600160a01b0319169190991617909755517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4088015594517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4187015593517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d429095019490945590815260089092529020805460ff191690911790556109cb611b13565b604080513381526001600160a01b03841660208201529081018490527f416e69377d260eeed377d9a98a9bc5e0da69b0b78801392c1ee34367704cfcb0906060016107fc565b6000546001600160a01b03163314610a595760405162461bcd60e51b81526020600482018190526024820152600080516020611df4833981519152604482015260640161055b565b6001600160a01b03811660009081526008602052604090205460ff16610a7e57600080fd5b610a866113db565b610a8e611b13565b60068054610a9d9060016119fb565b81548110610aad57610aad611ceb565b9060005260206000209060040201600660096000846001600160a01b03166001600160a01b031681526020019081526020016000205481548110610af357610af3611ceb565b60009182526020808320845460049093020180546001600160a01b0319166001600160a01b039384161781556001808601549082015560028086015490820155600394850154940193909355831681526009918290526040812054600680549193929184908110610b6657610b66611ceb565b600091825260208083206004909202909101546001600160a01b031683528201929092526040019020556006805480610ba157610ba1611d23565b60008281526020812060046000199093019283020180546001600160a01b0319168155600181018290556002810182905560030155905550565b600060068281548110610bf057610bf0611ceb565b60009182526020808320858452600782526040808520338652909252908320600181015460036004909402909201928301548154939550909392610c4492916105a29164e8d4a510009161059c91906119e3565b90508015610c765760038301548254610c679164e8d4a510009161059c916119e3565b6001830155610c763382611a07565b50505050565b60006006600081548110610c9257610c92611ceb565b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df90915260408320600490920201925090610cd990611010565b805415610d22576000610d0e82600101546105a264e8d4a5100061059c876003015487600001546119e390919063ffffffff16565b90508015610d2057610d203382611a07565b505b8215610db25781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da29190611d01565b508054610daf9084611bf2565b81555b60038201548154610dcd9164e8d4a510009161059c916119e3565b600182015560405183815260009033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505050565b81610e5c5760405162461bcd60e51b815260206004820152601960248201527f77697468647261772057616720627920756e7374616b696e6700000000000000604482015260640161055b565b600060068381548110610e7157610e71611ceb565b600091825260208083208684526007825260408085203386529092529220805460049092029092019250831115610edf5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015260640161055b565b610ee884611010565b6000610f1682600101546105a264e8d4a5100061059c876003015487600001546119e390919063ffffffff16565b90508015610f2857610f283382611a07565b8315610fb2578154610f3a90856119fb565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610f8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb09190611d01565b505b60038301548254610fcd9164e8d4a510009161059c916119e3565b6001830155604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b60006006828154811061102557611025611ceb565b9060005260206000209060040201905080600201544311611044575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561108c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b09190611d39565b9050806110c257504360029091015550565b60006110d28360020154436114f5565b905060006110ff600a5461059c86600101546110f9600454876119e390919063ffffffff16565b906119e3565b6001546002549192506001600160a01b03908116916340c10f19911661112684600a6119ef565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561118457600080fd5b505af1158015611198573d6000803e3d6000fd5b50506001546003546040516340c10f1960e01b81526001600160a01b03918216600482015260248101869052911692506340c10f199150604401600060405180830381600087803b1580156111ec57600080fd5b505af1158015611200573d6000803e3d6000fd5b5050505061122e6112238461059c64e8d4a51000856119e390919063ffffffff16565b600386015490611bf2565b60038501555050436002909201919091555050565b60006006828154811061125857611258611ceb565b6000918252602080832085845260078252604080852033808752935293849020600493840290910180548254955163a9059cbb60e01b81529485019390935260248401949094529293506001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156112d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f89190611d01565b508054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b6000546001600160a01b031633146113895760405162461bcd60e51b81526020600482018190526024820152600080516020611df4833981519152604482015260640161055b565b6113916113db565b611399611b13565b600581905560408051338152602081018390527fcf12649cc9200d10a84b242df5627dc75aae1025c6d2a3c73b71206d06a44cdc91015b60405180910390a150565b60065460005b81811015611402576113f281611010565b6113fb81611d68565b90506113e1565b5050565b6000546001600160a01b0316331461144e5760405162461bcd60e51b81526020600482018190526024820152600080516020611df4833981519152604482015260640161055b565b6114586000611bfe565b565b6002546001600160a01b031633146114a05760405162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015260640161055b565b600280546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527f609c1e6cc9f0714b6b0a3ad062b72c5575acc427b1088166558e1b30ba95320891016113d0565b600554600090611509906110f984866119fb565b9392505050565b6000546001600160a01b031633146115585760405162461bcd60e51b81526020600482018190526024820152600080516020611df4833981519152604482015260640161055b565b6103e88111156115aa5760405162461bcd60e51b815260206004820152601360248201527f6e6f7420616c6c6f77206f766572203130302500000000000000000000000000604482015260640161055b565b600c81905560408051338152602081018390527f494e3114a652392f8d2636c6290ce382caf017ffb21fb086d04d9520dd87e6ee91016113d0565b60005b60065481101561160d576115fb81610bdb565b8061160581611d68565b9150506115e8565b50565b8161165d5760405162461bcd60e51b815260206004820152601660248201527f6465706f73697420576167206279207374616b696e6700000000000000000000604482015260640161055b565b60006006838154811061167257611672611ceb565b600091825260208083208684526007825260408085203386529092529220600490910290910191506116a384611010565b8054156116ec5760006116d882600101546105a264e8d4a5100061059c876003015487600001546119e390919063ffffffff16565b905080156116ea576116ea3382611a07565b505b821561177c5781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015611748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176c9190611d01565b5080546117799084611bf2565b81555b600382015481546117979164e8d4a510009161059c916119e3565b6001820155604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590602001610695565b6000546001600160a01b031633146118185760405162461bcd60e51b81526020600482018190526024820152600080516020611df4833981519152604482015260640161055b565b6001600160a01b03811661187d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161055b565b61160d81611bfe565b6000806006848154811061189c5761189c611ceb565b600091825260208083208784526007825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a0823190602401602060405180830381865afa158015611918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193c9190611d39565b905083600201544311801561195057508015155b156119b05760006119658560020154436114f5565b9050600061198c600a5461059c88600101546110f9600454876119e390919063ffffffff16565b90506119ab6119a48461059c8464e8d4a510006119e3565b8590611bf2565b935050505b6119d883600101546105a264e8d4a5100061059c8688600001546119e390919063ffffffff16565b979650505050505050565b60006115098284611d83565b60006115098284611da2565b60006115098284611dc4565b6001546003546040516323b872dd60e01b81526001600160a01b0391821660048201528482166024820152604481018490529116906323b872dd906064016020604051808303816000875af1158015611a64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a889190611d01565b506000611aa66103e861059c600c54856119e390919063ffffffff16565b60015460405163282d3fdf60e01b81526001600160a01b0386811660048301526024820184905292935091169063282d3fdf90604401600060405180830381600087803b158015611af657600080fd5b505af1158015611b0a573d6000803e3d6000fd5b50505050505050565b600654600060015b82811015611b6c57611b5a60068281548110611b3957611b39611ceb565b90600052602060002090600402016001015483611bf290919063ffffffff16565b9150611b6581611d68565b9050611b1b565b50801561140257611b7e8160036119ef565b9050611bbe816107b16006600081548110611b9b57611b9b611ceb565b906000526020600020906004020160010154600a546119fb90919063ffffffff16565b600a81905550806006600081548110611bd957611bd9611ceb565b9060005260206000209060040201600101819055505050565b60006115098284611ddb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215611c6057600080fd5b5035919050565b60008060408385031215611c7a57600080fd5b50508035926020909101359150565b6001600160a01b038116811461160d57600080fd5b60008060408385031215611cb157600080fd5b823591506020830135611cc381611c89565b809150509250929050565b600060208284031215611ce057600080fd5b813561150981611c89565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611d1357600080fd5b8151801515811461150957600080fd5b634e487b7160e01b600052603160045260246000fd5b600060208284031215611d4b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611d7c57611d7c611d52565b5060010190565b6000816000190483118215151615611d9d57611d9d611d52565b500290565b600082611dbf57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611dd657611dd6611d52565b500390565b60008219821115611dee57611dee611d52565b50019056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220bc9d69ed88208cdd513d96752bdab02dbaada0ebefed7797eeea115dc091331764736f6c634300080b0033";

export class MasterChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wag: string,
    _devaddr: string,
    _wagPool: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _wag,
      _devaddr,
      _wagPool,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _wag: string,
    _devaddr: string,
    _wagPool: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wag,
      _devaddr,
      _wagPool,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
