/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wag",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wagPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockRewardPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingWag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accWagPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setLockRewardPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wag",
    outputs: [
      {
        internalType: "contract WaggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wagPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e6038038062001e608339810160408190526200003491620001e5565b620000486200004262000174565b62000178565b6001600481815561038460095581546001600160a01b039687166001600160a01b03199182168117845560028054978916978316979097179096556003949094556008839055604080516080810182529586526103e8602087018181529187019485526000606088018181526005805496870181559091529651939092027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db081018054949098169390951692909217909555517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1830155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db282015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3909101556007556200022c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001e057600080fd5b919050565b60008060008060808587031215620001fb578384fd5b6200020685620001c8565b93506200021660208601620001c8565b6040860151606090960151949790965092505050565b611c24806200023c6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806364482f7911610104578063ab728ef7116100a2578063f2fde38b11610071578063f2fde38b14610384578063f5dbced214610397578063f6a159d31461039f578063f94c2086146103a7576101cf565b8063ab728ef71461034e578063d1058e5914610361578063d49e77cd14610369578063e2bbb15814610371576101cf565b80638d88a90e116100de5780638d88a90e146102f25780638da5cb5b146103055780638dbb1e3a1461031a57806393f1a40b1461032d576101cf565b806364482f79146102cf578063715018a6146102e25780638aa28550146102ea576101cf565b8063441a3e70116101715780635312ea8e1161014b5780635312ea8e1461029957806354305f1d146102ac5780635ffe6146146102b4578063630b5ba1146102c7576101cf565b8063441a3e701461026b57806348cd4cb11461027e57806351eb05a614610286576101cf565b806317caf6f1116101ad57806317caf6f11461022a5780631eaaa04514610232578063379607f51461024557806341441d3b14610258576101cf565b8063081e3eda146101d45780631058d281146101f25780631526fe2714610207575b600080fd5b6101dc6103ba565b6040516101e99190611b15565b60405180910390f35b610205610200366004611836565b6103c0565b005b61021a610215366004611836565b6105a0565b6040516101e99493929190611975565b6101dc6105e4565b610205610240366004611895565b6105ea565b610205610253366004611836565b610757565b610205610266366004611836565b610800565b6102056102793660046118d6565b6109b1565b6101dc610b7f565b610205610294366004611836565b610b85565b6102056102a7366004611836565b610db4565b6101dc610ed2565b6102056102c2366004611836565b610ed8565b610205610f1c565b6102056102dd3660046118f7565b610f47565b610205611033565b6101dc61107e565b6102056103003660046117fe565b611084565b61030d6110d0565b6040516101e99190611924565b6101dc6103283660046118d6565b6110df565b61034061033b366004611866565b6110fa565b6040516101e9929190611b1e565b61020561035c366004611836565b61111e565b610205611184565b61030d6111ac565b61020561037f3660046118d6565b6111bb565b6102056103923660046117fe565b611364565b61030d6113d2565b6101dc6113e1565b6101dc6103b5366004611866565b6113e7565b60055490565b600060056000815481106103e457634e487b7160e01b600052603260045260246000fd5b600091825260208083203384527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8909152604090922080546004909202909201925083111561044e5760405162461bcd60e51b815260040161044590611aa7565b60405180910390fd5b6104586000610b85565b6000610492826001015461048c64e8d4a510006104868760030154876000015461156590919063ffffffff16565b90611571565b9061157d565b905080156104a4576104a43382611589565b831561053d5781546104b6908561157d565b8255825460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906104e9903390889060040161195c565b602060405180830381600087803b15801561050357600080fd5b505af1158015610517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053b919061181a565b505b600383015482546105589164e8d4a510009161048691611565565b600183015560405160009033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56890610592908890611b15565b60405180910390a350505050565b600581815481106105b057600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60075481565b6105f2611695565b6001600160a01b03166106036110d0565b6001600160a01b0316146106295760405162461bcd60e51b815260040161044590611a72565b801561063757610637610f1c565b6000600854431161064a5760085461064c565b435b60075490915061065c9085611699565b600755604080516080810182526001600160a01b0385811682526020820187815292820184815260006060840181815260058054600181018255925293517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0600490920291820180546001600160a01b031916919094161790925592517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db182015591517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2830155517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3909101556107516116a5565b50505050565b60006005828154811061077a57634e487b7160e01b600052603260045260246000fd5b600091825260208083208584526006825260408085203386529092529083206001810154600360049094029092019283015481549395509093926107ce929161048c9164e8d4a51000916104869190611565565b9050801561075157600383015482546107f19164e8d4a510009161048691611565565b60018301556107513382611589565b6000600560008154811061082457634e487b7160e01b600052603260045260246000fd5b600091825260208083203384527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f89091526040832060049092020192509061086b90610b85565b8054156108b45760006108a0826001015461048c64e8d4a510006104868760030154876000015461156590919063ffffffff16565b905080156108b2576108b23382611589565b505b821561094f5781546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906108ed90339030908890600401611938565b602060405180830381600087803b15801561090757600080fd5b505af115801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f919061181a565b50805461094c9084611699565b81555b6003820154815461096a9164e8d4a510009161048691611565565b600182015560405160009033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15906109a4908790611b15565b60405180910390a3505050565b816109ce5760405162461bcd60e51b815260040161044590611a18565b6000600583815481106109f157634e487b7160e01b600052603260045260246000fd5b600091825260208083208684526006825260408085203386529092529220805460049092029092019250831115610a3a5760405162461bcd60e51b815260040161044590611aa7565b610a4384610b85565b6000610a71826001015461048c64e8d4a510006104868760030154876000015461156590919063ffffffff16565b90508015610a8357610a833382611589565b8315610b1c578154610a95908561157d565b8255825460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610ac8903390889060040161195c565b602060405180830381600087803b158015610ae257600080fd5b505af1158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a919061181a565b505b60038301548254610b379164e8d4a510009161048691611565565b6001830155604051859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56890610b70908890611b15565b60405180910390a35050505050565b60085481565b600060058281548110610ba857634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201905080600201544311610bc95750610db1565b80546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610bf9903090600401611924565b60206040518083038186803b158015610c1157600080fd5b505afa158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c49919061184e565b905080610c5d575043600290910155610db1565b6000610c6d8360020154436110df565b90506000610c9a6007546104868660010154610c946003548761156590919063ffffffff16565b90611565565b6001546002549192506001600160a01b03908116916340c10f199116610cc184600a611571565b6040518363ffffffff1660e01b8152600401610cde92919061195c565b600060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b50506001546040516340c10f1960e01b81526001600160a01b0390911692506340c10f199150610d42903090859060040161195c565b600060405180830381600087803b158015610d5c57600080fd5b505af1158015610d70573d6000803e3d6000fd5b50505050610d9e610d938461048664e8d4a510008561156590919063ffffffff16565b600386015490611699565b6003850155505043600290920191909155505b50565b600060058281548110610dd757634e487b7160e01b600052603260045260246000fd5b6000918252602080832085845260068252604080852033808752935293849020600493840290910180548254955163a9059cbb60e01b815291965091946001600160a01b039092169363a9059cbb93610e3493909290910161195c565b602060405180830381600087803b158015610e4e57600080fd5b505af1158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e86919061181a565b508054604051849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059591610ebb91611b15565b60405180910390a360008082556001909101555050565b60035481565b610ee0611695565b6001600160a01b0316610ef16110d0565b6001600160a01b031614610f175760405162461bcd60e51b815260040161044590611a72565b600455565b60055460005b81811015610f4357610f3381610b85565b610f3c81611b9a565b9050610f22565b5050565b610f4f611695565b6001600160a01b0316610f606110d0565b6001600160a01b031614610f865760405162461bcd60e51b815260040161044590611a72565b8015610f9457610f94610f1c565b600060058481548110610fb757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016001015490508260058581548110610fed57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016001018190555082811461075157611028836110228360075461157d90919063ffffffff16565b90611699565b6007556107516116a5565b61103b611695565b6001600160a01b031661104c6110d0565b6001600160a01b0316146110725760405162461bcd60e51b815260040161044590611a72565b61107c60006117ae565b565b60045481565b6002546001600160a01b031633146110ae5760405162461bcd60e51b815260040161044590611a4f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6004546000906110f390610c94848661157d565b9392505050565b60066020908152600092835260408084209091529082529020805460019091015482565b611126611695565b6001600160a01b03166111376110d0565b6001600160a01b03161461115d5760405162461bcd60e51b815260040161044590611a72565b6103e881111561117f5760405162461bcd60e51b8152600401610445906119e1565b600955565b60005b600554811015610db15761119a81610757565b806111a481611b9a565b915050611187565b6002546001600160a01b031681565b816111d85760405162461bcd60e51b815260040161044590611ade565b6000600583815481106111fb57634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260068252604080852033865290925292206004909102909101915061122c84610b85565b805415611275576000611261826001015461048c64e8d4a510006104868760030154876000015461156590919063ffffffff16565b90508015611273576112733382611589565b505b82156113105781546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906112ae90339030908890600401611938565b602060405180830381600087803b1580156112c857600080fd5b505af11580156112dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611300919061181a565b50805461130d9084611699565b81555b6003820154815461132b9164e8d4a510009161048691611565565b6001820155604051849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590610592908790611b15565b61136c611695565b6001600160a01b031661137d6110d0565b6001600160a01b0316146113a35760405162461bcd60e51b815260040161044590611a72565b6001600160a01b0381166113c95760405162461bcd60e51b81526004016104459061199b565b610db1816117ae565b6001546001600160a01b031681565b60095481565b6000806005848154811061140b57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526006825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b815291975092959294929391909116916370a082319161146e91309101611924565b60206040518083038186803b15801561148657600080fd5b505afa15801561149a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114be919061184e565b90508360020154431180156114d257508015155b156115325760006114e78560020154436110df565b9050600061150e6007546104868860010154610c946003548761156590919063ffffffff16565b905061152d611526846104868464e8d4a51000611565565b8590611699565b935050505b61155a836001015461048c64e8d4a5100061048686886000015461156590919063ffffffff16565b979650505050505050565b60006110f38284611b64565b60006110f38284611b44565b60006110f38284611b83565b60015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906115bb908590859060040161195c565b602060405180830381600087803b1580156115d557600080fd5b505af11580156115e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160d919061181a565b50600061162b6103e86104866009548561156590919063ffffffff16565b60015460405163282d3fdf60e01b81529192506001600160a01b03169063282d3fdf9061165e908690859060040161195c565b600060405180830381600087803b15801561167857600080fd5b505af115801561168c573d6000803e3d6000fd5b50505050505050565b3390565b60006110f38284611b2c565b600554600060015b8281101561170c576116fa600582815481106116d957634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101548361169990919063ffffffff16565b915061170581611b9a565b90506116ad565b508015610f435761171e816003611571565b905061176c81611022600560008154811061174957634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016001015460075461157d90919063ffffffff16565b60078190555080600560008154811061179557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101819055505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561180f578081fd5b81356110f381611bcb565b60006020828403121561182b578081fd5b81516110f381611be0565b600060208284031215611847578081fd5b5035919050565b60006020828403121561185f578081fd5b5051919050565b60008060408385031215611878578081fd5b82359150602083013561188a81611bcb565b809150509250929050565b6000806000606084860312156118a9578081fd5b8335925060208401356118bb81611bcb565b915060408401356118cb81611be0565b809150509250925092565b600080604083850312156118e8578182fd5b50508035926020909101359150565b60008060006060848603121561190b578283fd5b833592506020840135915060408401356118cb81611be0565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526013908201527f6e6f7420616c6c6f77206f766572203130302500000000000000000000000000604082015260600190565b60208082526019908201527f77697468647261772057616720627920756e7374616b696e6700000000000000604082015260600190565b6020808252600990820152686465763a207775743f60b81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526012908201527f77697468647261773a206e6f7420676f6f640000000000000000000000000000604082015260600190565b60208082526016908201527f6465706f73697420576167206279207374616b696e6700000000000000000000604082015260600190565b90815260200190565b918252602082015260400190565b60008219821115611b3f57611b3f611bb5565b500190565b600082611b5f57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611b7e57611b7e611bb5565b500290565b600082821015611b9557611b95611bb5565b500390565b6000600019821415611bae57611bae611bb5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610db157600080fd5b8015158114610db157600080fdfea26469706673582212202f6e5cb8a86ea6934082593ad987525fa2fd2e1405caab776daf4f8c9507f01e64736f6c63430008000033";

export class MasterChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
