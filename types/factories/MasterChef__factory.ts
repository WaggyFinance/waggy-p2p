/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wag",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wagPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockRewardPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingWag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accWagPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wag",
    outputs: [
      {
        internalType: "contract WaggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wagPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016004556000600855612328600a553480156200002157600080fd5b50604051620022a4380380620022a48339810160408190526200004491620001dd565b6200004f3362000170565b600180546001600160a01b03199081166001600160a01b039687169081178355600280548316968816969096179095556003939093556009829055604080516080810182529485526103e86020860181815291860193845260006060870181815260068054958601815590915295517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6004909402938401805490961697169690961790935591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4182015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d429091015560085562000224565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001d857600080fd5b919050565b60008060008060808587031215620001f3578384fd5b620001fe85620001c0565b93506200020e60208601620001c0565b6040860151606090960151949790965092505050565b61207080620002346000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063630b5ba1116101045780638dbb1e3a116100a2578063f2fde38b11610071578063f2fde38b146103eb578063f5dbced2146103fe578063f6a159d314610411578063f94c20861461041a57600080fd5b80638dbb1e3a1461036b57806393f1a40b1461037e578063d49e77cd146103c5578063e2bbb158146103d857600080fd5b80637cd07e47116100de5780637cd07e47146103135780638aa285501461033e5780638d88a90e146103475780638da5cb5b1461035a57600080fd5b8063630b5ba1146102f057806364482f79146102f8578063715018a61461030b57600080fd5b8063441a3e701161017157806351eb05a61161014b57806351eb05a6146102ae5780635312ea8e146102c157806354305f1d146102d45780635ffe6146146102dd57600080fd5b8063441a3e701461027f578063454b06081461029257806348cd4cb1146102a557600080fd5b806317caf6f1116101ad57806317caf6f11461023d5780631eaaa0451461024657806323cf31181461025957806341441d3b1461026c57600080fd5b8063081e3eda146101d45780631058d281146101eb5780631526fe2714610200575b600080fd5b6006545b6040519081526020015b60405180910390f35b6101fe6101f9366004611e2f565b61042d565b005b61021361020e366004611e2f565b610654565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101e2565b6101d860085481565b6101fe610254366004611e8e565b610698565b6101fe610267366004611ddb565b610820565b6101fe61027a366004611e2f565b61089c565b6101fe61028d366004611ecf565b610aac565b6101fe6102a0366004611e2f565b610cca565b6101d860095481565b6101fe6102bc366004611e2f565b610fb5565b6101fe6102cf366004611e2f565b61130a565b6101d860035481565b6101fe6102eb366004611e2f565b611425565b6101fe611484565b6101fe610306366004611ef0565b6114af565b6101fe6115b6565b600554610326906001600160a01b031681565b6040516001600160a01b0390911681526020016101e2565b6101d860045481565b6101fe610355366004611ddb565b61161c565b6000546001600160a01b0316610326565b6101d8610379366004611ecf565b611684565b6103b061038c366004611e5f565b60076020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101e2565b600254610326906001600160a01b031681565b6101fe6103e6366004611ecf565b61169f565b6101fe6103f9366004611ddb565b61187c565b600154610326906001600160a01b031681565b6101d8600a5481565b6101d8610428366004611e5f565b611947565b6000600660008154811061045157634e487b7160e01b600052603260045260246000fd5b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df90915260409092208054600490920290920192508311156104dc5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064015b60405180910390fd5b6104e66000610fb5565b6000610520826001015461051a64e8d4a5100061051487600301548760000154611ac190919063ffffffff16565b90611acd565b90611ad9565b905061054c6040518060400160405280600881526020016703832b73234b733960c51b81525082611ae5565b801561055c5761055c3382611b3f565b83156105f557815461056e9085611ad9565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156105bb57600080fd5b505af11580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f39190611df7565b505b600383015482546106109164e8d4a510009161051491611ac1565b600183015560405184815260009033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b6006818154811061066457600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6000546001600160a01b031633146106f25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d3565b801561070057610700611484565b6000600954431161071357600954610715565b435b6008549091506107259085611c55565b600855604080516080810182526001600160a01b0385811682526020820187815292820184815260006060840181815260068054600181018255925293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600490920291820180546001600160a01b031916919094161790925592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4082015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d429091015561081a611c61565b50505050565b6000546001600160a01b0316331461087a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d3565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600060066000815481106108c057634e487b7160e01b600052603260045260246000fd5b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df9091526040832060049092020192509061090790610fb5565b80541561095057600061093c826001015461051a64e8d4a5100061051487600301548760000154611ac190919063ffffffff16565b9050801561094e5761094e3382611b3f565b505b82156109ef5781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156109a757600080fd5b505af11580156109bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109df9190611df7565b5080546109ec9084611c55565b81555b610a236040518060400160405280600e81526020016d616363576167506572536861726560901b8152508360030154611ae5565b60038201548154610a3e9164e8d4a510009161051491611ac1565b6001820181905560408051808201909152600a8152691c995dd85c991119589d60b21b6020820152610a6f91611ae5565b60405183815260009033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505050565b81610af95760405162461bcd60e51b815260206004820152601960248201527f77697468647261772057616720627920756e7374616b696e670000000000000060448201526064016104d3565b600060068381548110610b1c57634e487b7160e01b600052603260045260246000fd5b600091825260208083208684526007825260408085203386529092529220805460049092029092019250831115610b8a5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064016104d3565b610b9384610fb5565b6000610bc1826001015461051a64e8d4a5100061051487600301548760000154611ac190919063ffffffff16565b90508015610bd357610bd33382611b3f565b8315610c6c578154610be59085611ad9565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610c3257600080fd5b505af1158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a9190611df7565b505b60038301548254610c879164e8d4a510009161051491611ac1565b6001830155604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b6005546001600160a01b0316610d225760405162461bcd60e51b815260206004820152601460248201527f6d6967726174653a206e6f206d69677261746f7200000000000000000000000060448201526064016104d3565b600060068281548110610d4557634e487b7160e01b600052603260045260246000fd5b60009182526020822060049182020180546040516370a0823160e01b815230938101939093529093506001600160a01b0316919082906370a082319060240160206040518083038186803b158015610d9c57600080fd5b505afa158015610db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd49190611e47565b60055460405163095ea7b360e01b81526001600160a01b0391821660048201526024810183905291925083169063095ea7b390604401602060405180830381600087803b158015610e2457600080fd5b505af1158015610e38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c9190611df7565b5060055460405163ce5494bb60e01b81526001600160a01b038481166004830152600092169063ce5494bb90602401602060405180830381600087803b158015610ea557600080fd5b505af1158015610eb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edd9190611e13565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a082319060240160206040518083038186803b158015610f1f57600080fd5b505afa158015610f33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f579190611e47565b8214610f945760405162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b60448201526064016104d3565b83546001600160a01b0319166001600160a01b039190911617909255505050565b600060068281548110610fd857634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020190506110156040518060400160405280600b81526020016a0213637b1b5903a34b6b2960ad1b81525043611ae5565b6110586040518060400160405280601081526020017f6c617374526577617264426c6f636b20000000000000000000000000000000008152508260020154611ae5565b80600201544311611067575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156110aa57600080fd5b505afa1580156110be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e29190611e47565b905061110f604051806040016040528060098152602001680363829bab838363c960bd1b81525082611ae5565b8061111f57504360029091015550565b600061112f836002015443611684565b905061115d6040518060400160405280600a81526020016936bab63a34b83634b2b960b11b81525082611ae5565b6000611188600854610514866001015461118260035487611ac190919063ffffffff16565b90611ac1565b90506111b5604051806040016040528060098152602001681dd859d4995dd85c9960ba1b81525082611ae5565b6001546002546001600160a01b03918216916340c10f1991166111d984600a611acd565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561121f57600080fd5b505af1158015611233573d6000803e3d6000fd5b50506001546040516340c10f1960e01b8152306004820152602481018590526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b15801561128357600080fd5b505af1158015611297573d6000803e3d6000fd5b505050506112c56112ba8461051464e8d4a5100085611ac190919063ffffffff16565b600386015490611c55565b6003850181905560408051808201909152600e81526d616363576167506572536861726560901b60208201526112fa91611ae5565b4384600201819055505050505050565b60006006828154811061132d57634e487b7160e01b600052603260045260246000fd5b6000918252602080832085845260078252604080852033808752935293849020600493840290910180548254955163a9059cbb60e01b81529485019390935260248401949094529293506001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156113a457600080fd5b505af11580156113b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dc9190611df7565b508054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b6000546001600160a01b0316331461147f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d3565b600455565b60065460005b818110156114ab5761149b81610fb5565b6114a481611fe6565b905061148a565b5050565b6000546001600160a01b031633146115095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d3565b801561151757611517611484565b60006006848154811061153a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101549050826006858154811061157057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016001018190555082811461081a576115ab836115a583600854611ad990919063ffffffff16565b90611c55565b60085561081a611c61565b6000546001600160a01b031633146116105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d3565b61161a6000611d6a565b565b6002546001600160a01b031633146116625760405162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b60448201526064016104d3565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600454600090611698906111828486611ad9565b9392505050565b816116ec5760405162461bcd60e51b815260206004820152601660248201527f6465706f73697420576167206279207374616b696e670000000000000000000060448201526064016104d3565b60006006838154811061170f57634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260078252604080852033865290925292206004909102909101915061174084610fb5565b805415611789576000611775826001015461051a64e8d4a5100061051487600301548760000154611ac190919063ffffffff16565b90508015611787576117873382611b3f565b505b82156118285781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156117e057600080fd5b505af11580156117f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118189190611df7565b5080546118259084611c55565b81555b600382015481546118439164e8d4a510009161051491611ac1565b6001820155604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590602001610646565b6000546001600160a01b031633146118d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d3565b6001600160a01b03811661193b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d3565b61194481611d6a565b50565b6000806006848154811061196b57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526007825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a082319060240160206040518083038186803b1580156119e257600080fd5b505afa1580156119f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1a9190611e47565b9050836002015443118015611a2e57508015155b15611a8e576000611a43856002015443611684565b90506000611a6a600854610514886001015461118260035487611ac190919063ffffffff16565b9050611a89611a82846105148464e8d4a51000611ac1565b8590611c55565b935050505b611ab6836001015461051a64e8d4a51000610514868860000154611ac190919063ffffffff16565b979650505050505050565b60006116988284611fb0565b60006116988284611f90565b60006116988284611fcf565b6114ab8282604051602401611afb929190611f1d565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166309710a9d60e41b179052611dba565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015611b8d57600080fd5b505af1158015611ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc59190611df7565b50600154600a546001600160a01b039091169063282d3fdf908490611bf3906103e890610514908790611ac1565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015611c3957600080fd5b505af1158015611c4d573d6000803e3d6000fd5b505050505050565b60006116988284611f78565b600654600060015b82811015611cc857611cb660068281548110611c9557634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016001015483611c5590919063ffffffff16565b9150611cc181611fe6565b9050611c69565b5080156114ab57611cda816003611acd565b9050611d28816115a56006600081548110611d0557634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160010154600854611ad990919063ffffffff16565b600881905550806006600081548110611d5157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101819055505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208284031215611dec578081fd5b813561169881612017565b600060208284031215611e08578081fd5b81516116988161202c565b600060208284031215611e24578081fd5b815161169881612017565b600060208284031215611e40578081fd5b5035919050565b600060208284031215611e58578081fd5b5051919050565b60008060408385031215611e71578081fd5b823591506020830135611e8381612017565b809150509250929050565b600080600060608486031215611ea2578081fd5b833592506020840135611eb481612017565b91506040840135611ec48161202c565b809150509250925092565b60008060408385031215611ee1578182fd5b50508035926020909101359150565b600080600060608486031215611f04578283fd5b83359250602084013591506040840135611ec48161202c565b6040815260008351806040840152815b81811015611f4a5760208187018101516060868401015201611f2d565b81811115611f5b5782606083860101525b50602083019390935250601f91909101601f191601606001919050565b60008219821115611f8b57611f8b612001565b500190565b600082611fab57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611fca57611fca612001565b500290565b600082821015611fe157611fe1612001565b500390565b6000600019821415611ffa57611ffa612001565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461194457600080fd5b801515811461194457600080fdfea26469706673582212203549de40cffd400b793130ff2c1f5670e3f7f00862684bf4dde56333bafb9f2a64736f6c63430008040033";

export class MasterChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
