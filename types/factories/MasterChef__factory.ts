/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract WaggyToken",
        name: "_wag",
        type: "address",
      },
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wagPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingWag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accWagPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wag",
    outputs: [
      {
        internalType: "contract WaggyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wagPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160045560006008553480156200001b57600080fd5b5060405162001f3338038062001f338339810160408190526200003e91620001ba565b62000049336200016a565b600180546001600160a01b03199081166001600160a01b039687169081178355600280548316968816969096179095556003939093556009829055604080516080810182529485526103e86020860181815291860193845260006060870181815260068054958601815590915295517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6004909402938401805490961697169690961790935591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4182015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909101556008556200021f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008060808587031215620001d0578384fd5b8451620001dd8162000206565b6020860151909450620001f08162000206565b6040860151606090960151949790965092505050565b6001600160a01b03811681146200021c57600080fd5b50565b611d04806200022f6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063630b5ba1116100f95780638dbb1e3a11610097578063e2bbb15811610071578063e2bbb158146103cd578063f2fde38b146103e0578063f5dbced2146103f3578063f94c20861461040657600080fd5b80638dbb1e3a1461036057806393f1a40b14610373578063d49e77cd146103ba57600080fd5b80637cd07e47116100d35780637cd07e47146103085780638aa28550146103335780638d88a90e1461033c5780638da5cb5b1461034f57600080fd5b8063630b5ba1146102e557806364482f79146102ed578063715018a61461030057600080fd5b8063441a3e701161016657806351eb05a61161014057806351eb05a6146102a35780635312ea8e146102b657806354305f1d146102c95780635ffe6146146102d257600080fd5b8063441a3e7014610274578063454b06081461028757806348cd4cb11461029a57600080fd5b806317caf6f1116101a257806317caf6f1146102325780631eaaa0451461023b57806323cf31181461024e57806341441d3b1461026157600080fd5b8063081e3eda146101c95780631058d281146101e05780631526fe27146101f5575b600080fd5b6006545b6040519081526020015b60405180910390f35b6101f36101ee366004611b1e565b610419565b005b610208610203366004611b1e565b610616565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101d7565b6101cd60085481565b6101f3610249366004611b7d565b61065a565b6101f361025c366004611aca565b6107e2565b6101f361026f366004611b1e565b61085e565b6101f3610282366004611bbe565b610a0e565b6101f3610295366004611b1e565b610c2c565b6101cd60095481565b6101f36102b1366004611b1e565b610f17565b6101f36102c4366004611b1e565b6110ff565b6101cd60035481565b6101f36102e0366004611b1e565b61121a565b6101f3611279565b6101f36102fb366004611bdf565b6112a4565b6101f36113ab565b60055461031b906001600160a01b031681565b6040516001600160a01b0390911681526020016101d7565b6101cd60045481565b6101f361034a366004611aca565b611411565b6000546001600160a01b031661031b565b6101cd61036e366004611bbe565b611479565b6103a5610381366004611b4e565b60076020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101d7565b60025461031b906001600160a01b031681565b6101f36103db366004611bbe565b611494565b6101f36103ee366004611aca565b611671565b60015461031b906001600160a01b031681565b6101cd610414366004611b4e565b61173c565b6000600660008154811061043d57634e487b7160e01b600052603260045260246000fd5b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df90915260409092208054600490920290920192508311156104c85760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064015b60405180910390fd5b6104d26000610f17565b600061050c826001015461050664e8d4a51000610500876003015487600001546118b690919063ffffffff16565b906118c2565b906118ce565b9050801561051e5761051e33826118da565b83156105b757815461053090856118ce565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561057d57600080fd5b505af1158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b59190611ae6565b505b600383015482546105d29164e8d4a5100091610500916118b6565b600183015560405184815260009033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568906020015b60405180910390a350505050565b6006818154811061062657600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6000546001600160a01b031633146106b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bf565b80156106c2576106c2611279565b600060095443116106d5576009546106d7565b435b6008549091506106e79085611965565b600855604080516080810182526001600160a01b0385811682526020820187815292820184815260006060840181815260068054600181018255925293517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600490920291820180546001600160a01b031916919094161790925592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4082015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41830155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909101556107dc611971565b50505050565b6000546001600160a01b0316331461083c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bf565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000600660008154811061088257634e487b7160e01b600052603260045260246000fd5b600091825260208083203384527f6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df909152604083206004909202019250906108c990610f17565b8054156109125760006108fe826001015461050664e8d4a51000610500876003015487600001546118b690919063ffffffff16565b905080156109105761091033826118da565b505b82156109b15781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561096957600080fd5b505af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a19190611ae6565b5080546109ae9084611965565b81555b600382015481546109cc9164e8d4a5100091610500916118b6565b600182015560405183815260009033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505050565b81610a5b5760405162461bcd60e51b815260206004820152601960248201527f77697468647261772057616720627920756e7374616b696e670000000000000060448201526064016104bf565b600060068381548110610a7e57634e487b7160e01b600052603260045260246000fd5b600091825260208083208684526007825260408085203386529092529220805460049092029092019250831115610aec5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b60448201526064016104bf565b610af584610f17565b6000610b23826001015461050664e8d4a51000610500876003015487600001546118b690919063ffffffff16565b90508015610b3557610b3533826118da565b8315610bce578154610b4790856118ce565b8255825460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610b9457600080fd5b505af1158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190611ae6565b505b60038301548254610be99164e8d4a5100091610500916118b6565b6001830155604051848152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b6005546001600160a01b0316610c845760405162461bcd60e51b815260206004820152601460248201527f6d6967726174653a206e6f206d69677261746f7200000000000000000000000060448201526064016104bf565b600060068281548110610ca757634e487b7160e01b600052603260045260246000fd5b60009182526020822060049182020180546040516370a0823160e01b815230938101939093529093506001600160a01b0316919082906370a082319060240160206040518083038186803b158015610cfe57600080fd5b505afa158015610d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d369190611b36565b60055460405163095ea7b360e01b81526001600160a01b0391821660048201526024810183905291925083169063095ea7b390604401602060405180830381600087803b158015610d8657600080fd5b505af1158015610d9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbe9190611ae6565b5060055460405163ce5494bb60e01b81526001600160a01b038481166004830152600092169063ce5494bb90602401602060405180830381600087803b158015610e0757600080fd5b505af1158015610e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3f9190611b02565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a082319060240160206040518083038186803b158015610e8157600080fd5b505afa158015610e95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb99190611b36565b8214610ef65760405162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b60448201526064016104bf565b83546001600160a01b0319166001600160a01b039190911617909255505050565b600060068281548110610f3a57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201905080600201544311610f59575050565b80546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610f9c57600080fd5b505afa158015610fb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd49190611b36565b905080610fe657504360029091015550565b6000610ff6836002015443611479565b90506000611023600854610500866001015461101d600354876118b690919063ffffffff16565b906118b6565b6001546002549192506001600160a01b03908116916340c10f19911661104a84600a6118c2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156110a857600080fd5b505af11580156110bc573d6000803e3d6000fd5b505050506110ea6110df8461050064e8d4a51000856118b690919063ffffffff16565b600386015490611965565b60038501555050436002909201919091555050565b60006006828154811061112257634e487b7160e01b600052603260045260246000fd5b6000918252602080832085845260078252604080852033808752935293849020600493840290910180548254955163a9059cbb60e01b81529485019390935260248401949094529293506001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561119957600080fd5b505af11580156111ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d19190611ae6565b508054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b6000546001600160a01b031633146112745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bf565b600455565b60065460005b818110156112a05761129081610f17565b61129981611c7a565b905061127f565b5050565b6000546001600160a01b031633146112fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bf565b801561130c5761130c611279565b60006006848154811061132f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101549050826006858154811061136557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101819055508281146107dc576113a08361139a836008546118ce90919063ffffffff16565b90611965565b6008556107dc611971565b6000546001600160a01b031633146114055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bf565b61140f6000611a7a565b565b6002546001600160a01b031633146114575760405162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b60448201526064016104bf565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60045460009061148d9061101d84866118ce565b9392505050565b816114e15760405162461bcd60e51b815260206004820152601660248201527f6465706f73697420576167206279207374616b696e670000000000000000000060448201526064016104bf565b60006006838154811061150457634e487b7160e01b600052603260045260246000fd5b6000918252602080832086845260078252604080852033865290925292206004909102909101915061153584610f17565b80541561157e57600061156a826001015461050664e8d4a51000610500876003015487600001546118b690919063ffffffff16565b9050801561157c5761157c33826118da565b505b821561161d5781546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156115d557600080fd5b505af11580156115e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160d9190611ae6565b50805461161a9084611965565b81555b600382015481546116389164e8d4a5100091610500916118b6565b6001820155604051838152849033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590602001610608565b6000546001600160a01b031633146116cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104bf565b6001600160a01b0381166117305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104bf565b61173981611a7a565b50565b6000806006848154811061176057634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526007825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b8152309681019690965290965091949193919216906370a082319060240160206040518083038186803b1580156117d757600080fd5b505afa1580156117eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180f9190611b36565b905083600201544311801561182357508015155b15611883576000611838856002015443611479565b9050600061185f600854610500886001015461101d600354876118b690919063ffffffff16565b905061187e611877846105008464e8d4a510006118b6565b8590611965565b935050505b6118ab836001015461050664e8d4a510006105008688600001546118b690919063ffffffff16565b979650505050505050565b600061148d8284611c44565b600061148d8284611c24565b600061148d8284611c63565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561192857600080fd5b505af115801561193c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119609190611ae6565b505050565b600061148d8284611c0c565b600654600060015b828110156119d8576119c6600682815481106119a557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101548361196590919063ffffffff16565b91506119d181611c7a565b9050611979565b5080156112a0576119ea8160036118c2565b9050611a388161139a6006600081548110611a1557634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101546008546118ce90919063ffffffff16565b600881905550806006600081548110611a6157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600101819055505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215611adb578081fd5b813561148d81611cab565b600060208284031215611af7578081fd5b815161148d81611cc0565b600060208284031215611b13578081fd5b815161148d81611cab565b600060208284031215611b2f578081fd5b5035919050565b600060208284031215611b47578081fd5b5051919050565b60008060408385031215611b60578081fd5b823591506020830135611b7281611cab565b809150509250929050565b600080600060608486031215611b91578081fd5b833592506020840135611ba381611cab565b91506040840135611bb381611cc0565b809150509250925092565b60008060408385031215611bd0578182fd5b50508035926020909101359150565b600080600060608486031215611bf3578283fd5b83359250602084013591506040840135611bb381611cc0565b60008219821115611c1f57611c1f611c95565b500190565b600082611c3f57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611c5e57611c5e611c95565b500290565b600082821015611c7557611c75611c95565b500390565b6000600019821415611c8e57611c8e611c95565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461173957600080fd5b801515811461173957600080fdfea2646970667358221220f9babdf2b2999712e6867d285b9844bff55c8bc4fdb328014fa05dba35b6f85364736f6c63430008040033";

export class MasterChef__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _wag: string,
    _devaddr: string,
    _wagPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wag,
      _devaddr,
      _wagPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
