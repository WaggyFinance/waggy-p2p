{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x892734011eCcA69FD26Bd44C4EF3FaA873c4CC44",
    "txHash": "0x0c7106e18debdd386552f389a2d1747695752904fc15e7a284df9b8d85845c22",
    "deployTransaction": {
      "hash": "0x0c7106e18debdd386552f389a2d1747695752904fc15e7a284df9b8d85845c22",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x88AC933bD3F3282e2a6e794C513e33D3CDa68E9e",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x4c405c47"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x4c405c47"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 15,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x7544c0bb3a2c4b6df392c13bc4a9ea6c0b9304a6e3cb706ed678322d39155e0b",
      "s": "0x3d3898e68164bc339a0bf9f9032df2201b4f44c0929e4e065a185e49794677a7",
      "v": 0,
      "creates": "0x892734011eCcA69FD26Bd44C4EF3FaA873c4CC44",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0xB20Bf3aa855dEE74Ca15e72E2EdDFA7a6fFfC995",
      "txHash": "0xcb634221fc7385df123132618c4da7c4bd6876e4753bbf572f88dad37b5586fa",
      "kind": "transparent"
    },
    {
      "address": "0x1da0dF2615B3EDa73272B6c87D594D668e3D687B",
      "txHash": "0x9442f2e1a432ed66c78a57c8c53ace87d0030dc07e6932af0b89c3ad964addbe",
      "kind": "transparent"
    },
    {
      "address": "0x6a8Ac0808c8c6C6dC53C5129952c7B77EFDF4661",
      "txHash": "0xcccbf19b3666eb10c56e48cd51003f07564bc660c57d0f3096342143b67383dd",
      "kind": "transparent"
    },
    {
      "address": "0xa0FdeeE15c55FA7b25F4bdBBD946F2395fE3BE4d",
      "txHash": "0xa57141353edde2764227924025c1e440ef3e1f5cd6226d7dbff6f9047e54a492",
      "kind": "transparent"
    },
    {
      "address": "0xA2a70F79b4BE92e6B00d0BdD9C1C784BEa3E71Bc",
      "txHash": "0x95e9784f2b0fa84212a24d6da2498aee48ad1d504ca066cfceb9bba29f0c3cf0",
      "kind": "transparent"
    },
    {
      "address": "0x36308B7a20b5a57D90104aEcE8438B86adf9ba07",
      "txHash": "0x596122d56e3465055cc0f66a311608985eb26acb45001563065f09ff07682370",
      "kind": "transparent"
    },
    {
      "address": "0x0Ae374010d0E2a40E7AB1dA836121F8fd28c210c",
      "txHash": "0x1be5b595a80745a3b7cf1fee6a40e1e7078f1f20d8bf1b4cc4ffcb678e5a6eb9",
      "kind": "transparent"
    },
    {
      "address": "0x3E9705eda303E6ff5b8c400244B7a4759776179A",
      "txHash": "0x2e1c6b213e4a5bfd14d2b90c814c3e57bcb60ce250478453fff6d3b612ed2942",
      "kind": "transparent"
    },
    {
      "address": "0x4C75149767Fa69B3183dD53779A755E6546D7592",
      "txHash": "0x114baf195fecfcbdafcef1fcc2995b7411e6c8106ae266d8d5d5b57e3a3f7915",
      "kind": "transparent"
    },
    {
      "address": "0xd19fD55aD7B50360EdbA149178d8762c0B204005",
      "txHash": "0x7dce8efd7f8048facec2595cd024c470f349d20a9f021c10732458346761a25c",
      "kind": "transparent"
    },
    {
      "address": "0x21381DC3aAC97c0e707cd4Cea21b9708B54e7070",
      "txHash": "0xe00538f016a59badef52c3eb647e1c82b9fa9f1614cf29bf5504568597c3bbea",
      "kind": "transparent"
    },
    {
      "address": "0x32BFc2B1BcC81B48504c4246139EEDB7F5C389d1",
      "txHash": "0x55f998ede1c32721e55645c8777154fb437ff9c463b78af7d720db638252d981",
      "kind": "transparent"
    },
    {
      "address": "0xf3fEDC90053Fc04ba9F7196b340356D6c40fcDFc",
      "txHash": "0x662df1b66090841986962f0cc0f54e91e64df67c02581fead27d1af4d600dbb9",
      "kind": "transparent"
    },
    {
      "address": "0x2ff5eA9B685979c9c4c441C5C7EfC646379B505F",
      "txHash": "0x0d86157105580ef9873b609535b692b698a2b409ed50db62fa89f9d3ce40cab7",
      "kind": "transparent"
    },
    {
      "address": "0xcA5bB34eD3c44A25ADDaeCaB4bCa98531769CA54",
      "txHash": "0x9c460380bd9742349f67300cb4ca8cadcdf1e0d478dd16ec3f3abeeb66e76d4c",
      "kind": "transparent"
    },
    {
      "address": "0x782bBB69d29896b5D0D1c78d173DA84A75C8b3F5",
      "txHash": "0x11641d157d09af73e7f9a8559e07adfcdd8996f297f68506ed5f8b67a25abd65",
      "kind": "transparent"
    },
    {
      "address": "0xEC721ad99E1db586c84E2694BA66451eAEFd4B3E",
      "txHash": "0xf365703ef2b7c37743828ebbcd25c98f40fad410112d3555625f9e1a47c8ca02",
      "kind": "transparent"
    },
    {
      "address": "0x631D581fd0924e9d06900457d2eA4932816B0109",
      "txHash": "0xb3880ee527a53cb24156983b1b3d1db7f4d06f1dbd4bf246248e55b576a7f290",
      "kind": "transparent"
    },
    {
      "address": "0x1dC2ad1a91009350d39be9866AC2B62a3D64181b",
      "txHash": "0x36ac1ddeb70d05240078414fb3281bafc3b7ec5b8e44799af31e2a86d32e7c00",
      "kind": "transparent"
    },
    {
      "address": "0xf8B948177cf3aE06BF1E24FF3CE317FD24b37037",
      "txHash": "0xe7014342b867b6f35ed61245b957efb5e728c040c6b784cf7d9e7106a6b35b79",
      "kind": "transparent"
    },
    {
      "address": "0x5714f7501A611c89C782D4b4A798D0eB49Ef6bDD",
      "txHash": "0x1ba3935b6dbcb262b10700a57f37d3c3fc01c247d69e2d25e061933fdbf4db79",
      "kind": "transparent"
    },
    {
      "address": "0x8f09814D916098dA10af837BFc4b40060f53F368",
      "txHash": "0x5ed75f57e78c0b45a9cb2b5a03058cd14f73e637db1c92c3d689f5e12bdcbed2",
      "kind": "transparent"
    },
    {
      "address": "0xe4CBC8BD68dD9C05f40BB62565eb1c98C2BC77D5",
      "txHash": "0xe6d6a2241558f7a7448421efca2aa044430bd8abdad24f08a9e6ccacac61c414",
      "kind": "transparent"
    },
    {
      "address": "0xC761ecBc88Fdd04Fe8De33Bb4BF6420A431b3509",
      "txHash": "0xc255615d63e638feda540f407312707474686c7cded6ca141ac8c47df4782a7f",
      "kind": "transparent"
    },
    {
      "address": "0x92f06EfA5322A7242E99138a74DE5eEEA5DE2Df9",
      "txHash": "0x44c4152fa745955a6e158aedbde8f8849dc20d41b8f352d0b4cb339e5fa02722",
      "kind": "transparent"
    },
    {
      "address": "0x6109649D809ecaF8Ea7B935E6C807689ac5a385B",
      "txHash": "0x21ce366a70553e5dd27808f0185f56b92b3b09310ee755e5f2831201e764efeb",
      "kind": "transparent"
    },
    {
      "address": "0xb0f23bA8DAb61526ac8Dd8CE44829bC059f99f59",
      "txHash": "0x6a47d1df7924cce20718d458d8553d0c8210b8edf03cd57d1c061536d7a7ad46",
      "kind": "transparent"
    },
    {
      "address": "0x04824527D96701F4d6659CB06FF9E8Cd4D548B44",
      "txHash": "0x70ae11b57fe1184327ac73be04f9b34a34e46218879782cd9fd4d295f74e4daf",
      "kind": "transparent"
    },
    {
      "address": "0xEbbc250C7225BFE736FDD7ACF38CE54B24bFF08c",
      "txHash": "0x1afeb4a1ac4a3eb95134681307aa4e86cceb3354aceefd99f9b2eae3a9a57fdb",
      "kind": "transparent"
    },
    {
      "address": "0x2a5691Ef58862e428D63E596939CA4f5B67fff5e",
      "txHash": "0x4f6b9417c5aefc065a017a9c60a1f16d2fe14771109ea66b234830fb826ba64d",
      "kind": "transparent"
    },
    {
      "address": "0xd5b02629c8c2Ce0c95df9dbf97E7766938fed7eb",
      "txHash": "0x3e17efa797b42b91dbd55b30833ba4ddc6db5499d3e6c56fffb3f2530de69fb2",
      "kind": "transparent"
    },
    {
      "address": "0xeDFCED307A04E4CB06069144b95092ED51d69d4d",
      "txHash": "0xe8c01680a75c129a345eae371333a497aeed94ee2f16eb2f5c072a410264e6a2",
      "kind": "transparent"
    },
    {
      "address": "0x7d121fb5cB37cb96D3e3D62CDd0CA65f72dF87eb",
      "txHash": "0x8f540ea255db1155b87a446d8a7530e0163f8773dca36b0027bda123fa3f43bf",
      "kind": "transparent"
    },
    {
      "address": "0xFdc78727aF1E926F7939b7C3055Bd02b19e5a31c",
      "txHash": "0xc84a4b5cee44c3da34881e0dda79e00a2f7c9b2de6179dd914d2cb392670804e",
      "kind": "transparent"
    },
    {
      "address": "0x70385C121783d6C61870e68D508DEafA0Fe14EF5",
      "txHash": "0xc538796c28f05b910a18a55c9561c089d0988ee1d850d7ebf2785dfe57115cce",
      "kind": "transparent"
    },
    {
      "address": "0xEBc0158E17cc959A174c6ba82fEf0d4374f02C88",
      "txHash": "0x178fd4b2d374ba05f3554e0fc79e85bf76fe96e34dae67d036d762d530c5ff44",
      "kind": "transparent"
    },
    {
      "address": "0x583607b5f6Dd9da677B931dB30EBBe717c8EC255",
      "txHash": "0x8e105b9856dda413d6955fde465863e0d375c627a5a90d98809e60323af51e32",
      "kind": "transparent"
    },
    {
      "address": "0x3636B8B66a287aeaEbf3e5ed3810adbbD2745f9a",
      "txHash": "0x45dc5816c45ff46c60d3a43a8f4a3d64f1d0cb7d8bd60512bdc145044366012c",
      "kind": "transparent"
    },
    {
      "address": "0x35B3612F47f360E1De4EA37dFb6847312b56d1d8",
      "txHash": "0x33db1481527973b6cd880ac5913157764930da8b3330dba70ecd2ceb696b2db6",
      "kind": "transparent"
    }
  ],
  "impls": {
    "b34c0dc52b7bfee75ab7e36ea6cbd1328c2baffbe0eb3e9152361d95172f488d": {
      "address": "0x954E05C131B3525e7013c1d740C1a97C785dBC5E",
      "txHash": "0x9364dec3f138cc0ea56ed4c5a001cfd9456b25c9828338ff4590ff06c3cbaa0e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Merchant",
            "label": "shopBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:83"
          },
          {
            "contract": "Merchant",
            "label": "shopLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:84"
          },
          {
            "contract": "Merchant",
            "label": "successTransactionCount",
            "type": "t_mapping(t_address,t_struct(SuccessTransactionInfo)11801_storage)",
            "src": "contracts/p2p/Merchant.sol:85"
          },
          {
            "contract": "Merchant",
            "label": "lockTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:87"
          },
          {
            "contract": "Merchant",
            "label": "lockUserTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:88"
          },
          {
            "contract": "Merchant",
            "label": "totalLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:89"
          },
          {
            "contract": "Merchant",
            "label": "buyerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)11796_storage))",
            "src": "contracts/p2p/Merchant.sol:90"
          },
          {
            "contract": "Merchant",
            "label": "rewardCalculator",
            "type": "t_contract(RewardCalculator)13141",
            "src": "contracts/p2p/Merchant.sol:92"
          },
          {
            "contract": "Merchant",
            "label": "feeCalculator",
            "type": "t_contract(FeeCalculator)11641",
            "src": "contracts/p2p/Merchant.sol:93"
          },
          {
            "contract": "Merchant",
            "label": "feeCollector",
            "type": "t_address",
            "src": "contracts/p2p/Merchant.sol:95"
          },
          {
            "contract": "Merchant",
            "label": "blackListUser",
            "type": "t_contract(BlackListUser)6582",
            "src": "contracts/p2p/Merchant.sol:95"
          },
          {
            "contract": "Merchant",
            "label": "validator",
            "type": "t_contract(IValidator)11676",
            "src": "contracts/p2p/Merchant.sol:98"
          },
          {
            "contract": "Merchant",
            "label": "token",
            "type": "t_contract(ERC20Upgradeable)1151",
            "src": "contracts/p2p/Merchant.sol:99"
          },
          {
            "contract": "Merchant",
            "label": "gov",
            "type": "t_contract(IGOV)11684",
            "src": "contracts/p2p/Merchant.sol:101"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(SuccessTransactionInfo)11801_storage)": {
            "label": "mapping(address => struct Merchant.SuccessTransactionInfo)"
          },
          "t_struct(SuccessTransactionInfo)11801_storage": {
            "label": "struct Merchant.SuccessTransactionInfo",
            "members": [
              {
                "label": "totalSellAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalSellCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)11796_storage))": {
            "label": "mapping(address => mapping(address => struct Merchant.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)11796_storage)": {
            "label": "mapping(address => struct Merchant.UserInfo)"
          },
          "t_struct(UserInfo)11796_storage": {
            "label": "struct Merchant.UserInfo",
            "members": [
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)11791_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Transaction)11791_storage)dyn_storage": {
            "label": "struct Merchant.Transaction[]"
          },
          "t_struct(Transaction)11791_storage": {
            "label": "struct Merchant.Transaction",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TransactionStatus)11775"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "remark",
                "type": "t_string_storage"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "updateAt",
                "type": "t_uint256"
              },
              {
                "label": "appealTxId",
                "type": "t_string_storage"
              }
            ]
          },
          "t_enum(TransactionStatus)11775": {
            "label": "enum Merchant.TransactionStatus",
            "members": [
              "INIT",
              "PENDING_TRANSFER_FAIT",
              "APPEAL",
              "CANCELED",
              "FINISH"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(RewardCalculator)13141": {
            "label": "contract RewardCalculator"
          },
          "t_contract(FeeCalculator)11641": {
            "label": "contract FeeCalculator"
          },
          "t_contract(BlackListUser)6582": {
            "label": "contract BlackListUser"
          },
          "t_contract(IValidator)11676": {
            "label": "contract IValidator"
          },
          "t_contract(ERC20Upgradeable)1151": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IGOV)11684": {
            "label": "contract IGOV"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "11157f2c7fce59021f047faa85ec7ad3e592856747b686c7f37f89c878f5ef53": {
      "address": "0xd47f47E1E936f6C0D5427bdbA0c7dadaF129a075",
      "txHash": "0xd81bf1fcf7fe277e4043d137fa60ccff775932ca7036d668cb7c3ceee477b055",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "WaggyToken",
            "label": "_totalLock",
            "type": "t_uint256",
            "src": "contracts/p2p/WaggyToken.sol:35"
          },
          {
            "contract": "WaggyToken",
            "label": "_locks",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/WaggyToken.sol:36"
          },
          {
            "contract": "WaggyToken",
            "label": "_lastUnlockBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/WaggyToken.sol:37"
          },
          {
            "contract": "WaggyToken",
            "label": "cap",
            "type": "t_uint256",
            "src": "contracts/p2p/WaggyToken.sol:39"
          },
          {
            "contract": "WaggyToken",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/p2p/WaggyToken.sol:40"
          },
          {
            "contract": "WaggyToken",
            "label": "startReleaseBlock",
            "type": "t_uint256",
            "src": "contracts/p2p/WaggyToken.sol:43"
          },
          {
            "contract": "WaggyToken",
            "label": "endReleaseBlock",
            "type": "t_uint256",
            "src": "contracts/p2p/WaggyToken.sol:44"
          },
          {
            "contract": "WaggyToken",
            "label": "minters",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/p2p/WaggyToken.sol:46"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "398332bc85f430ef4cc2eac35e630623a6c028a17b203e26c35451a677231d59": {
      "address": "0xbd61F6f84Af710D6040ebE7466d505Ae5FCCD4b8",
      "txHash": "0x82a27039d792cce662d9364a455def447ae37cf55144304138a324ed3ef7a4c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WaggyStaking",
            "label": "adminAddress",
            "type": "t_address",
            "src": "contracts/farm/WaggyStaking.sol:39"
          },
          {
            "contract": "WaggyStaking",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)10871_storage)dyn_storage",
            "src": "contracts/farm/WaggyStaking.sol:41"
          },
          {
            "contract": "WaggyStaking",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)10859_storage))",
            "src": "contracts/farm/WaggyStaking.sol:43"
          },
          {
            "contract": "WaggyStaking",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/farm/WaggyStaking.sol:45"
          },
          {
            "contract": "WaggyStaking",
            "label": "waggyToken",
            "type": "t_contract(WaggyToken)13622",
            "src": "contracts/farm/WaggyStaking.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(PoolInfo)10871_storage)dyn_storage": {
            "label": "struct WaggyStaking.PoolInfo[]"
          },
          "t_struct(PoolInfo)10871_storage": {
            "label": "struct WaggyStaking.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(ERC20)3416"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accWagPerShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(ERC20)3416": {
            "label": "contract ERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)10859_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WaggyStaking.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)10859_storage)": {
            "label": "mapping(address => struct WaggyStaking.UserInfo)"
          },
          "t_struct(UserInfo)10859_storage": {
            "label": "struct WaggyStaking.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "inBlackList",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(WaggyToken)13622": {
            "label": "contract WaggyToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e26e768be40346a1e86379c76d1a86dbb0a085f57323d8e8755572206536840c": {
      "address": "0x7Ce80944420790895f915eFA30Ca91F5028Cf699",
      "txHash": "0xc1dba084441db21dcb2aa698588846b2d1910b4c73bfccd883a7717cc5143bda",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WaggyStaking",
            "label": "adminAddress",
            "type": "t_address",
            "src": "contracts/farm/WaggyStaking.sol:40"
          },
          {
            "contract": "WaggyStaking",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)10956_storage)dyn_storage",
            "src": "contracts/farm/WaggyStaking.sol:42"
          },
          {
            "contract": "WaggyStaking",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)10944_storage))",
            "src": "contracts/farm/WaggyStaking.sol:44"
          },
          {
            "contract": "WaggyStaking",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/farm/WaggyStaking.sol:46"
          },
          {
            "contract": "WaggyStaking",
            "label": "waggyToken",
            "type": "t_contract(WaggyToken)13824",
            "src": "contracts/farm/WaggyStaking.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(PoolInfo)10956_storage)dyn_storage": {
            "label": "struct WaggyStaking.PoolInfo[]"
          },
          "t_struct(PoolInfo)10956_storage": {
            "label": "struct WaggyStaking.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(ERC20)3416"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accWagPerShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(ERC20)3416": {
            "label": "contract ERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)10944_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WaggyStaking.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)10944_storage)": {
            "label": "mapping(address => struct WaggyStaking.UserInfo)"
          },
          "t_struct(UserInfo)10944_storage": {
            "label": "struct WaggyStaking.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "inBlackList",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(WaggyToken)13824": {
            "label": "contract WaggyToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "56410206953001b6f38df4aba36d459b3ac52ec9aa45d3fc31daafcc2910b6e8": {
      "address": "0x8089FEEB1c6959C4a7346E9eA9420f1c8F664e9C",
      "txHash": "0x66e76b4943a897d0ef45b76f9ee4d73132a25c50364ef79abfd081b735fb31fc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "WaggyStaking",
            "label": "adminAddress",
            "type": "t_address",
            "src": "contracts/farm/WaggyStaking.sol:40"
          },
          {
            "contract": "WaggyStaking",
            "label": "poolInfo",
            "type": "t_array(t_struct(PoolInfo)10956_storage)dyn_storage",
            "src": "contracts/farm/WaggyStaking.sol:42"
          },
          {
            "contract": "WaggyStaking",
            "label": "userInfo",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)10944_storage))",
            "src": "contracts/farm/WaggyStaking.sol:44"
          },
          {
            "contract": "WaggyStaking",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/farm/WaggyStaking.sol:46"
          },
          {
            "contract": "WaggyStaking",
            "label": "waggyToken",
            "type": "t_contract(WaggyToken)13827",
            "src": "contracts/farm/WaggyStaking.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(PoolInfo)10956_storage)dyn_storage": {
            "label": "struct WaggyStaking.PoolInfo[]"
          },
          "t_struct(PoolInfo)10956_storage": {
            "label": "struct WaggyStaking.PoolInfo",
            "members": [
              {
                "label": "lpToken",
                "type": "t_contract(ERC20)3416"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accWagPerShare",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(ERC20)3416": {
            "label": "contract ERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)10944_storage))": {
            "label": "mapping(uint256 => mapping(address => struct WaggyStaking.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)10944_storage)": {
            "label": "mapping(address => struct WaggyStaking.UserInfo)"
          },
          "t_struct(UserInfo)10944_storage": {
            "label": "struct WaggyStaking.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "inBlackList",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(WaggyToken)13827": {
            "label": "contract WaggyToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d03fa4acfe2b9c1a54ee19f75f1a226ed0250966f1d6caa3dba850934bc9ebf4": {
      "address": "0x9ef11aD5960a3770903F003Dd21208722fDA4247",
      "txHash": "0xbbf964d55f30a12a42f9d4242201922239f01f0349da45f432799761890958c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Merchant",
            "label": "shopBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:83"
          },
          {
            "contract": "Merchant",
            "label": "shopLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:84"
          },
          {
            "contract": "Merchant",
            "label": "successTransactionCount",
            "type": "t_mapping(t_address,t_struct(SuccessTransactionInfo)3950_storage)",
            "src": "contracts/p2p/Merchant.sol:85"
          },
          {
            "contract": "Merchant",
            "label": "lockTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:87"
          },
          {
            "contract": "Merchant",
            "label": "lockUserTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:88"
          },
          {
            "contract": "Merchant",
            "label": "totalLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:89"
          },
          {
            "contract": "Merchant",
            "label": "buyerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)3945_storage))",
            "src": "contracts/p2p/Merchant.sol:90"
          },
          {
            "contract": "Merchant",
            "label": "rewardCalculator",
            "type": "t_contract(RewardCalculator)5291",
            "src": "contracts/p2p/Merchant.sol:92"
          },
          {
            "contract": "Merchant",
            "label": "feeCalculator",
            "type": "t_contract(FeeCalculator)3790",
            "src": "contracts/p2p/Merchant.sol:93"
          },
          {
            "contract": "Merchant",
            "label": "feeCollector",
            "type": "t_address",
            "src": "contracts/p2p/Merchant.sol:95"
          },
          {
            "contract": "Merchant",
            "label": "blackListUser",
            "type": "t_contract(BlackListUser)3747",
            "src": "contracts/p2p/Merchant.sol:95"
          },
          {
            "contract": "Merchant",
            "label": "validator",
            "type": "t_contract(IValidator)3825",
            "src": "contracts/p2p/Merchant.sol:98"
          },
          {
            "contract": "Merchant",
            "label": "token",
            "type": "t_contract(ERC20Upgradeable)743",
            "src": "contracts/p2p/Merchant.sol:99"
          },
          {
            "contract": "Merchant",
            "label": "gov",
            "type": "t_contract(IGOV)3833",
            "src": "contracts/p2p/Merchant.sol:101"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(SuccessTransactionInfo)3950_storage)": {
            "label": "mapping(address => struct Merchant.SuccessTransactionInfo)"
          },
          "t_struct(SuccessTransactionInfo)3950_storage": {
            "label": "struct Merchant.SuccessTransactionInfo",
            "members": [
              {
                "label": "totalSellAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalSellCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)3945_storage))": {
            "label": "mapping(address => mapping(address => struct Merchant.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)3945_storage)": {
            "label": "mapping(address => struct Merchant.UserInfo)"
          },
          "t_struct(UserInfo)3945_storage": {
            "label": "struct Merchant.UserInfo",
            "members": [
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)3940_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Transaction)3940_storage)dyn_storage": {
            "label": "struct Merchant.Transaction[]"
          },
          "t_struct(Transaction)3940_storage": {
            "label": "struct Merchant.Transaction",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TransactionStatus)3924"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "remark",
                "type": "t_string_storage"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "updateAt",
                "type": "t_uint256"
              },
              {
                "label": "appealTxId",
                "type": "t_string_storage"
              }
            ]
          },
          "t_enum(TransactionStatus)3924": {
            "label": "enum Merchant.TransactionStatus",
            "members": [
              "INIT",
              "PENDING_TRANSFER_FAIT",
              "APPEAL",
              "CANCELED",
              "FINISH"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(RewardCalculator)5291": {
            "label": "contract RewardCalculator"
          },
          "t_contract(FeeCalculator)3790": {
            "label": "contract FeeCalculator"
          },
          "t_contract(BlackListUser)3747": {
            "label": "contract BlackListUser"
          },
          "t_contract(IValidator)3825": {
            "label": "contract IValidator"
          },
          "t_contract(ERC20Upgradeable)743": {
            "label": "contract ERC20Upgradeable"
          },
          "t_contract(IGOV)3833": {
            "label": "contract IGOV"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6900f50b71898ba3a04c8f4750388dadf75f5eeaab1eeafebf9bd5dee06ac016": {
      "address": "0x43c16b74Ea07A8CFc6D400BdC7974466edA520FD",
      "txHash": "0x7ba52a7da6bff88c9e2a522a4db47058c26964919035c337798bac1f7f77fe1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Merchant",
            "label": "shopBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:87"
          },
          {
            "contract": "Merchant",
            "label": "shopLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:88"
          },
          {
            "contract": "Merchant",
            "label": "successTransactionCount",
            "type": "t_mapping(t_address,t_struct(SuccessTransactionInfo)11817_storage)",
            "src": "contracts/p2p/Merchant.sol:89"
          },
          {
            "contract": "Merchant",
            "label": "lockTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:91"
          },
          {
            "contract": "Merchant",
            "label": "lockUserTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:92"
          },
          {
            "contract": "Merchant",
            "label": "totalLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:93"
          },
          {
            "contract": "Merchant",
            "label": "buyerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)11812_storage))",
            "src": "contracts/p2p/Merchant.sol:94"
          },
          {
            "contract": "Merchant",
            "label": "rewardCalculator",
            "type": "t_contract(RewardCalculator)13349",
            "src": "contracts/p2p/Merchant.sol:96"
          },
          {
            "contract": "Merchant",
            "label": "feeCalculator",
            "type": "t_contract(FeeCalculator)11641",
            "src": "contracts/p2p/Merchant.sol:97"
          },
          {
            "contract": "Merchant",
            "label": "feeCollector",
            "type": "t_address",
            "src": "contracts/p2p/Merchant.sol:99"
          },
          {
            "contract": "Merchant",
            "label": "blackListUser",
            "type": "t_contract(BlackListUser)6582",
            "src": "contracts/p2p/Merchant.sol:99"
          },
          {
            "contract": "Merchant",
            "label": "validator",
            "type": "t_contract(IValidator)11677",
            "src": "contracts/p2p/Merchant.sol:102"
          },
          {
            "contract": "Merchant",
            "label": "token",
            "type": "t_contract(ERC20Upgradeable)1151",
            "src": "contracts/p2p/Merchant.sol:104"
          },
          {
            "contract": "Merchant",
            "label": "admins",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/p2p/Merchant.sol:105"
          },
          {
            "contract": "Merchant",
            "label": "gov",
            "type": "t_contract(IGOV)11685",
            "src": "contracts/p2p/Merchant.sol:107"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(SuccessTransactionInfo)11817_storage)": {
            "label": "mapping(address => struct Merchant.SuccessTransactionInfo)"
          },
          "t_struct(SuccessTransactionInfo)11817_storage": {
            "label": "struct Merchant.SuccessTransactionInfo",
            "members": [
              {
                "label": "totalSellAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalSellCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)11812_storage))": {
            "label": "mapping(address => mapping(address => struct Merchant.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)11812_storage)": {
            "label": "mapping(address => struct Merchant.UserInfo)"
          },
          "t_struct(UserInfo)11812_storage": {
            "label": "struct Merchant.UserInfo",
            "members": [
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)11807_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Transaction)11807_storage)dyn_storage": {
            "label": "struct Merchant.Transaction[]"
          },
          "t_struct(Transaction)11807_storage": {
            "label": "struct Merchant.Transaction",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TransactionStatus)11791"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "remark",
                "type": "t_string_storage"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "updateAt",
                "type": "t_uint256"
              },
              {
                "label": "appealTxId",
                "type": "t_string_storage"
              }
            ]
          },
          "t_enum(TransactionStatus)11791": {
            "label": "enum Merchant.TransactionStatus",
            "members": [
              "INIT",
              "PENDING_TRANSFER_FAIT",
              "APPEAL",
              "CANCELED",
              "FINISH"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(RewardCalculator)13349": {
            "label": "contract RewardCalculator"
          },
          "t_contract(FeeCalculator)11641": {
            "label": "contract FeeCalculator"
          },
          "t_contract(BlackListUser)6582": {
            "label": "contract BlackListUser"
          },
          "t_contract(IValidator)11677": {
            "label": "contract IValidator"
          },
          "t_contract(ERC20Upgradeable)1151": {
            "label": "contract ERC20Upgradeable"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IGOV)11685": {
            "label": "contract IGOV"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f7ad650193fdd5df2f2b39a71265cf7b3c9682cbd5f78fa5548472b7b10b480b": {
      "address": "0x9D618390b471498b8Ec46D5c5d2413f9A8B56E30",
      "txHash": "0x04ac6b3b51b4a57811099d852657ea86bdee4a5712407ae45399405cd9b31c31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Merchant",
            "label": "shopBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:87"
          },
          {
            "contract": "Merchant",
            "label": "shopLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:88"
          },
          {
            "contract": "Merchant",
            "label": "successTransactionCount",
            "type": "t_mapping(t_address,t_struct(SuccessTransactionInfo)11817_storage)",
            "src": "contracts/p2p/Merchant.sol:89"
          },
          {
            "contract": "Merchant",
            "label": "lockTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:91"
          },
          {
            "contract": "Merchant",
            "label": "lockUserTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:92"
          },
          {
            "contract": "Merchant",
            "label": "totalLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:93"
          },
          {
            "contract": "Merchant",
            "label": "buyerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)11812_storage))",
            "src": "contracts/p2p/Merchant.sol:94"
          },
          {
            "contract": "Merchant",
            "label": "rewardCalculator",
            "type": "t_contract(RewardCalculator)13360",
            "src": "contracts/p2p/Merchant.sol:96"
          },
          {
            "contract": "Merchant",
            "label": "feeCalculator",
            "type": "t_contract(FeeCalculator)11641",
            "src": "contracts/p2p/Merchant.sol:97"
          },
          {
            "contract": "Merchant",
            "label": "feeCollector",
            "type": "t_address",
            "src": "contracts/p2p/Merchant.sol:99"
          },
          {
            "contract": "Merchant",
            "label": "blackListUser",
            "type": "t_contract(BlackListUser)6582",
            "src": "contracts/p2p/Merchant.sol:99"
          },
          {
            "contract": "Merchant",
            "label": "validator",
            "type": "t_contract(IValidator)11677",
            "src": "contracts/p2p/Merchant.sol:102"
          },
          {
            "contract": "Merchant",
            "label": "token",
            "type": "t_contract(ERC20Upgradeable)1151",
            "src": "contracts/p2p/Merchant.sol:104"
          },
          {
            "contract": "Merchant",
            "label": "admins",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/p2p/Merchant.sol:105"
          },
          {
            "contract": "Merchant",
            "label": "gov",
            "type": "t_contract(IGOV)11685",
            "src": "contracts/p2p/Merchant.sol:107"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(SuccessTransactionInfo)11817_storage)": {
            "label": "mapping(address => struct Merchant.SuccessTransactionInfo)"
          },
          "t_struct(SuccessTransactionInfo)11817_storage": {
            "label": "struct Merchant.SuccessTransactionInfo",
            "members": [
              {
                "label": "totalSellAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalSellCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)11812_storage))": {
            "label": "mapping(address => mapping(address => struct Merchant.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)11812_storage)": {
            "label": "mapping(address => struct Merchant.UserInfo)"
          },
          "t_struct(UserInfo)11812_storage": {
            "label": "struct Merchant.UserInfo",
            "members": [
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)11807_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Transaction)11807_storage)dyn_storage": {
            "label": "struct Merchant.Transaction[]"
          },
          "t_struct(Transaction)11807_storage": {
            "label": "struct Merchant.Transaction",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TransactionStatus)11791"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "remark",
                "type": "t_string_storage"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "updateAt",
                "type": "t_uint256"
              },
              {
                "label": "appealTxId",
                "type": "t_string_storage"
              }
            ]
          },
          "t_enum(TransactionStatus)11791": {
            "label": "enum Merchant.TransactionStatus",
            "members": [
              "INIT",
              "PENDING_TRANSFER_FAIT",
              "APPEAL",
              "CANCELED",
              "FINISH"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(RewardCalculator)13360": {
            "label": "contract RewardCalculator"
          },
          "t_contract(FeeCalculator)11641": {
            "label": "contract FeeCalculator"
          },
          "t_contract(BlackListUser)6582": {
            "label": "contract BlackListUser"
          },
          "t_contract(IValidator)11677": {
            "label": "contract IValidator"
          },
          "t_contract(ERC20Upgradeable)1151": {
            "label": "contract ERC20Upgradeable"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IGOV)11685": {
            "label": "contract IGOV"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4ca5fe01e92bf4524bfe8b929432b2d8582720908cf9a0cbb18ace89e910cd2e": {
      "address": "0xC7Bb69801A33c7e327278464C340D062375bA075",
      "txHash": "0xe8f86af1943000e7d7e194cff159a648170237e152c44748639f39f836b3a1af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Merchant",
            "label": "shopBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:98"
          },
          {
            "contract": "Merchant",
            "label": "shopLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:99"
          },
          {
            "contract": "Merchant",
            "label": "successTransactionCount",
            "type": "t_mapping(t_address,t_struct(SuccessTransactionInfo)4740_storage)",
            "src": "contracts/p2p/Merchant.sol:100"
          },
          {
            "contract": "Merchant",
            "label": "lockTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:102"
          },
          {
            "contract": "Merchant",
            "label": "lockUserTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:103"
          },
          {
            "contract": "Merchant",
            "label": "totalLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:104"
          },
          {
            "contract": "Merchant",
            "label": "buyerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)4735_storage))",
            "src": "contracts/p2p/Merchant.sol:105"
          },
          {
            "contract": "Merchant",
            "label": "rewardCalculator",
            "type": "t_contract(RewardCalculator)6497",
            "src": "contracts/p2p/Merchant.sol:107"
          },
          {
            "contract": "Merchant",
            "label": "feeCalculator",
            "type": "t_contract(FeeCalculator)4546",
            "src": "contracts/p2p/Merchant.sol:108"
          },
          {
            "contract": "Merchant",
            "label": "feeCollector",
            "type": "t_address",
            "src": "contracts/p2p/Merchant.sol:110"
          },
          {
            "contract": "Merchant",
            "label": "blackListUser",
            "type": "t_contract(BlackListUser)4456",
            "src": "contracts/p2p/Merchant.sol:110"
          },
          {
            "contract": "Merchant",
            "label": "validator",
            "type": "t_contract(IValidator)4584",
            "src": "contracts/p2p/Merchant.sol:113"
          },
          {
            "contract": "Merchant",
            "label": "token",
            "type": "t_contract(ERC20Upgradeable)1151",
            "src": "contracts/p2p/Merchant.sol:115"
          },
          {
            "contract": "Merchant",
            "label": "admins",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/p2p/Merchant.sol:116"
          },
          {
            "contract": "Merchant",
            "label": "gov",
            "type": "t_contract(IGOV)4608",
            "src": "contracts/p2p/Merchant.sol:117"
          },
          {
            "contract": "Merchant",
            "label": "wbnb",
            "type": "t_contract(IWBNB)4600",
            "src": "contracts/p2p/Merchant.sol:118"
          },
          {
            "contract": "Merchant",
            "label": "wnativeRelayer",
            "type": "t_contract(WNativeRelayer)6614",
            "src": "contracts/p2p/Merchant.sol:118"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(SuccessTransactionInfo)4740_storage)": {
            "label": "mapping(address => struct Merchant.SuccessTransactionInfo)"
          },
          "t_struct(SuccessTransactionInfo)4740_storage": {
            "label": "struct Merchant.SuccessTransactionInfo",
            "members": [
              {
                "label": "totalSellAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalSellCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)4735_storage))": {
            "label": "mapping(address => mapping(address => struct Merchant.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)4735_storage)": {
            "label": "mapping(address => struct Merchant.UserInfo)"
          },
          "t_struct(UserInfo)4735_storage": {
            "label": "struct Merchant.UserInfo",
            "members": [
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)4730_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Transaction)4730_storage)dyn_storage": {
            "label": "struct Merchant.Transaction[]"
          },
          "t_struct(Transaction)4730_storage": {
            "label": "struct Merchant.Transaction",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TransactionStatus)4714"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "remark",
                "type": "t_string_storage"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "updateAt",
                "type": "t_uint256"
              },
              {
                "label": "appealTxId",
                "type": "t_string_storage"
              }
            ]
          },
          "t_enum(TransactionStatus)4714": {
            "label": "enum Merchant.TransactionStatus",
            "members": [
              "INIT",
              "PENDING_TRANSFER_FAIT",
              "APPEAL",
              "CANCELED",
              "FINISH"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(RewardCalculator)6497": {
            "label": "contract RewardCalculator"
          },
          "t_contract(FeeCalculator)4546": {
            "label": "contract FeeCalculator"
          },
          "t_contract(BlackListUser)4456": {
            "label": "contract BlackListUser"
          },
          "t_contract(IValidator)4584": {
            "label": "contract IValidator"
          },
          "t_contract(ERC20Upgradeable)1151": {
            "label": "contract ERC20Upgradeable"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IGOV)4608": {
            "label": "contract IGOV"
          },
          "t_contract(IWBNB)4600": {
            "label": "contract IWBNB"
          },
          "t_contract(WNativeRelayer)6614": {
            "label": "contract WNativeRelayer"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "edadab82b28e6c4f9b591a4bc0c16d8934d75c9b91277272d00bdce7cf99fd47": {
      "address": "0x3A7eaD888adc6807BE2bf329B57A06307992eB33",
      "txHash": "0xd6ed15902baa60c2cf093cda9ffff0ca37c7a8394de41a2d64f7ab25a4f34a21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "Merchant",
            "label": "shopBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:98"
          },
          {
            "contract": "Merchant",
            "label": "shopLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:99"
          },
          {
            "contract": "Merchant",
            "label": "successTransactionCount",
            "type": "t_mapping(t_address,t_struct(SuccessTransactionInfo)4740_storage)",
            "src": "contracts/p2p/Merchant.sol:100"
          },
          {
            "contract": "Merchant",
            "label": "lockTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:102"
          },
          {
            "contract": "Merchant",
            "label": "lockUserTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:103"
          },
          {
            "contract": "Merchant",
            "label": "totalLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:104"
          },
          {
            "contract": "Merchant",
            "label": "buyerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)4735_storage))",
            "src": "contracts/p2p/Merchant.sol:105"
          },
          {
            "contract": "Merchant",
            "label": "rewardCalculator",
            "type": "t_contract(RewardCalculator)6497",
            "src": "contracts/p2p/Merchant.sol:107"
          },
          {
            "contract": "Merchant",
            "label": "feeCalculator",
            "type": "t_contract(FeeCalculator)4546",
            "src": "contracts/p2p/Merchant.sol:108"
          },
          {
            "contract": "Merchant",
            "label": "feeCollector",
            "type": "t_address",
            "src": "contracts/p2p/Merchant.sol:110"
          },
          {
            "contract": "Merchant",
            "label": "blackListUser",
            "type": "t_contract(BlackListUser)4456",
            "src": "contracts/p2p/Merchant.sol:110"
          },
          {
            "contract": "Merchant",
            "label": "validator",
            "type": "t_contract(IValidator)4584",
            "src": "contracts/p2p/Merchant.sol:113"
          },
          {
            "contract": "Merchant",
            "label": "token",
            "type": "t_contract(ERC20Upgradeable)1151",
            "src": "contracts/p2p/Merchant.sol:115"
          },
          {
            "contract": "Merchant",
            "label": "admins",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/p2p/Merchant.sol:116"
          },
          {
            "contract": "Merchant",
            "label": "gov",
            "type": "t_contract(IGOV)4608",
            "src": "contracts/p2p/Merchant.sol:117"
          },
          {
            "contract": "Merchant",
            "label": "wbnb",
            "type": "t_contract(IWBNB)4600",
            "src": "contracts/p2p/Merchant.sol:118"
          },
          {
            "contract": "Merchant",
            "label": "wnativeRelayer",
            "type": "t_contract(WNativeRelayer)6614",
            "src": "contracts/p2p/Merchant.sol:118"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(SuccessTransactionInfo)4740_storage)": {
            "label": "mapping(address => struct Merchant.SuccessTransactionInfo)"
          },
          "t_struct(SuccessTransactionInfo)4740_storage": {
            "label": "struct Merchant.SuccessTransactionInfo",
            "members": [
              {
                "label": "totalSellAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalSellCount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)4735_storage))": {
            "label": "mapping(address => mapping(address => struct Merchant.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)4735_storage)": {
            "label": "mapping(address => struct Merchant.UserInfo)"
          },
          "t_struct(UserInfo)4735_storage": {
            "label": "struct Merchant.UserInfo",
            "members": [
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)4730_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Transaction)4730_storage)dyn_storage": {
            "label": "struct Merchant.Transaction[]"
          },
          "t_struct(Transaction)4730_storage": {
            "label": "struct Merchant.Transaction",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TransactionStatus)4714"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "remark",
                "type": "t_string_storage"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "updateAt",
                "type": "t_uint256"
              },
              {
                "label": "appealTxId",
                "type": "t_string_storage"
              }
            ]
          },
          "t_enum(TransactionStatus)4714": {
            "label": "enum Merchant.TransactionStatus",
            "members": [
              "INIT",
              "PENDING_TRANSFER_FAIT",
              "APPEAL",
              "CANCELED",
              "FINISH"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(RewardCalculator)6497": {
            "label": "contract RewardCalculator"
          },
          "t_contract(FeeCalculator)4546": {
            "label": "contract FeeCalculator"
          },
          "t_contract(BlackListUser)4456": {
            "label": "contract BlackListUser"
          },
          "t_contract(IValidator)4584": {
            "label": "contract IValidator"
          },
          "t_contract(ERC20Upgradeable)1151": {
            "label": "contract ERC20Upgradeable"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IGOV)4608": {
            "label": "contract IGOV"
          },
          "t_contract(IWBNB)4600": {
            "label": "contract IWBNB"
          },
          "t_contract(WNativeRelayer)6614": {
            "label": "contract WNativeRelayer"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
