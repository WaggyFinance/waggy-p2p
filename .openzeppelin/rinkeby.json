{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xbEa9F6121E02FAE12710AC4DBf15Eb33f2e917Dd",
    "txHash": "0xcd0cca6ff0e2a02256902f63328961e6d0f20cb6b5771076c27f8bec0e6deb00",
    "deployTransaction": {
      "hash": "0xcd0cca6ff0e2a02256902f63328961e6d0f20cb6b5771076c27f8bec0e6deb00",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xCB950adCa1d67749486D65311Aba5efdA8351bD3",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x04d46c0b75"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x04d46c0b75"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 886,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x3a73ca551a90e3181eca463d8a8f6b9dc5f54aa90db5957e72a64f7e5c29efd2",
      "s": "0x325b232bae17ef5f0037fa0484c2d9ceab1d597459dd087d9be03fcbf1b51f0a",
      "v": 0,
      "creates": "0xbEa9F6121E02FAE12710AC4DBf15Eb33f2e917Dd",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x2CD1E73DDCF213CB6A30B7E029B954dEbFBA5Efe",
      "txHash": "0x9e8201d7535646a8ef376657dedb6db5079cf5744c9f20fce6be12283bc61dc8",
      "kind": "transparent"
    },
    {
      "address": "0x70E9866a1E33685019BD2EcFA5ebe70B04C5Cee7",
      "txHash": "0x91ad7680462192a6870cf970eb3570c9de7b1ea27fbf5ff7855cb7074450bae0",
      "kind": "transparent"
    },
    {
      "address": "0x815fda76119C83e90281D897feCE0C797687e7e3",
      "txHash": "0x3453380ba894f9c22839ef5ec3a5aa4598ab76394cc768982199e69f0005e921",
      "kind": "transparent"
    },
    {
      "address": "0x408E393fDD97e23DB6cD9022a381AF9EB6063eB0",
      "txHash": "0x34024664eae0ebeb72a4127c16f9d2021594bf7085e654d1123dacfc46e6929a",
      "kind": "transparent"
    },
    {
      "address": "0xe669678857970f3b80322aB5E3579D17039E4f3E",
      "txHash": "0x6ae9c8490698ed31d4648c3f7dd00742a6fbd3194fae3031f730e86aaa404d31",
      "kind": "transparent"
    },
    {
      "address": "0x86eDe7e75395EF94Ee4EC5029D89641C03Df1cF0",
      "txHash": "0x35ea49eb7a0a1307a8191527898054855df4c77f82ba4a85f1d4d649cc1501ea",
      "kind": "transparent"
    },
    {
      "address": "0xD86624D0805f283d76f9A627415cf65E12254c79",
      "txHash": "0x83a60b96ea2ece2c9f7da015cfabf2d80d13b0c21af786560603b5449193661c",
      "kind": "transparent"
    },
    {
      "address": "0x54C7BB5c257901652d6Ce58A3a69E7AeD80238A6",
      "txHash": "0x758d43031f4deb9019f99ff698be3f5b885418d92f71b6a0945cc4f3197af9e6",
      "kind": "transparent"
    },
    {
      "address": "0x76E0246606aCe2c10515b1FbD804930D8f4a910C",
      "txHash": "0x0b59ecf1fea28b6250f3f5e7693f73ec687ffb90006981d411b6bde01cc4d4e6",
      "kind": "transparent"
    },
    {
      "address": "0x4778fB66F2F82F7aE630013eb6891040c3c0EC02",
      "txHash": "0xd6484176fd676275d49670f5b957e9e923ec9d9afb10d8827480b734195a3c97",
      "kind": "transparent"
    },
    {
      "address": "0x3CFe9EE69F00cF769137a2C758599e4bF18aeDC9",
      "txHash": "0x0ee595a9da6682f4488f35415983a90883cbe205374abf3d9a0ec7acf9a1ebba",
      "kind": "transparent"
    },
    {
      "address": "0x9FE78cbb91726527A9647166E1e7628F7c579F1e",
      "txHash": "0xa39597425f2187544bc76cf0edd9d58ba98770564c7e7b19df6ef9d0b373cbd3",
      "kind": "transparent"
    },
    {
      "address": "0x8A562Bc13D6CE3Ec27F15641A4A194d9591Cc8F1",
      "txHash": "0x0ff0af2e8dcf8b681375f73ed54ec199bd96d890fb2e2a81346ec6c578401dac",
      "kind": "transparent"
    },
    {
      "address": "0x3733c020A94FFa08bD217d1F7fbF44D51b2c0bf3",
      "txHash": "0x938fc2009ff15eb24e1572f4107437a6a85c2a06b3df758c6dd9ac3d515a7c76",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c39968f20c1ea32c32fd1f795b198bc58bd2f60d2c69f6cce75ca3c7d9290d1e": {
      "address": "0x104172473b5864136B0eB430C48142f9F3a837a4",
      "txHash": "0x1dc8afed8d11608b3dde3da57bdf11fcff498f30b84d0be1864f26f51e9fbf69",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Merchant",
            "label": "shopBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:52"
          },
          {
            "contract": "Merchant",
            "label": "shopLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:53"
          },
          {
            "contract": "Merchant",
            "label": "successTransactionCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:54"
          },
          {
            "contract": "Merchant",
            "label": "lockTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:56"
          },
          {
            "contract": "Merchant",
            "label": "lockUserTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:57"
          },
          {
            "contract": "Merchant",
            "label": "totalLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:58"
          },
          {
            "contract": "Merchant",
            "label": "buyerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5421_storage))",
            "src": "contracts/p2p/Merchant.sol:59"
          },
          {
            "contract": "Merchant",
            "label": "sellerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5421_storage))",
            "src": "contracts/p2p/Merchant.sol:60"
          },
          {
            "contract": "Merchant",
            "label": "rewardCalculator",
            "type": "t_contract(RewardCalculator)7879",
            "src": "contracts/p2p/Merchant.sol:62"
          },
          {
            "contract": "Merchant",
            "label": "feeCalculator",
            "type": "t_contract(FeeCalculator)5321",
            "src": "contracts/p2p/Merchant.sol:63"
          },
          {
            "contract": "Merchant",
            "label": "feeCollector",
            "type": "t_address",
            "src": "contracts/p2p/Merchant.sol:64"
          },
          {
            "contract": "Merchant",
            "label": "blackListUser",
            "type": "t_contract(BlackListUser)2189",
            "src": "contracts/p2p/Merchant.sol:65"
          },
          {
            "contract": "Merchant",
            "label": "token",
            "type": "t_contract(ERC20)1244",
            "src": "contracts/p2p/Merchant.sol:67"
          },
          {
            "contract": "Merchant",
            "label": "gov",
            "type": "t_contract(ERC20)1244",
            "src": "contracts/p2p/Merchant.sol:68"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)5421_storage))": {
            "label": "mapping(address => mapping(address => struct Merchant.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)5421_storage)": {
            "label": "mapping(address => struct Merchant.UserInfo)"
          },
          "t_struct(UserInfo)5421_storage": {
            "label": "struct Merchant.UserInfo",
            "members": [
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)5416_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Transaction)5416_storage)dyn_storage": {
            "label": "struct Merchant.Transaction[]"
          },
          "t_struct(Transaction)5416_storage": {
            "label": "struct Merchant.Transaction",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TransactionStatus)5402"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "remark",
                "type": "t_string_storage"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "updateAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(TransactionStatus)5402": {
            "label": "enum Merchant.TransactionStatus",
            "members": [
              "INIT",
              "PENDING_TRANSFER_FAIT",
              "APPEAL",
              "CANCELED",
              "FINISH"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(RewardCalculator)7879": {
            "label": "contract RewardCalculator"
          },
          "t_contract(FeeCalculator)5321": {
            "label": "contract FeeCalculator"
          },
          "t_contract(BlackListUser)2189": {
            "label": "contract BlackListUser"
          },
          "t_contract(ERC20)1244": {
            "label": "contract ERC20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d179b021a38592e7af8901b378f9ba4213760cccece1d38678478e46d9cbbd10": {
      "address": "0x5953029e5e7c0A9eE5B251F50378742dbe8B7c21",
      "txHash": "0x6f65f335be0b40c3be61b5b196efe59d84c8fc59c068922b48ce3584b4bbe17c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "WaggyToken",
            "label": "_totalLock",
            "type": "t_uint256",
            "src": "contracts/p2p/WaggyToken.sol:36"
          },
          {
            "contract": "WaggyToken",
            "label": "_locks",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/WaggyToken.sol:37"
          },
          {
            "contract": "WaggyToken",
            "label": "_lastUnlockBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/WaggyToken.sol:38"
          },
          {
            "contract": "WaggyToken",
            "label": "cap",
            "type": "t_uint256",
            "src": "contracts/p2p/WaggyToken.sol:40"
          },
          {
            "contract": "WaggyToken",
            "label": "governor",
            "type": "t_address",
            "src": "contracts/p2p/WaggyToken.sol:41"
          },
          {
            "contract": "WaggyToken",
            "label": "startReleaseBlock",
            "type": "t_uint256",
            "src": "contracts/p2p/WaggyToken.sol:44"
          },
          {
            "contract": "WaggyToken",
            "label": "endReleaseBlock",
            "type": "t_uint256",
            "src": "contracts/p2p/WaggyToken.sol:45"
          },
          {
            "contract": "WaggyToken",
            "label": "minters",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/p2p/WaggyToken.sol:47"
          },
          {
            "contract": "WaggyToken",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/p2p/WaggyToken.sol:256"
          },
          {
            "contract": "WaggyToken",
            "label": "checkpoints",
            "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)9482_storage))",
            "src": "contracts/p2p/WaggyToken.sol:265"
          },
          {
            "contract": "WaggyToken",
            "label": "numCheckpoints",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/p2p/WaggyToken.sol:268"
          },
          {
            "contract": "WaggyToken",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/WaggyToken.sol:278"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)9482_storage))": {
            "label": "mapping(address => mapping(uint32 => struct WaggyToken.Checkpoint))"
          },
          "t_mapping(t_uint32,t_struct(Checkpoint)9482_storage)": {
            "label": "mapping(uint32 => struct WaggyToken.Checkpoint)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_struct(Checkpoint)9482_storage": {
            "label": "struct WaggyToken.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "27cc89d03141700db3d339b156cd24049469e2c8ac69d54b308bb33a6a7fd1e1": {
      "address": "0xa933d4B0d40fFA698997f55ef1212f6a34298852",
      "txHash": "0x8dcbc677fe21ab497fd452cf4b585f511614c9064e0efaf9af3cdeec35d4d0dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Merchant",
            "label": "shopBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:52"
          },
          {
            "contract": "Merchant",
            "label": "shopLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:53"
          },
          {
            "contract": "Merchant",
            "label": "successTransactionCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:54"
          },
          {
            "contract": "Merchant",
            "label": "lockTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:56"
          },
          {
            "contract": "Merchant",
            "label": "lockUserTokenInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/p2p/Merchant.sol:57"
          },
          {
            "contract": "Merchant",
            "label": "totalLockBalance",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/p2p/Merchant.sol:58"
          },
          {
            "contract": "Merchant",
            "label": "buyerInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)6150_storage))",
            "src": "contracts/p2p/Merchant.sol:59"
          },
          {
            "contract": "Merchant",
            "label": "rewardCalculator",
            "type": "t_contract(RewardCalculator)8604",
            "src": "contracts/p2p/Merchant.sol:61"
          },
          {
            "contract": "Merchant",
            "label": "feeCalculator",
            "type": "t_contract(FeeCalculator)6050",
            "src": "contracts/p2p/Merchant.sol:62"
          },
          {
            "contract": "Merchant",
            "label": "feeCollector",
            "type": "t_address",
            "src": "contracts/p2p/Merchant.sol:63"
          },
          {
            "contract": "Merchant",
            "label": "blackListUser",
            "type": "t_contract(BlackListUser)2915",
            "src": "contracts/p2p/Merchant.sol:64"
          },
          {
            "contract": "Merchant",
            "label": "token",
            "type": "t_contract(ERC20)2209",
            "src": "contracts/p2p/Merchant.sol:66"
          },
          {
            "contract": "Merchant",
            "label": "gov",
            "type": "t_contract(ERC20)2209",
            "src": "contracts/p2p/Merchant.sol:67"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)6150_storage))": {
            "label": "mapping(address => mapping(address => struct Merchant.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)6150_storage)": {
            "label": "mapping(address => struct Merchant.UserInfo)"
          },
          "t_struct(UserInfo)6150_storage": {
            "label": "struct Merchant.UserInfo",
            "members": [
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)6145_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Transaction)6145_storage)dyn_storage": {
            "label": "struct Merchant.Transaction[]"
          },
          "t_struct(Transaction)6145_storage": {
            "label": "struct Merchant.Transaction",
            "members": [
              {
                "label": "status",
                "type": "t_enum(TransactionStatus)6131"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "remark",
                "type": "t_string_storage"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              },
              {
                "label": "updateAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_enum(TransactionStatus)6131": {
            "label": "enum Merchant.TransactionStatus",
            "members": [
              "INIT",
              "PENDING_TRANSFER_FAIT",
              "APPEAL",
              "CANCELED",
              "FINISH"
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(RewardCalculator)8604": {
            "label": "contract RewardCalculator"
          },
          "t_contract(FeeCalculator)6050": {
            "label": "contract FeeCalculator"
          },
          "t_contract(BlackListUser)2915": {
            "label": "contract BlackListUser"
          },
          "t_contract(ERC20)2209": {
            "label": "contract ERC20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
